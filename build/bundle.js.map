{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/ical.js/build/ical.js","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/Holidays.svelte","../../src/DayOfMonth.svelte","../../src/DayOfWeek.svelte","../../src/YearMonth.svelte","../../src/Month.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.45.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2021 */\n\n/* jshint ignore:start */\nvar ICAL;\n(function() {\n  /* istanbul ignore next */\n  if (typeof module === 'object') {\n    // CommonJS, where exports may be different each time.\n    ICAL = module.exports;\n  } else if (typeof HTMLScriptElement !== 'undefined' && 'noModule' in HTMLScriptElement.prototype) {\n    // Until we use ES6 exports, using <script type=\"module\"> we define ICAL on the window global.\n    window.ICAL = ICAL = {};\n  } else if (typeof ICAL !== 'object') {\n    ICAL = {};\n  }\n})();\n/* jshint ignore:end */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * The number of characters before iCalendar line folding should occur\n * @type {Number}\n * @default 75\n */\nICAL.foldLength = 75;\n\n\n/**\n * The character(s) to be used for a newline. The default value is provided by\n * rfc5545.\n * @type {String}\n * @default \"\\r\\n\"\n */\nICAL.newLineChar = '\\r\\n';\n\n\n/**\n * Helper functions used in various places within ical.js\n * @namespace\n */\nICAL.helpers = {\n  /**\n   * Compiles a list of all referenced TZIDs in all subcomponents and\n   * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n   * are referenced by a component, but a VTIMEZONE does not exist,\n   * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n   *\n   * @param {ICAL.Component} vcal     The top-level VCALENDAR component.\n   * @return {ICAL.Component}         The ICAL.Component that was passed in.\n   */\n  updateTimezones: function(vcal) {\n    var allsubs, properties, vtimezones, reqTzid, i, tzid;\n\n    if (!vcal || vcal.name !== \"vcalendar\") {\n      //not a top-level vcalendar component\n      return vcal;\n    }\n\n    //Store vtimezone subcomponents in an object reference by tzid.\n    //Store properties from everything else in another array\n    allsubs = vcal.getAllSubcomponents();\n    properties = [];\n    vtimezones = {};\n    for (i = 0; i < allsubs.length; i++) {\n      if (allsubs[i].name === \"vtimezone\") {\n        tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n        vtimezones[tzid] = allsubs[i];\n      } else {\n        properties = properties.concat(allsubs[i].getAllProperties());\n      }\n    }\n\n    //create an object with one entry for each required tz\n    reqTzid = {};\n    for (i = 0; i < properties.length; i++) {\n      if ((tzid = properties[i].getParameter(\"tzid\"))) {\n        reqTzid[tzid] = true;\n      }\n    }\n\n    //delete any vtimezones that are not on the reqTzid list.\n    for (i in vtimezones) {\n      if (vtimezones.hasOwnProperty(i) && !reqTzid[i]) {\n        vcal.removeSubcomponent(vtimezones[i]);\n      }\n    }\n\n    //create any missing, but registered timezones\n    for (i in reqTzid) {\n      if (\n        reqTzid.hasOwnProperty(i) &&\n        !vtimezones[i] &&\n        ICAL.TimezoneService.has(i)\n      ) {\n        vcal.addSubcomponent(ICAL.TimezoneService.get(i).component);\n      }\n    }\n\n    return vcal;\n  },\n\n  /**\n   * Checks if the given type is of the number type and also NaN.\n   *\n   * @param {Number} number     The number to check\n   * @return {Boolean}          True, if the number is strictly NaN\n   */\n  isStrictlyNaN: function(number) {\n    return typeof(number) === 'number' && isNaN(number);\n  },\n\n  /**\n   * Parses a string value that is expected to be an integer, when the valid is\n   * not an integer throws a decoration error.\n   *\n   * @param {String} string     Raw string input\n   * @return {Number}           Parsed integer\n   */\n  strictParseInt: function(string) {\n    var result = parseInt(string, 10);\n\n    if (ICAL.helpers.isStrictlyNaN(result)) {\n      throw new Error(\n        'Could not extract integer from \"' + string + '\"'\n      );\n    }\n\n    return result;\n  },\n\n  /**\n   * Creates or returns a class instance of a given type with the initialization\n   * data if the data is not already an instance of the given type.\n   *\n   * @example\n   * var time = new ICAL.Time(...);\n   * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n   *\n   * (result instanceof ICAL.Time)\n   * // => true\n   *\n   * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n   * (result isntanceof ICAL.Time)\n   * // => true\n   *\n   *\n   * @param {Object} data       object initialization data\n   * @param {Object} type       object type (like ICAL.Time)\n   * @return {?}                An instance of the found type.\n   */\n  formatClassType: function formatClassType(data, type) {\n    if (typeof(data) === 'undefined') {\n      return undefined;\n    }\n\n    if (data instanceof type) {\n      return data;\n    }\n    return new type(data);\n  },\n\n  /**\n   * Identical to indexOf but will only match values when they are not preceded\n   * by a backslash character.\n   *\n   * @param {String} buffer         String to search\n   * @param {String} search         Value to look for\n   * @param {Number} pos            Start position\n   * @return {Number}               The position, or -1 if not found\n   */\n  unescapedIndexOf: function(buffer, search, pos) {\n    while ((pos = buffer.indexOf(search, pos)) !== -1) {\n      if (pos > 0 && buffer[pos - 1] === '\\\\') {\n        pos += 1;\n      } else {\n        return pos;\n      }\n    }\n    return -1;\n  },\n\n  /**\n   * Find the index for insertion using binary search.\n   *\n   * @param {Array} list            The list to search\n   * @param {?} seekVal             The value to insert\n   * @param {function(?,?)} cmpfunc The comparison func, that can\n   *                                  compare two seekVals\n   * @return {Number}               The insert position\n   */\n  binsearchInsert: function(list, seekVal, cmpfunc) {\n    if (!list.length)\n      return 0;\n\n    var low = 0, high = list.length - 1,\n        mid, cmpval;\n\n    while (low <= high) {\n      mid = low + Math.floor((high - low) / 2);\n      cmpval = cmpfunc(seekVal, list[mid]);\n\n      if (cmpval < 0)\n        high = mid - 1;\n      else if (cmpval > 0)\n        low = mid + 1;\n      else\n        break;\n    }\n\n    if (cmpval < 0)\n      return mid; // insertion is displacing, so use mid outright.\n    else if (cmpval > 0)\n      return mid + 1;\n    else\n      return mid;\n  },\n\n  /**\n   * Convenience function for debug output\n   * @private\n   */\n  dumpn: /* istanbul ignore next */ function() {\n    if (!ICAL.debug) {\n      return;\n    }\n\n    if (typeof (console) !== 'undefined' && 'log' in console) {\n      ICAL.helpers.dumpn = function consoleDumpn(input) {\n        console.log(input);\n      };\n    } else {\n      ICAL.helpers.dumpn = function geckoDumpn(input) {\n        dump(input + '\\n');\n      };\n    }\n\n    ICAL.helpers.dumpn(arguments[0]);\n  },\n\n  /**\n   * Clone the passed object or primitive. By default a shallow clone will be\n   * executed.\n   *\n   * @param {*} aSrc            The thing to clone\n   * @param {Boolean=} aDeep    If true, a deep clone will be performed\n   * @return {*}                The copy of the thing\n   */\n  clone: function(aSrc, aDeep) {\n    if (!aSrc || typeof aSrc != \"object\") {\n      return aSrc;\n    } else if (aSrc instanceof Date) {\n      return new Date(aSrc.getTime());\n    } else if (\"clone\" in aSrc) {\n      return aSrc.clone();\n    } else if (Array.isArray(aSrc)) {\n      var arr = [];\n      for (var i = 0; i < aSrc.length; i++) {\n        arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], true) : aSrc[i]);\n      }\n      return arr;\n    } else {\n      var obj = {};\n      for (var name in aSrc) {\n        // uses prototype method to allow use of Object.create(null);\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(aSrc, name)) {\n          if (aDeep) {\n            obj[name] = ICAL.helpers.clone(aSrc[name], true);\n          } else {\n            obj[name] = aSrc[name];\n          }\n        }\n      }\n      return obj;\n    }\n  },\n\n  /**\n   * Performs iCalendar line folding. A line ending character is inserted and\n   * the next line begins with a whitespace.\n   *\n   * @example\n   * SUMMARY:This line will be fold\n   *  ed right in the middle of a word.\n   *\n   * @param {String} aLine      The line to fold\n   * @return {String}           The folded line\n   */\n  foldline: function foldline(aLine) {\n    var result = \"\";\n    var line = aLine || \"\", pos = 0, line_length = 0;\n    //pos counts position in line for the UTF-16 presentation\n    //line_length counts the bytes for the UTF-8 presentation\n    while (line.length) {\n      var cp = line.codePointAt(pos);\n      if (cp < 128) ++line_length;\n      else if (cp < 2048) line_length += 2;//needs 2 UTF-8 bytes\n      else if (cp < 65536) line_length += 3;\n      else line_length += 4; //cp is less than 1114112\n      if (line_length < ICAL.foldLength + 1)\n        pos += cp > 65535 ? 2 : 1;\n      else {\n        result += ICAL.newLineChar + \" \" + line.substring(0, pos);\n        line = line.substring(pos);\n        pos = line_length = 0;\n      }\n    }\n    return result.substr(ICAL.newLineChar.length + 1);\n  },\n\n  /**\n   * Pads the given string or number with zeros so it will have at least two\n   * characters.\n   *\n   * @param {String|Number} data    The string or number to pad\n   * @return {String}               The number padded as a string\n   */\n  pad2: function pad(data) {\n    if (typeof(data) !== 'string') {\n      // handle fractions.\n      if (typeof(data) === 'number') {\n        data = parseInt(data);\n      }\n      data = String(data);\n    }\n\n    var len = data.length;\n\n    switch (len) {\n      case 0:\n        return '00';\n      case 1:\n        return '0' + data;\n      default:\n        return data;\n    }\n  },\n\n  /**\n   * Truncates the given number, correctly handling negative numbers.\n   *\n   * @param {Number} number     The number to truncate\n   * @return {Number}           The truncated number\n   */\n  trunc: function trunc(number) {\n    return (number < 0 ? Math.ceil(number) : Math.floor(number));\n  },\n\n  /**\n   * Poor-man's cross-browser inheritance for JavaScript. Doesn't support all\n   * the features, but enough for our usage.\n   *\n   * @param {Function} base     The base class constructor function.\n   * @param {Function} child    The child class constructor function.\n   * @param {Object} extra      Extends the prototype with extra properties\n   *                              and methods\n   */\n  inherits: function(base, child, extra) {\n    function F() {}\n    F.prototype = base.prototype;\n    child.prototype = new F();\n\n    if (extra) {\n      ICAL.helpers.extend(extra, child.prototype);\n    }\n  },\n\n  /**\n   * Poor-man's cross-browser object extension. Doesn't support all the\n   * features, but enough for our usage. Note that the target's properties are\n   * not overwritten with the source properties.\n   *\n   * @example\n   * var child = ICAL.helpers.extend(parent, {\n   *   \"bar\": 123\n   * });\n   *\n   * @param {Object} source     The object to extend\n   * @param {Object} target     The object to extend with\n   * @return {Object}           Returns the target.\n   */\n  extend: function(source, target) {\n    for (var key in source) {\n      var descr = Object.getOwnPropertyDescriptor(source, key);\n      if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n        Object.defineProperty(target, key, descr);\n      }\n    }\n    return target;\n  }\n};\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/** @namespace ICAL */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.design = (function() {\n  'use strict';\n\n  var FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\n  var TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\n  var FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\n  var TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\n  function createTextType(fromNewline, toNewline) {\n    var result = {\n      matches: /.*/,\n\n      fromICAL: function(aValue, structuredEscape) {\n        return replaceNewline(aValue, fromNewline, structuredEscape);\n      },\n\n      toICAL: function(aValue, structuredEscape) {\n        var regEx = toNewline;\n        if (structuredEscape)\n          regEx = new RegExp(regEx.source + '|' + structuredEscape);\n        return aValue.replace(regEx, function(str) {\n          switch (str) {\n          case \"\\\\\":\n            return \"\\\\\\\\\";\n          case \";\":\n            return \"\\\\;\";\n          case \",\":\n            return \"\\\\,\";\n          case \"\\n\":\n            return \"\\\\n\";\n          /* istanbul ignore next */\n          default:\n            return str;\n          }\n        });\n      }\n    };\n    return result;\n  }\n\n  // default types used multiple times\n  var DEFAULT_TYPE_TEXT = { defaultType: \"text\" };\n  var DEFAULT_TYPE_TEXT_MULTI = { defaultType: \"text\", multiValue: \",\" };\n  var DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: \"text\", structuredValue: \";\" };\n  var DEFAULT_TYPE_INTEGER = { defaultType: \"integer\" };\n  var DEFAULT_TYPE_DATETIME_DATE = { defaultType: \"date-time\", allowedTypes: [\"date-time\", \"date\"] };\n  var DEFAULT_TYPE_DATETIME = { defaultType: \"date-time\" };\n  var DEFAULT_TYPE_URI = { defaultType: \"uri\" };\n  var DEFAULT_TYPE_UTCOFFSET = { defaultType: \"utc-offset\" };\n  var DEFAULT_TYPE_RECUR = { defaultType: \"recur\" };\n  var DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: \"date-and-or-time\", allowedTypes: [\"date-time\", \"date\", \"text\"] };\n\n  function replaceNewlineReplace(string) {\n    switch (string) {\n      case \"\\\\\\\\\":\n        return \"\\\\\";\n      case \"\\\\;\":\n        return \";\";\n      case \"\\\\,\":\n        return \",\";\n      case \"\\\\n\":\n      case \"\\\\N\":\n        return \"\\n\";\n      /* istanbul ignore next */\n      default:\n        return string;\n    }\n  }\n\n  function replaceNewline(value, newline, structuredEscape) {\n    // avoid regex when possible.\n    if (value.indexOf('\\\\') === -1) {\n      return value;\n    }\n    if (structuredEscape)\n      newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape);\n    return value.replace(newline, replaceNewlineReplace);\n  }\n\n  var commonProperties = {\n    \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n    \"url\": DEFAULT_TYPE_URI,\n    \"version\": DEFAULT_TYPE_TEXT,\n    \"uid\": DEFAULT_TYPE_TEXT\n  };\n\n  var commonValues = {\n    \"boolean\": {\n      values: [\"TRUE\", \"FALSE\"],\n\n      fromICAL: function(aValue) {\n        switch (aValue) {\n          case 'TRUE':\n            return true;\n          case 'FALSE':\n            return false;\n          default:\n            //TODO: parser warning\n            return false;\n        }\n      },\n\n      toICAL: function(aValue) {\n        if (aValue) {\n          return 'TRUE';\n        }\n        return 'FALSE';\n      }\n\n    },\n    float: {\n      matches: /^[+-]?\\d+\\.\\d+$/,\n\n      fromICAL: function(aValue) {\n        var parsed = parseFloat(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          // TODO: parser warning\n          return 0.0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    integer: {\n      fromICAL: function(aValue) {\n        var parsed = parseInt(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          return 0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        if (aValue.length < 7) {\n          // no seconds\n          // -0500\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2);\n        } else {\n          // seconds\n          // -050000\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2) +\n                 aValue.substr(7, 2);\n        }\n      },\n\n      fromICAL: function(aValue) {\n        if (aValue.length < 6) {\n          // no seconds\n          // -05:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2);\n        } else {\n          // seconds\n          // -05:00:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2) + ':' +\n                 aValue.substr(5, 2);\n        }\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  };\n\n  var icalParams = {\n    // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n    // enfoce anything aside from it being a valid content line.\n    //\n    // At least some params require - if multi values are used - DQUOTEs\n    // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n    // To indicate this, I introduced the new k/v pair\n    // multiValueSeparateDQuote: true\n    //\n    // \"ALTREP\": { ... },\n\n    // CN just wants a param-value\n    // \"CN\": { ... }\n\n    \"cutype\": {\n      values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n\n    \"delegated-from\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"delegated-to\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    // \"DIR\": { ... }, // See ALTREP\n    \"encoding\": {\n      values: [\"8BIT\", \"BASE64\"]\n    },\n    // \"FMTTYPE\": { ... }, // See ALTREP\n    \"fbtype\": {\n      values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    // \"LANGUAGE\": { ... }, // See ALTREP\n    \"member\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"partstat\": {\n      // TODO These values are actually different per-component\n      values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\",\n               \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"range\": {\n      values: [\"THISANDFUTURE\"]\n    },\n    \"related\": {\n      values: [\"START\", \"END\"]\n    },\n    \"reltype\": {\n      values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"role\": {\n      values: [\"REQ-PARTICIPANT\", \"CHAIR\",\n               \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"rsvp\": {\n      values: [\"TRUE\", \"FALSE\"]\n    },\n    \"sent-by\": {\n      valueType: \"cal-address\"\n    },\n    \"tzid\": {\n      matches: /^\\//\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\",\n               \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\",\n               \"time\", \"uri\", \"utc-offset\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var icalValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n\n    uri: {\n      // TODO\n      /* ... */\n    },\n\n    \"binary\": {\n      decorate: function(aString) {\n        return ICAL.Binary.fromString(aString);\n      },\n\n      undecorate: function(aBinary) {\n        return aBinary.toString();\n      }\n    },\n    \"cal-address\": {\n      // needs to be an uri\n    },\n    \"date\": {\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      /**\n       * undecorates a time object.\n       */\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        // from: 20120901\n        // to: 2012-09-01\n        if (!design.strict && aValue.length >= 15) {\n          // This is probably a date-time, e.g. 20120901T130000Z\n          return icalValues[\"date-time\"].fromICAL(aValue);\n        } else {\n          return aValue.substr(0, 4) + '-' +\n                 aValue.substr(4, 2) + '-' +\n                 aValue.substr(6, 2);\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01\n        // to: 20120901\n        var len = aValue.length;\n\n        if (len == 10) {\n          return aValue.substr(0, 4) +\n                 aValue.substr(5, 2) +\n                 aValue.substr(8, 2);\n        } else if (len >= 19) {\n          return icalValues[\"date-time\"].toICAL(aValue);\n        } else {\n          //TODO: serialize warning?\n          return aValue;\n        }\n\n      }\n    },\n    \"date-time\": {\n      fromICAL: function(aValue) {\n        // from: 20120901T130000\n        // to: 2012-09-01T13:00:00\n        if (!design.strict && aValue.length == 8) {\n          // This is probably a date, e.g. 20120901\n          return icalValues.date.fromICAL(aValue);\n        } else {\n          var result = aValue.substr(0, 4) + '-' +\n                       aValue.substr(4, 2) + '-' +\n                       aValue.substr(6, 2) + 'T' +\n                       aValue.substr(9, 2) + ':' +\n                       aValue.substr(11, 2) + ':' +\n                       aValue.substr(13, 2);\n\n          if (aValue[15] && aValue[15] === 'Z') {\n            result += 'Z';\n          }\n\n          return result;\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01T13:00:00\n        // to: 20120901T130000\n        var len = aValue.length;\n\n        if (len == 10 && !design.strict) {\n          return icalValues.date.toICAL(aValue);\n        } else if (len >= 19) {\n          var result = aValue.substr(0, 4) +\n                       aValue.substr(5, 2) +\n                       // grab the (DDTHH) segment\n                       aValue.substr(8, 5) +\n                       // MM\n                       aValue.substr(14, 2) +\n                       // SS\n                       aValue.substr(17, 2);\n\n          if (aValue[19] && aValue[19] === 'Z') {\n            result += 'Z';\n          }\n          return result;\n        } else {\n          // TODO: error\n          return aValue;\n        }\n      },\n\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateTimeString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    duration: {\n      decorate: function(aValue) {\n        return ICAL.Duration.fromString(aValue);\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    period: {\n\n      fromICAL: function(string) {\n        var parts = string.split('/');\n        parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n        }\n\n        return parts;\n      },\n\n      toICAL: function(parts) {\n        if (!design.strict && parts[0].length == 10) {\n          parts[0] = icalValues.date.toICAL(parts[0]);\n        } else {\n          parts[0] = icalValues['date-time'].toICAL(parts[0]);\n        }\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          if (!design.strict && parts[1].length == 10) {\n            parts[1] = icalValues.date.toICAL(parts[1]);\n          } else {\n            parts[1] = icalValues['date-time'].toICAL(parts[1]);\n          }\n        }\n\n        return parts.join(\"/\");\n      },\n\n      decorate: function(aValue, aProp) {\n        return ICAL.Period.fromJSON(aValue, aProp, !design.strict);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toJSON();\n      }\n    },\n    recur: {\n      fromICAL: function(string) {\n        return ICAL.Recur._stringToData(string, true);\n      },\n\n      toICAL: function(data) {\n        var str = \"\";\n        for (var k in data) {\n          /* istanbul ignore if */\n          if (!Object.prototype.hasOwnProperty.call(data, k)) {\n            continue;\n          }\n          var val = data[k];\n          if (k == \"until\") {\n            if (val.length > 10) {\n              val = icalValues['date-time'].toICAL(val);\n            } else {\n              val = icalValues.date.toICAL(val);\n            }\n          } else if (k == \"wkst\") {\n            if (typeof val === 'number') {\n              val = ICAL.Recur.numericDayToIcalDay(val);\n            }\n          } else if (Array.isArray(val)) {\n            val = val.join(\",\");\n          }\n          str += k.toUpperCase() + \"=\" + val + \";\";\n        }\n        return str.substr(0, str.length - 1);\n      },\n\n      decorate: function decorate(aValue) {\n        return ICAL.Recur.fromData(aValue);\n      },\n\n      undecorate: function(aRecur) {\n        return aRecur.toJSON();\n      }\n    },\n\n    time: {\n      fromICAL: function(aValue) {\n        // from: MMHHSS(Z)?\n        // to: HH:MM:SS(Z)?\n        if (aValue.length < 6) {\n          // TODO: parser exception?\n          return aValue;\n        }\n\n        // HH::MM::SSZ?\n        var result = aValue.substr(0, 2) + ':' +\n                     aValue.substr(2, 2) + ':' +\n                     aValue.substr(4, 2);\n\n        if (aValue[6] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n\n      toICAL: function(aValue) {\n        // from: HH:MM:SS(Z)?\n        // to: MMHHSS(Z)?\n        if (aValue.length < 8) {\n          //TODO: error\n          return aValue;\n        }\n\n        var result = aValue.substr(0, 2) +\n                     aValue.substr(3, 2) +\n                     aValue.substr(6, 2);\n\n        if (aValue[8] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    }\n  });\n\n  var icalProperties = ICAL.helpers.extend(commonProperties, {\n\n    \"action\": DEFAULT_TYPE_TEXT,\n    \"attach\": { defaultType: \"uri\" },\n    \"attendee\": { defaultType: \"cal-address\" },\n    \"calscale\": DEFAULT_TYPE_TEXT,\n    \"class\": DEFAULT_TYPE_TEXT,\n    \"comment\": DEFAULT_TYPE_TEXT,\n    \"completed\": DEFAULT_TYPE_DATETIME,\n    \"contact\": DEFAULT_TYPE_TEXT,\n    \"created\": DEFAULT_TYPE_DATETIME,\n    \"description\": DEFAULT_TYPE_TEXT,\n    \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n    \"dtstamp\": DEFAULT_TYPE_DATETIME,\n    \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n    \"due\": DEFAULT_TYPE_DATETIME_DATE,\n    \"duration\": { defaultType: \"duration\" },\n    \"exdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      multiValue: ','\n    },\n    \"exrule\": DEFAULT_TYPE_RECUR,\n    \"freebusy\": { defaultType: \"period\", multiValue: \",\" },\n    \"geo\": { defaultType: \"float\", structuredValue: \";\" },\n    \"last-modified\": DEFAULT_TYPE_DATETIME,\n    \"location\": DEFAULT_TYPE_TEXT,\n    \"method\": DEFAULT_TYPE_TEXT,\n    \"organizer\": { defaultType: \"cal-address\" },\n    \"percent-complete\": DEFAULT_TYPE_INTEGER,\n    \"priority\": DEFAULT_TYPE_INTEGER,\n    \"prodid\": DEFAULT_TYPE_TEXT,\n    \"related-to\": DEFAULT_TYPE_TEXT,\n    \"repeat\": DEFAULT_TYPE_INTEGER,\n    \"rdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\", \"period\"],\n      multiValue: ',',\n      detectType: function(string) {\n        if (string.indexOf('/') !== -1) {\n          return 'period';\n        }\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n    \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n    \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"rrule\": DEFAULT_TYPE_RECUR,\n    \"sequence\": DEFAULT_TYPE_INTEGER,\n    \"status\": DEFAULT_TYPE_TEXT,\n    \"summary\": DEFAULT_TYPE_TEXT,\n    \"transp\": DEFAULT_TYPE_TEXT,\n    \"trigger\": { defaultType: \"duration\", allowedTypes: [\"duration\", \"date-time\"] },\n    \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzurl\": DEFAULT_TYPE_URI,\n    \"tzid\": DEFAULT_TYPE_TEXT,\n    \"tzname\": DEFAULT_TYPE_TEXT\n  });\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var vcardValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n\n    date: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        if (aValue.length == 8) {\n          return icalValues.date.fromICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 6) {\n          return aValue.substr(0, 4) + '-' + aValue.substr(4);\n        } else {\n          return aValue;\n        }\n      },\n      toICAL: function(aValue) {\n        if (aValue.length == 10) {\n          return icalValues.date.toICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 7) {\n          return aValue.substr(0, 4) + aValue.substr(5);\n        } else {\n          return aValue;\n        }\n      }\n    },\n\n    time: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue, true);\n        var zone = splitzone[0], value = splitzone[1];\n\n        //console.log(\"SPLIT: \",splitzone);\n\n        if (value.length == 6) {\n          value = value.substr(0, 2) + ':' +\n                  value.substr(2, 2) + ':' +\n                  value.substr(4, 2);\n        } else if (value.length == 4 && value[0] != '-') {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2);\n        } else if (value.length == 5) {\n          value = value.substr(0, 3) + ':' + value.substr(3, 2);\n        }\n\n        if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + ':' + zone.substr(3);\n        }\n\n        return value + zone;\n      },\n\n      toICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue);\n        var zone = splitzone[0], value = splitzone[1];\n\n        if (value.length == 8) {\n          value = value.substr(0, 2) +\n                  value.substr(3, 2) +\n                  value.substr(6, 2);\n        } else if (value.length == 5 && value[0] != '-') {\n          value = value.substr(0, 2) + value.substr(3, 2);\n        } else if (value.length == 6) {\n          value = value.substr(0, 3) + value.substr(4, 2);\n        }\n\n        if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + zone.substr(4);\n        }\n\n        return value + zone;\n      },\n\n      _splitZone: function(aValue, isFromIcal) {\n        var lastChar = aValue.length - 1;\n        var signChar = aValue.length - (isFromIcal ? 5 : 6);\n        var sign = aValue[signChar];\n        var zone, value;\n\n        if (aValue[lastChar] == 'Z') {\n          zone = aValue[lastChar];\n          value = aValue.substr(0, lastChar);\n        } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n          zone = aValue.substr(signChar);\n          value = aValue.substr(0, signChar);\n        } else {\n          zone = \"\";\n          value = aValue;\n        }\n\n        return [zone, value];\n      }\n    },\n\n    \"date-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].fromICAL(aValue);\n      },\n\n      toICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].toICAL(aValue);\n      }\n    },\n\n    \"date-and-or-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +\n               (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n      },\n\n      toICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return vcardValues.date.toICAL(parts[0]) +\n               (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n\n      }\n    },\n    timestamp: icalValues['date-time'],\n    \"language-tag\": {\n      matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n    }\n  });\n\n  var vcardParams = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\",\n               \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\",\n               \"language-tag\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcardProperties = ICAL.helpers.extend(commonProperties, {\n    \"adr\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"caladruri\": DEFAULT_TYPE_URI,\n    \"caluri\": DEFAULT_TYPE_URI,\n    \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"email\": DEFAULT_TYPE_TEXT,\n    \"fburl\": DEFAULT_TYPE_URI,\n    \"fn\": DEFAULT_TYPE_TEXT,\n    \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"geo\": DEFAULT_TYPE_URI,\n    \"impp\": DEFAULT_TYPE_URI,\n    \"key\": DEFAULT_TYPE_URI,\n    \"kind\": DEFAULT_TYPE_TEXT,\n    \"lang\": { defaultType: \"language-tag\" },\n    \"logo\": DEFAULT_TYPE_URI,\n    \"member\": DEFAULT_TYPE_URI,\n    \"n\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n    \"note\": DEFAULT_TYPE_TEXT,\n    \"org\": { defaultType: \"text\", structuredValue: \";\" },\n    \"photo\": DEFAULT_TYPE_URI,\n    \"related\": DEFAULT_TYPE_URI,\n    \"rev\": { defaultType: \"timestamp\" },\n    \"role\": DEFAULT_TYPE_TEXT,\n    \"sound\": DEFAULT_TYPE_URI,\n    \"source\": DEFAULT_TYPE_URI,\n    \"tel\": { defaultType: \"uri\", allowedTypes: [\"uri\", \"text\"] },\n    \"title\": DEFAULT_TYPE_TEXT,\n    \"tz\": { defaultType: \"text\", allowedTypes: [\"text\", \"utc-offset\", \"uri\"] },\n    \"xml\": DEFAULT_TYPE_TEXT\n  });\n\n  var vcard3Values = ICAL.helpers.extend(commonValues, {\n    binary: icalValues.binary,\n    date: vcardValues.date,\n    \"date-time\": vcardValues[\"date-time\"],\n    \"phone-number\": {\n      // TODO\n      /* ... */\n    },\n    uri: icalValues.uri,\n    text: icalValues.text,\n    time: icalValues.time,\n    vcard: icalValues.text,\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      fromICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  });\n\n  var vcard3Params = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\",\n               \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcard3Properties = ICAL.helpers.extend(commonProperties, {\n    fn: DEFAULT_TYPE_TEXT,\n    n: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    nickname: DEFAULT_TYPE_TEXT_MULTI,\n    photo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    bday: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n\n    adr: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    label: DEFAULT_TYPE_TEXT,\n\n    tel: { defaultType: \"phone-number\" },\n    email: DEFAULT_TYPE_TEXT,\n    mailer: DEFAULT_TYPE_TEXT,\n\n    tz: { defaultType: \"utc-offset\", allowedTypes: [\"utc-offset\", \"text\"] },\n    geo: { defaultType: \"float\", structuredValue: \";\" },\n\n    title: DEFAULT_TYPE_TEXT,\n    role: DEFAULT_TYPE_TEXT,\n    logo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    agent: { defaultType: \"vcard\", allowedTypes: [\"vcard\", \"text\", \"uri\"] },\n    org: DEFAULT_TYPE_TEXT_STRUCTURED,\n\n    note: DEFAULT_TYPE_TEXT_MULTI,\n    prodid: DEFAULT_TYPE_TEXT,\n    rev: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"sort-string\": DEFAULT_TYPE_TEXT,\n    sound: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n\n    class: DEFAULT_TYPE_TEXT,\n    key: { defaultType: \"binary\", allowedTypes: [\"binary\", \"text\"] }\n  });\n\n  /**\n   * iCalendar design set\n   * @type {ICAL.design.designSet}\n   */\n  var icalSet = {\n    value: icalValues,\n    param: icalParams,\n    property: icalProperties\n  };\n\n  /**\n   * vCard 4.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcardSet = {\n    value: vcardValues,\n    param: vcardParams,\n    property: vcardProperties\n  };\n\n  /**\n   * vCard 3.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcard3Set = {\n    value: vcard3Values,\n    param: vcard3Params,\n    property: vcard3Properties\n  };\n\n  /**\n   * The design data, used by the parser to determine types for properties and\n   * other metadata needed to produce correct jCard/jCal data.\n   *\n   * @alias ICAL.design\n   * @namespace\n   */\n  var design = {\n    /**\n     * A designSet describes value, parameter and property data. It is used by\n     * ther parser and stringifier in components and properties to determine they\n     * should be represented.\n     *\n     * @typedef {Object} designSet\n     * @memberOf ICAL.design\n     * @property {Object} value       Definitions for value types, keys are type names\n     * @property {Object} param       Definitions for params, keys are param names\n     * @property {Object} property    Defintions for properties, keys are property names\n     */\n\n    /**\n     * Can be set to false to make the parser more lenient.\n     */\n    strict: true,\n\n    /**\n     * The default set for new properties and components if none is specified.\n     * @type {ICAL.design.designSet}\n     */\n    defaultSet: icalSet,\n\n    /**\n     * The default type for unknown properties\n     * @type {String}\n     */\n    defaultType: 'unknown',\n\n    /**\n     * Holds the design set for known top-level components\n     *\n     * @type {Object}\n     * @property {ICAL.design.designSet} vcard       vCard VCARD\n     * @property {ICAL.design.designSet} vevent      iCalendar VEVENT\n     * @property {ICAL.design.designSet} vtodo       iCalendar VTODO\n     * @property {ICAL.design.designSet} vjournal    iCalendar VJOURNAL\n     * @property {ICAL.design.designSet} valarm      iCalendar VALARM\n     * @property {ICAL.design.designSet} vtimezone   iCalendar VTIMEZONE\n     * @property {ICAL.design.designSet} daylight    iCalendar DAYLIGHT\n     * @property {ICAL.design.designSet} standard    iCalendar STANDARD\n     *\n     * @example\n     * var propertyName = 'fn';\n     * var componentDesign = ICAL.design.components.vcard;\n     * var propertyDetails = componentDesign.property[propertyName];\n     * if (propertyDetails.defaultType == 'text') {\n     *   // Yep, sure is...\n     * }\n     */\n    components: {\n      vcard: vcardSet,\n      vcard3: vcard3Set,\n      vevent: icalSet,\n      vtodo: icalSet,\n      vjournal: icalSet,\n      valarm: icalSet,\n      vtimezone: icalSet,\n      daylight: icalSet,\n      standard: icalSet\n    },\n\n\n    /**\n     * The design set for iCalendar (rfc5545/rfc7265) components.\n     * @type {ICAL.design.designSet}\n     */\n    icalendar: icalSet,\n\n    /**\n     * The design set for vCard (rfc6350/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard: vcardSet,\n\n    /**\n     * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard3: vcard3Set,\n\n    /**\n     * Gets the design set for the given component name.\n     *\n     * @param {String} componentName        The name of the component\n     * @return {ICAL.design.designSet}      The design set for the component\n     */\n    getDesignSet: function(componentName) {\n      var isInDesign = componentName && componentName in design.components;\n      return isInDesign ? design.components[componentName] : design.defaultSet;\n    }\n  };\n\n  return design;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to convert jCal and jCard data back into\n * iCalendar and vCard.\n * @namespace\n */\nICAL.stringify = (function() {\n  'use strict';\n\n  var LINE_ENDING = '\\r\\n';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * Convert a full jCal/jCard array into a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify\n   * @variation function\n   * @param {Array} jCal    The jCal/jCard document\n   * @return {String}       The stringified iCalendar/vCard document\n   */\n  function stringify(jCal) {\n    if (typeof jCal[0] == \"string\") {\n      // This is a single component\n      jCal = [jCal];\n    }\n\n    var i = 0;\n    var len = jCal.length;\n    var result = '';\n\n    for (; i < len; i++) {\n      result += stringify.component(jCal[i]) + LINE_ENDING;\n    }\n\n    return result;\n  }\n\n  /**\n   * Converts an jCal component array into a ICAL string.\n   * Recursive will resolve sub-components.\n   *\n   * Exact component/property order is not saved all\n   * properties will come before subcomponents.\n   *\n   * @function ICAL.stringify.component\n   * @param {Array} component\n   *        jCal/jCard fragment of a component\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this component\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.component = function(component, designSet) {\n    var name = component[0].toUpperCase();\n    var result = 'BEGIN:' + name + LINE_ENDING;\n\n    var props = component[1];\n    var propIdx = 0;\n    var propLen = props.length;\n\n    var designSetName = component[0];\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (designSetName === 'vcard' && component[1].length > 0 &&\n            !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n      designSetName = \"vcard3\";\n    }\n    designSet = designSet || design.getDesignSet(designSetName);\n\n    for (; propIdx < propLen; propIdx++) {\n      result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n    }\n\n    // Ignore subcomponents if none exist, e.g. in vCard.\n    var comps = component[2] || [];\n    var compIdx = 0;\n    var compLen = comps.length;\n\n    for (; compIdx < compLen; compIdx++) {\n      result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n    }\n\n    result += 'END:' + name;\n    return result;\n  };\n\n  /**\n   * Converts a single jCal/jCard property to a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify.property\n   * @param {Array} property\n   *        jCal/jCard property array\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   * @param {Boolean} noFold\n   *        If true, the line is not folded\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.property = function(property, designSet, noFold) {\n    var name = property[0].toUpperCase();\n    var jsName = property[0];\n    var params = property[1];\n\n    var line = name;\n\n    var paramName;\n    for (paramName in params) {\n      var value = params[paramName];\n\n      /* istanbul ignore else */\n      if (params.hasOwnProperty(paramName)) {\n        var multiValue = (paramName in designSet.param) && designSet.param[paramName].multiValue;\n        if (multiValue && Array.isArray(value)) {\n          if (designSet.param[paramName].multiValueSeparateDQuote) {\n            multiValue = '\"' + multiValue + '\"';\n          }\n          value = value.map(stringify._rfc6868Unescape);\n          value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n        } else {\n          value = stringify._rfc6868Unescape(value);\n        }\n\n\n        line += ';' + paramName.toUpperCase();\n        line += '=' + stringify.propertyValue(value);\n      }\n    }\n\n    if (property.length === 3) {\n      // If there are no values, we must assume a blank value\n      return line + ':';\n    }\n\n    var valueType = property[2];\n\n    if (!designSet) {\n      designSet = design.defaultSet;\n    }\n\n    var propDetails;\n    var multiValue = false;\n    var structuredValue = false;\n    var isDefault = false;\n\n    if (jsName in designSet.property) {\n      propDetails = designSet.property[jsName];\n\n      if ('multiValue' in propDetails) {\n        multiValue = propDetails.multiValue;\n      }\n\n      if (('structuredValue' in propDetails) && Array.isArray(property[3])) {\n        structuredValue = propDetails.structuredValue;\n      }\n\n      if ('defaultType' in propDetails) {\n        if (valueType === propDetails.defaultType) {\n          isDefault = true;\n        }\n      } else {\n        if (valueType === DEFAULT_VALUE_TYPE) {\n          isDefault = true;\n        }\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    }\n\n    // push the VALUE property if type is not the default\n    // for the current property.\n    if (!isDefault) {\n      // value will never contain ;/:/, so we don't escape it here.\n      line += ';VALUE=' + valueType.toUpperCase();\n    }\n\n    line += ':';\n\n    if (multiValue && structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, multiValue, designSet, structuredValue\n      );\n    } else if (multiValue) {\n      line += stringify.multiValue(\n        property.slice(3), multiValue, valueType, null, designSet, false\n      );\n    } else if (structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, null, designSet, structuredValue\n      );\n    } else {\n      line += stringify.value(property[3], valueType, designSet, false);\n    }\n\n    return noFold ? line : ICAL.helpers.foldline(line);\n  };\n\n  /**\n   * Handles escaping of property values that may contain:\n   *\n   *    COLON (:), SEMICOLON (;), or COMMA (,)\n   *\n   * If any of the above are present the result is wrapped\n   * in double quotes.\n   *\n   * @function ICAL.stringify.propertyValue\n   * @param {String} value      Raw property value\n   * @return {String}           Given or escaped value when needed\n   */\n  stringify.propertyValue = function(value) {\n\n    if ((helpers.unescapedIndexOf(value, ',') === -1) &&\n        (helpers.unescapedIndexOf(value, ':') === -1) &&\n        (helpers.unescapedIndexOf(value, ';') === -1)) {\n\n      return value;\n    }\n\n    return '\"' + value + '\"';\n  };\n\n  /**\n   * Converts an array of ical values into a single\n   * string based on a type and a delimiter value (like \",\").\n   *\n   * @function ICAL.stringify.multiValue\n   * @param {Array} values      List of values to convert\n   * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n   * @param {String} type       Lowecase ical value type\n   *        (like boolean, date-time, etc..)\n   * @param {?String} innerMulti If set, each value will again be processed\n   *        Used for structured values\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   *\n   * @return {String}           iCalendar/vCard string for value\n   */\n  stringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {\n    var result = '';\n    var len = values.length;\n    var i = 0;\n\n    for (; i < len; i++) {\n      if (innerMulti && Array.isArray(values[i])) {\n        result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n      } else {\n        result += stringify.value(values[i], type, designSet, structuredValue);\n      }\n\n      if (i !== (len - 1)) {\n        result += delim;\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * Processes a single ical value runs the associated \"toICAL\" method from the\n   * design value type if available to convert the value.\n   *\n   * @function ICAL.stringify.value\n   * @param {String|Number} value       A formatted value\n   * @param {String} type               Lowercase iCalendar/vCard value type\n   *  (like boolean, date-time, etc..)\n   * @return {String}                   iCalendar/vCard value for single value\n   */\n  stringify.value = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n      return designSet.value[type].toICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @param {String} val        The value to unescape\n   * @return {String}           The escaped value\n   */\n  stringify._rfc6868Unescape = function(val) {\n    return val.replace(/[\\n^\"]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { '\"': \"^'\", \"\\n\": \"^n\", \"^\": \"^^\" };\n\n  return stringify;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to parse iCalendar and vCard data.\n * @namespace\n */\nICAL.parse = (function() {\n  'use strict';\n\n  var CHAR = /[^ \\t]/;\n  var MULTIVALUE_DELIMITER = ',';\n  var VALUE_DELIMITER = ':';\n  var PARAM_DELIMITER = ';';\n  var PARAM_NAME_DELIMITER = '=';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var DEFAULT_PARAM_TYPE = 'text';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * An error that occurred during parsing.\n   *\n   * @param {String} message        The error message\n   * @memberof ICAL.parse\n   * @extends {Error}\n   * @class\n   */\n  function ParserError(message) {\n    this.message = message;\n    this.name = 'ParserError';\n\n    try {\n      throw new Error();\n    } catch (e) {\n      if (e.stack) {\n        var split = e.stack.split('\\n');\n        split.shift();\n        this.stack = split.join('\\n');\n      }\n    }\n  }\n\n  ParserError.prototype = Error.prototype;\n\n  /**\n   * Parses iCalendar or vCard data into a raw jCal object. Consult\n   * documentation on the {@tutorial layers|layers of parsing} for more\n   * details.\n   *\n   * @function ICAL.parse\n   * @variation function\n   * @todo Fix the API to be more clear on the return type\n   * @param {String} input      The string data to parse\n   * @return {Object|Object[]}  A single jCal object, or an array thereof\n   */\n  function parser(input) {\n    var state = {};\n    var root = state.component = [];\n\n    state.stack = [root];\n\n    parser._eachLine(input, function(err, line) {\n      parser._handleContentLine(line, state);\n    });\n\n\n    // when there are still items on the stack\n    // throw a fatal error, a component was not closed\n    // correctly in that case.\n    if (state.stack.length > 1) {\n      throw new ParserError(\n        'invalid ical body. component began but did not end'\n      );\n    }\n\n    state = null;\n\n    return (root.length == 1 ? root[0] : root);\n  }\n\n  /**\n   * Parse an iCalendar property value into the jCal for a single property\n   *\n   * @function ICAL.parse.property\n   * @param {String} str\n   *   The iCalendar property string to parse\n   * @param {ICAL.design.designSet=} designSet\n   *   The design data to use for this property\n   * @return {Object}\n   *   The jCal Object containing the property\n   */\n  parser.property = function(str, designSet) {\n    var state = {\n      component: [[], []],\n      designSet: designSet || design.defaultSet\n    };\n    parser._handleContentLine(str, state);\n    return state.component[1][0];\n  };\n\n  /**\n   * Convenience method to parse a component. You can use ICAL.parse() directly\n   * instead.\n   *\n   * @function ICAL.parse.component\n   * @see ICAL.parse(function)\n   * @param {String} str    The iCalendar component string to parse\n   * @return {Object}       The jCal Object containing the component\n   */\n  parser.component = function(str) {\n    return parser(str);\n  };\n\n  // classes & constants\n  parser.ParserError = ParserError;\n\n  /**\n   * The state for parsing content lines from an iCalendar/vCard string.\n   *\n   * @private\n   * @memberof ICAL.parse\n   * @typedef {Object} parserState\n   * @property {ICAL.design.designSet} designSet    The design set to use for parsing\n   * @property {ICAL.Component[]} stack             The stack of components being processed\n   * @property {ICAL.Component} component           The currently active component\n   */\n\n\n  /**\n   * Handles a single line of iCalendar/vCard, updating the state.\n   *\n   * @private\n   * @function ICAL.parse._handleContentLine\n   * @param {String} line               The content line to process\n   * @param {ICAL.parse.parserState}    The current state of the line parsing\n   */\n  parser._handleContentLine = function(line, state) {\n    // break up the parts of the line\n    var valuePos = line.indexOf(VALUE_DELIMITER);\n    var paramPos = line.indexOf(PARAM_DELIMITER);\n\n    var lastParamIndex;\n    var lastValuePos;\n\n    // name of property or begin/end\n    var name;\n    var value;\n    // params is only overridden if paramPos !== -1.\n    // we can't do params = params || {} later on\n    // because it sacrifices ops.\n    var params = {};\n\n    /**\n     * Different property cases\n     *\n     *\n     * 1. RRULE:FREQ=foo\n     *    // FREQ= is not a param but the value\n     *\n     * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n     *    // ROLE= is a param because : has not happened yet\n     */\n      // when the parameter delimiter is after the\n      // value delimiter then it is not a parameter.\n\n    if ((paramPos !== -1 && valuePos !== -1)) {\n      // when the parameter delimiter is after the\n      // value delimiter then it is not a parameter.\n      if (paramPos > valuePos) {\n        paramPos = -1;\n      }\n    }\n\n    var parsedParams;\n    if (paramPos !== -1) {\n      name = line.substring(0, paramPos).toLowerCase();\n      parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet);\n      if (parsedParams[2] == -1) {\n        throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n      }\n      params = parsedParams[0];\n      lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;\n      if ((lastValuePos =\n        line.substring(lastParamIndex).indexOf(VALUE_DELIMITER)) !== -1) {\n        value = line.substring(lastParamIndex + lastValuePos + 1);\n      } else {\n        throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n      }\n    } else if (valuePos !== -1) {\n      // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n      name = line.substring(0, valuePos).toLowerCase();\n      value = line.substring(valuePos + 1);\n\n      if (name === 'begin') {\n        var newComponent = [value.toLowerCase(), [], []];\n        if (state.stack.length === 1) {\n          state.component.push(newComponent);\n        } else {\n          state.component[2].push(newComponent);\n        }\n        state.stack.push(state.component);\n        state.component = newComponent;\n        if (!state.designSet) {\n          state.designSet = design.getDesignSet(state.component[0]);\n        }\n        return;\n      } else if (name === 'end') {\n        state.component = state.stack.pop();\n        return;\n      }\n      // If it is not begin/end, then this is a property with an empty value,\n      // which should be considered valid.\n    } else {\n      /**\n       * Invalid line.\n       * The rational to throw an error is we will\n       * never be certain that the rest of the file\n       * is sane and it is unlikely that we can serialize\n       * the result correctly either.\n       */\n      throw new ParserError(\n        'invalid line (no token \";\" or \":\") \"' + line + '\"'\n      );\n    }\n\n    var valueType;\n    var multiValue = false;\n    var structuredValue = false;\n    var propertyDetails;\n\n    if (name in state.designSet.property) {\n      propertyDetails = state.designSet.property[name];\n\n      if ('multiValue' in propertyDetails) {\n        multiValue = propertyDetails.multiValue;\n      }\n\n      if ('structuredValue' in propertyDetails) {\n        structuredValue = propertyDetails.structuredValue;\n      }\n\n      if (value && 'detectType' in propertyDetails) {\n        valueType = propertyDetails.detectType(value);\n      }\n    }\n\n    // attempt to determine value\n    if (!valueType) {\n      if (!('value' in params)) {\n        if (propertyDetails) {\n          valueType = propertyDetails.defaultType;\n        } else {\n          valueType = DEFAULT_VALUE_TYPE;\n        }\n      } else {\n        // possible to avoid this?\n        valueType = params.value.toLowerCase();\n      }\n    }\n\n    delete params.value;\n\n    /**\n     * Note on `var result` juggling:\n     *\n     * I observed that building the array in pieces has adverse\n     * effects on performance, so where possible we inline the creation.\n     * It is a little ugly but resulted in ~2000 additional ops/sec.\n     */\n\n    var result;\n    if (multiValue && structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else if (multiValue) {\n      result = [name, params, valueType];\n      parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n    } else if (structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else {\n      value = parser._parseValue(value, valueType, state.designSet, false);\n      result = [name, params, valueType, value];\n    }\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (state.component[0] === 'vcard' && state.component[1].length === 0 &&\n            !(name === 'version' && value === '4.0')) {\n      state.designSet = design.getDesignSet(\"vcard3\");\n    }\n    state.component[1].push(result);\n  };\n\n  /**\n   * Parse a value from the raw value into the jCard/jCal value.\n   *\n   * @private\n   * @function ICAL.parse._parseValue\n   * @param {String} value          Original value\n   * @param {String} type           Type of value\n   * @param {Object} designSet      The design data to use for this value\n   * @return {Object} varies on type\n   */\n  parser._parseValue = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n      return designSet.value[type].fromICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Parse parameters from a string to object.\n   *\n   * @function ICAL.parse._parseParameters\n   * @private\n   * @param {String} line           A single unfolded line\n   * @param {Numeric} start         Position to start looking for properties\n   * @param {Object} designSet      The design data to use for this property\n   * @return {Object} key/value pairs\n   */\n  parser._parseParameters = function(line, start, designSet) {\n    var lastParam = start;\n    var pos = 0;\n    var delim = PARAM_NAME_DELIMITER;\n    var result = {};\n    var name, lcname;\n    var value, valuePos = -1;\n    var type, multiValue, mvdelim;\n\n    // find the next '=' sign\n    // use lastParam and pos to find name\n    // check if \" is used if so get value from \"->\"\n    // then increment pos to find next ;\n\n    while ((pos !== false) &&\n           (pos = helpers.unescapedIndexOf(line, delim, pos + 1)) !== -1) {\n\n      name = line.substr(lastParam + 1, pos - lastParam - 1);\n      if (name.length == 0) {\n        throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n      }\n      lcname = name.toLowerCase();\n      mvdelim = false;\n      multiValue = false;\n\n      if (lcname in designSet.param && designSet.param[lcname].valueType) {\n        type = designSet.param[lcname].valueType;\n      } else {\n        type = DEFAULT_PARAM_TYPE;\n      }\n\n      if (lcname in designSet.param) {\n        multiValue = designSet.param[lcname].multiValue;\n        if (designSet.param[lcname].multiValueSeparateDQuote) {\n          mvdelim = parser._rfc6868Escape('\"' + multiValue + '\"');\n        }\n      }\n\n      var nextChar = line[pos + 1];\n      if (nextChar === '\"') {\n        valuePos = pos + 2;\n        pos = helpers.unescapedIndexOf(line, '\"', valuePos);\n        if (multiValue && pos != -1) {\n            var extendedValue = true;\n            while (extendedValue) {\n              if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n                pos = helpers.unescapedIndexOf(line, '\"', pos + 3);\n              } else {\n                extendedValue = false;\n              }\n            }\n          }\n        if (pos === -1) {\n          throw new ParserError(\n            'invalid line (no matching double quote) \"' + line + '\"'\n          );\n        }\n        value = line.substr(valuePos, pos - valuePos);\n        lastParam = helpers.unescapedIndexOf(line, PARAM_DELIMITER, pos);\n        if (lastParam === -1) {\n          pos = false;\n        }\n      } else {\n        valuePos = pos + 1;\n\n        // move to next \";\"\n        var nextPos = helpers.unescapedIndexOf(line, PARAM_DELIMITER, valuePos);\n        var propValuePos = helpers.unescapedIndexOf(line, VALUE_DELIMITER, valuePos);\n        if (propValuePos !== -1 && nextPos > propValuePos) {\n          // this is a delimiter in the property value, let's stop here\n          nextPos = propValuePos;\n          pos = false;\n        } else if (nextPos === -1) {\n          // no \";\"\n          if (propValuePos === -1) {\n            nextPos = line.length;\n          } else {\n            nextPos = propValuePos;\n          }\n          pos = false;\n        } else {\n          lastParam = nextPos;\n          pos = nextPos;\n        }\n\n        value = line.substr(valuePos, nextPos - valuePos);\n      }\n\n      value = parser._rfc6868Escape(value);\n      if (multiValue) {\n        var delimiter = mvdelim || multiValue;\n        value = parser._parseMultiValue(value, delimiter, type, [], null, designSet);\n      } else {\n        value = parser._parseValue(value, type, designSet);\n      }\n\n      if (multiValue && (lcname in result)) {\n        if (Array.isArray(result[lcname])) {\n          result[lcname].push(value);\n        } else {\n          result[lcname] = [\n            result[lcname],\n            value\n          ];\n        }\n      } else {\n        result[lcname] = value;\n      }\n    }\n    return [result, value, valuePos];\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @function ICAL.parse._rfc6868Escape\n   * @param {String} val        The value to escape\n   * @return {String}           The escaped value\n   */\n  parser._rfc6868Escape = function(val) {\n    return val.replace(/\\^['n^]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { \"^'\": '\"', \"^n\": \"\\n\", \"^^\": \"^\" };\n\n  /**\n   * Parse a multi value string. This function is used either for parsing\n   * actual multi-value property's values, or for handling parameter values. It\n   * can be used for both multi-value properties and structured value properties.\n   *\n   * @private\n   * @function ICAL.parse._parseMultiValue\n   * @param {String} buffer     The buffer containing the full value\n   * @param {String} delim      The multi-value delimiter\n   * @param {String} type       The value type to be parsed\n   * @param {Array.<?>} result        The array to append results to, varies on value type\n   * @param {String} innerMulti The inner delimiter to split each value with\n   * @param {ICAL.design.designSet} designSet   The design data for this value\n   * @return {?|Array.<?>}            Either an array of results, or the first result\n   */\n  parser._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n    var pos = 0;\n    var lastPos = 0;\n    var value;\n    if (delim.length === 0) {\n      return buffer;\n    }\n\n    // split each piece\n    while ((pos = helpers.unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n      value = buffer.substr(lastPos, pos - lastPos);\n      if (innerMulti) {\n        value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n      } else {\n        value = parser._parseValue(value, type, designSet, structuredValue);\n      }\n      result.push(value);\n      lastPos = pos + delim.length;\n    }\n\n    // on the last piece take the rest of string\n    value = buffer.substr(lastPos);\n    if (innerMulti) {\n      value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parser._parseValue(value, type, designSet, structuredValue);\n    }\n    result.push(value);\n\n    return result.length == 1 ? result[0] : result;\n  };\n\n  /**\n   * Process a complete buffer of iCalendar/vCard data line by line, correctly\n   * unfolding content. Each line will be processed with the given callback\n   *\n   * @private\n   * @function ICAL.parse._eachLine\n   * @param {String} buffer                         The buffer to process\n   * @param {function(?String, String)} callback    The callback for each line\n   */\n  parser._eachLine = function(buffer, callback) {\n    var len = buffer.length;\n    var lastPos = buffer.search(CHAR);\n    var pos = lastPos;\n    var line;\n    var firstChar;\n\n    var newlineOffset;\n\n    do {\n      pos = buffer.indexOf('\\n', lastPos) + 1;\n\n      if (pos > 1 && buffer[pos - 2] === '\\r') {\n        newlineOffset = 2;\n      } else {\n        newlineOffset = 1;\n      }\n\n      if (pos === 0) {\n        pos = len;\n        newlineOffset = 0;\n      }\n\n      firstChar = buffer[lastPos];\n\n      if (firstChar === ' ' || firstChar === '\\t') {\n        // add to line\n        line += buffer.substr(\n          lastPos + 1,\n          pos - lastPos - (newlineOffset + 1)\n        );\n      } else {\n        if (line)\n          callback(null, line);\n        // push line\n        line = buffer.substr(\n          lastPos,\n          pos - lastPos - newlineOffset\n        );\n      }\n\n      lastPos = pos;\n    } while (pos !== len);\n\n    // extra ending line\n    line = line.trim();\n\n    if (line.length)\n      callback(null, line);\n  };\n\n  return parser;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Component = (function() {\n  'use strict';\n\n  var PROPERTY_INDEX = 1;\n  var COMPONENT_INDEX = 2;\n  var NAME_INDEX = 0;\n\n  /**\n   * @classdesc\n   * Wraps a jCal component, adding convenience methods to add, remove and\n   * update subcomponents and properties.\n   *\n   * @class\n   * @alias ICAL.Component\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {ICAL.Component} parent     Parent component to associate\n   */\n  function Component(jCal, parent) {\n    if (typeof(jCal) === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    }\n\n    // mostly for legacy reasons.\n    this.jCal = jCal;\n\n    this.parent = parent || null;\n  }\n\n  Component.prototype = {\n    /**\n     * Hydrated properties are inserted into the _properties array at the same\n     * position as in the jCal array, so it is possible that the array contains\n     * undefined values for unhydrdated properties. To avoid iterating the\n     * array when checking if all properties have been hydrated, we save the\n     * count here.\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedPropertyCount: 0,\n\n    /**\n     * The same count as for _hydratedPropertyCount, but for subcomponents\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedComponentCount: 0,\n\n    /**\n     * The name of this component\n     * @readonly\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The design set for this component, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      var parentDesign = this.parent && this.parent._designSet;\n      return parentDesign || ICAL.design.getDesignSet(this.name);\n    },\n\n    _hydrateComponent: function(index) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (this._components[index]) {\n        return this._components[index];\n      }\n\n      var comp = new Component(\n        this.jCal[COMPONENT_INDEX][index],\n        this\n      );\n\n      this._hydratedComponentCount++;\n      return (this._components[index] = comp);\n    },\n\n    _hydrateProperty: function(index) {\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (this._properties[index]) {\n        return this._properties[index];\n      }\n\n      var prop = new ICAL.Property(\n        this.jCal[PROPERTY_INDEX][index],\n        this\n      );\n\n      this._hydratedPropertyCount++;\n      return (this._properties[index] = prop);\n    },\n\n    /**\n     * Finds first sub component, optionally filtered by name.\n     *\n     * @param {String=} name        Optional name to filter by\n     * @return {?ICAL.Component}     The found subcomponent\n     */\n    getFirstSubcomponent: function(name) {\n      if (name) {\n        var i = 0;\n        var comps = this.jCal[COMPONENT_INDEX];\n        var len = comps.length;\n\n        for (; i < len; i++) {\n          if (comps[i][NAME_INDEX] === name) {\n            var result = this._hydrateComponent(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[COMPONENT_INDEX].length) {\n          return this._hydrateComponent(0);\n        }\n      }\n\n      // ensure we return a value (strict mode)\n      return null;\n    },\n\n    /**\n     * Finds all sub components, optionally filtering by name.\n     *\n     * @param {String=} name            Optional name to filter by\n     * @return {ICAL.Component[]}       The found sub components\n     */\n    getAllSubcomponents: function(name) {\n      var jCalLen = this.jCal[COMPONENT_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var comps = this.jCal[COMPONENT_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === comps[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateComponent(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._components ||\n            (this._hydratedComponentCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateComponent(i);\n          }\n        }\n\n        return this._components || [];\n      }\n    },\n\n    /**\n     * Returns true when a named property exists.\n     *\n     * @param {String} name     The property name\n     * @return {Boolean}        True, when property is found\n     */\n    hasProperty: function(name) {\n      var props = this.jCal[PROPERTY_INDEX];\n      var len = props.length;\n\n      var i = 0;\n      for (; i < len; i++) {\n        // 0 is property name\n        if (props[i][NAME_INDEX] === name) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Finds the first property, optionally with the given name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {?ICAL.Property}     The found property\n     */\n    getFirstProperty: function(name) {\n      if (name) {\n        var i = 0;\n        var props = this.jCal[PROPERTY_INDEX];\n        var len = props.length;\n\n        for (; i < len; i++) {\n          if (props[i][NAME_INDEX] === name) {\n            var result = this._hydrateProperty(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[PROPERTY_INDEX].length) {\n          return this._hydrateProperty(0);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns first property's value, if available.\n     *\n     * @param {String=} name    Lowercase property name\n     * @return {?String}        The found property value.\n     */\n    getFirstPropertyValue: function(name) {\n      var prop = this.getFirstProperty(name);\n      if (prop) {\n        return prop.getFirstValue();\n      }\n\n      return null;\n    },\n\n    /**\n     * Get all properties in the component, optionally filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {ICAL.Property[]}    List of properties\n     */\n    getAllProperties: function(name) {\n      var jCalLen = this.jCal[PROPERTY_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var props = this.jCal[PROPERTY_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === props[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateProperty(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._properties ||\n            (this._hydratedPropertyCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateProperty(i);\n          }\n        }\n\n        return this._properties || [];\n      }\n    },\n\n    _removeObjectByIndex: function(jCalIndex, cache, index) {\n      cache = cache || [];\n      // remove cached version\n      if (cache[index]) {\n        var obj = cache[index];\n        if (\"parent\" in obj) {\n            obj.parent = null;\n        }\n      }\n\n      cache.splice(index, 1);\n\n      // remove it from the jCal\n      this.jCal[jCalIndex].splice(index, 1);\n    },\n\n    _removeObject: function(jCalIndex, cache, nameOrObject) {\n      var i = 0;\n      var objects = this.jCal[jCalIndex];\n      var len = objects.length;\n      var cached = this[cache];\n\n      if (typeof(nameOrObject) === 'string') {\n        for (; i < len; i++) {\n          if (objects[i][NAME_INDEX] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      } else if (cached) {\n        for (; i < len; i++) {\n          if (cached[i] && cached[i] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    _removeAllObjects: function(jCalIndex, cache, name) {\n      var cached = this[cache];\n\n      // Unfortunately we have to run through all children to reset their\n      // parent property.\n      var objects = this.jCal[jCalIndex];\n      var i = objects.length - 1;\n\n      // descending search required because splice\n      // is used and will effect the indices.\n      for (; i >= 0; i--) {\n        if (!name || objects[i][NAME_INDEX] === name) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n        }\n      }\n    },\n\n    /**\n     * Adds a single sub component.\n     *\n     * @param {ICAL.Component} component        The component to add\n     * @return {ICAL.Component}                 The passed in component\n     */\n    addSubcomponent: function(component) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (component.parent) {\n        component.parent.removeSubcomponent(component);\n      }\n\n      var idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n      this._components[idx - 1] = component;\n      this._hydratedComponentCount++;\n      component.parent = this;\n      return component;\n    },\n\n    /**\n     * Removes a single component by name or the instance of a specific\n     * component.\n     *\n     * @param {ICAL.Component|String} nameOrComp    Name of component, or component\n     * @return {Boolean}                            True when comp is removed\n     */\n    removeSubcomponent: function(nameOrComp) {\n      var removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n      if (removed) {\n        this._hydratedComponentCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all components or (if given) all components by a particular\n     * name.\n     *\n     * @param {String=} name            Lowercase component name\n     */\n    removeAllSubcomponents: function(name) {\n      var removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n      this._hydratedComponentCount = 0;\n      return removed;\n    },\n\n    /**\n     * Adds an {@link ICAL.Property} to the component.\n     *\n     * @param {ICAL.Property} property      The property to add\n     * @return {ICAL.Property}              The passed in property\n     */\n    addProperty: function(property) {\n      if (!(property instanceof ICAL.Property)) {\n        throw new TypeError('must instance of ICAL.Property');\n      }\n\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (property.parent) {\n        property.parent.removeProperty(property);\n      }\n\n      var idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n      this._properties[idx - 1] = property;\n      this._hydratedPropertyCount++;\n      property.parent = this;\n      return property;\n    },\n\n    /**\n     * Helper method to add a property with a value to the component.\n     *\n     * @param {String}               name         Property name to add\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    addPropertyWithValue: function(name, value) {\n      var prop = new ICAL.Property(name);\n      prop.setValue(value);\n\n      this.addProperty(prop);\n\n      return prop;\n    },\n\n    /**\n     * Helper method that will update or create a property of the given name\n     * and sets its value. If multiple properties with the given name exist,\n     * only the first is updated.\n     *\n     * @param {String}               name         Property name to update\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    updatePropertyWithValue: function(name, value) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        prop.setValue(value);\n      } else {\n        prop = this.addPropertyWithValue(name, value);\n      }\n\n      return prop;\n    },\n\n    /**\n     * Removes a single property by name or the instance of the specific\n     * property.\n     *\n     * @param {String|ICAL.Property} nameOrProp     Property name or instance to remove\n     * @return {Boolean}                            True, when deleted\n     */\n    removeProperty: function(nameOrProp) {\n      var removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n      if (removed) {\n        this._hydratedPropertyCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all properties associated with this component, optionally\n     * filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {Boolean}            True, when deleted\n     */\n    removeAllProperties: function(name) {\n      var removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n      this._hydratedPropertyCount = 0;\n      return removed;\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toString: function() {\n      return ICAL.stringify.component(\n        this.jCal, this._designSet\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n  Component.fromString = function(str) {\n    return new Component(ICAL.parse.component(str));\n  };\n\n  return Component;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Property = (function() {\n  'use strict';\n\n  var NAME_INDEX = 0;\n  var PROP_INDEX = 1;\n  var TYPE_INDEX = 2;\n  var VALUE_INDEX = 3;\n\n  var design = ICAL.design;\n\n  /**\n   * @classdesc\n   * Provides a layer on top of the raw jCal object for manipulating a single\n   * property, with its parameters and value.\n   *\n   * @description\n   * It is important to note that mutations done in the wrapper\n   * directly mutate the jCal object used to initialize.\n   *\n   * Can also be used to create new properties by passing\n   * the name of the property (as a String).\n   *\n   * @class\n   * @alias ICAL.Property\n   * @param {Array|String} jCal         Raw jCal representation OR\n   *  the new name of the property\n   *\n   * @param {ICAL.Component=} parent    Parent component\n   */\n  function Property(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof(jCal) === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n    this._updateType();\n  }\n\n  Property.prototype = {\n\n    /**\n     * The value type for this property\n     * @readonly\n     * @type {String}\n     */\n    get type() {\n      return this.jCal[TYPE_INDEX];\n    },\n\n    /**\n     * The name of this property, in lowercase.\n     * @readonly\n     * @type {String}\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The parent component for this property.\n     * @type {ICAL.Component}\n     */\n    get parent() {\n      return this._parent;\n    },\n\n    set parent(p) {\n      // Before setting the parent, check if the design set has changed. If it\n      // has, we later need to update the type if it was unknown before.\n      var designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);\n\n      this._parent = p;\n\n      if (this.type == design.defaultType && designSetChanged) {\n        this.jCal[TYPE_INDEX] = this.getDefaultType();\n        this._updateType();\n      }\n\n      return p;\n    },\n\n    /**\n     * The design set for this property, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      return this.parent ? this.parent._designSet : design.defaultSet;\n    },\n\n    /**\n     * Updates the type metadata from the current jCal type and design set.\n     *\n     * @private\n     */\n    _updateType: function() {\n      var designSet = this._designSet;\n\n      if (this.type in designSet.value) {\n        var designType = designSet.value[this.type];\n\n        if ('decorate' in designSet.value[this.type]) {\n          this.isDecorated = true;\n        } else {\n          this.isDecorated = false;\n        }\n\n        if (this.name in designSet.property) {\n          this.isMultiValue = ('multiValue' in designSet.property[this.name]);\n          this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);\n        }\n      }\n    },\n\n    /**\n     * Hydrate a single value. The act of hydrating means turning the raw jCal\n     * value into a potentially wrapped object, for example {@link ICAL.Time}.\n     *\n     * @private\n     * @param {Number} index        The index of the value to hydrate\n     * @return {Object}             The decorated value.\n     */\n    _hydrateValue: function(index) {\n      if (this._values && this._values[index]) {\n        return this._values[index];\n      }\n\n      // for the case where there is no value.\n      if (this.jCal.length <= (VALUE_INDEX + index)) {\n        return null;\n      }\n\n      if (this.isDecorated) {\n        if (!this._values) {\n          this._values = [];\n        }\n        return (this._values[index] = this._decorate(\n          this.jCal[VALUE_INDEX + index]\n        ));\n      } else {\n        return this.jCal[VALUE_INDEX + index];\n      }\n    },\n\n    /**\n     * Decorate a single value, returning its wrapped object. This is used by\n     * the hydrate function to actually wrap the value.\n     *\n     * @private\n     * @param {?} value         The value to decorate\n     * @return {Object}         The decorated value\n     */\n    _decorate: function(value) {\n      return this._designSet.value[this.type].decorate(value, this);\n    },\n\n    /**\n     * Undecorate a single value, returning its raw jCal data.\n     *\n     * @private\n     * @param {Object} value         The value to undecorate\n     * @return {?}                   The undecorated value\n     */\n    _undecorate: function(value) {\n      return this._designSet.value[this.type].undecorate(value, this);\n    },\n\n    /**\n     * Sets the value at the given index while also hydrating it. The passed\n     * value can either be a decorated or undecorated value.\n     *\n     * @private\n     * @param {?} value             The value to set\n     * @param {Number} index        The index to set it at\n     */\n    _setDecoratedValue: function(value, index) {\n      if (!this._values) {\n        this._values = [];\n      }\n\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        // decorated value\n        this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n        this._values[index] = value;\n      } else {\n        // undecorated value\n        this.jCal[VALUE_INDEX + index] = value;\n        this._values[index] = this._decorate(value);\n      }\n    },\n\n    /**\n     * Gets a parameter on the property.\n     *\n     * @param {String}        name   Parameter name (lowercase)\n     * @return {Array|String}        Parameter value\n     */\n    getParameter: function(name) {\n      if (name in this.jCal[PROP_INDEX]) {\n        return this.jCal[PROP_INDEX][name];\n      } else {\n        return undefined;\n      }\n    },\n\n    /**\n     * Gets first parameter on the property.\n     *\n     * @param {String}        name   Parameter name (lowercase)\n     * @return {String}        Parameter value\n     */\n    getFirstParameter: function(name) {\n      var parameters = this.getParameter(name);\n\n      if (Array.isArray(parameters)) {\n        return parameters[0];\n      }\n\n      return parameters;\n    },\n\n    /**\n     * Sets a parameter on the property.\n     *\n     * @param {String}       name     The parameter name\n     * @param {Array|String} value    The parameter value\n     */\n    setParameter: function(name, value) {\n      var lcname = name.toLowerCase();\n      if (typeof value === \"string\" &&\n          lcname in this._designSet.param &&\n          'multiValue' in this._designSet.param[lcname]) {\n          value = [value];\n      }\n      this.jCal[PROP_INDEX][name] = value;\n    },\n\n    /**\n     * Removes a parameter\n     *\n     * @param {String} name     The parameter name\n     */\n    removeParameter: function(name) {\n      delete this.jCal[PROP_INDEX][name];\n    },\n\n    /**\n     * Get the default type based on this property's name.\n     *\n     * @return {String}     The default type for this property\n     */\n    getDefaultType: function() {\n      var name = this.jCal[NAME_INDEX];\n      var designSet = this._designSet;\n\n      if (name in designSet.property) {\n        var details = designSet.property[name];\n        if ('defaultType' in details) {\n          return details.defaultType;\n        }\n      }\n      return design.defaultType;\n    },\n\n    /**\n     * Sets type of property and clears out any existing values of the current\n     * type.\n     *\n     * @param {String} type     New iCAL type (see design.*.values)\n     */\n    resetType: function(type) {\n      this.removeAllValues();\n      this.jCal[TYPE_INDEX] = type;\n      this._updateType();\n    },\n\n    /**\n     * Finds the first property value.\n     *\n     * @return {String}         First property value\n     */\n    getFirstValue: function() {\n      return this._hydrateValue(0);\n    },\n\n    /**\n     * Gets all values on the property.\n     *\n     * NOTE: this creates an array during each call.\n     *\n     * @return {Array}          List of values\n     */\n    getValues: function() {\n      var len = this.jCal.length - VALUE_INDEX;\n\n      if (len < 1) {\n        // it is possible for a property to have no value.\n        return [];\n      }\n\n      var i = 0;\n      var result = [];\n\n      for (; i < len; i++) {\n        result[i] = this._hydrateValue(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Removes all values from this property\n     */\n    removeAllValues: function() {\n      if (this._values) {\n        this._values.length = 0;\n      }\n      this.jCal.length = 3;\n    },\n\n    /**\n     * Sets the values of the property.  Will overwrite the existing values.\n     * This can only be used for multi-value properties.\n     *\n     * @param {Array} values    An array of values\n     */\n    setValues: function(values) {\n      if (!this.isMultiValue) {\n        throw new Error(\n          this.name + ': does not not support mulitValue.\\n' +\n          'override isMultiValue'\n        );\n      }\n\n      var len = values.length;\n      var i = 0;\n      this.removeAllValues();\n\n      if (len > 0 &&\n          typeof(values[0]) === 'object' &&\n          'icaltype' in values[0]) {\n        this.resetType(values[0].icaltype);\n      }\n\n      if (this.isDecorated) {\n        for (; i < len; i++) {\n          this._setDecoratedValue(values[i], i);\n        }\n      } else {\n        for (; i < len; i++) {\n          this.jCal[VALUE_INDEX + i] = values[i];\n        }\n      }\n    },\n\n    /**\n     * Sets the current value of the property. If this is a multi-value\n     * property, all other values will be removed.\n     *\n     * @param {String|Object} value     New property value.\n     */\n    setValue: function(value) {\n      this.removeAllValues();\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        this.resetType(value.icaltype);\n      }\n\n      if (this.isDecorated) {\n        this._setDecoratedValue(value, 0);\n      } else {\n        this.jCal[VALUE_INDEX] = value;\n      }\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.stringify.property(\n        this.jCal, this._designSet, true\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str                        The iCalendar string to parse\n   * @param {ICAL.design.designSet=} designSet  The design data to use for this property\n   * @return {ICAL.Property}                    The created iCalendar property\n   */\n  Property.fromString = function(str, designSet) {\n    return new Property(ICAL.parse.property(str, designSet));\n  };\n\n  return Property;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.UtcOffset = (function() {\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.UtcOffset\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  function UtcOffset(aData) {\n    this.fromData(aData);\n  }\n\n  UtcOffset.prototype = {\n\n    /**\n     * The hours in the utc-offset\n     * @type {Number}\n     */\n    hours: 0,\n\n    /**\n     * The minutes in the utc-offset\n     * @type {Number}\n     */\n    minutes: 0,\n\n    /**\n     * The sign of the utc offset, 1 for positive offset, -1 for negative\n     * offsets.\n     * @type {Number}\n     */\n    factor: 1,\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"utc-offset\"\n     */\n    icaltype: \"utc-offset\",\n\n    /**\n     * Returns a clone of the utc offset object.\n     *\n     * @return {ICAL.UtcOffset}     The cloned object\n     */\n    clone: function() {\n      return ICAL.UtcOffset.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData          An object with members of the utc offset\n     * @param {Number=} aData.hours   The hours for the utc offset\n     * @param {Number=} aData.minutes The minutes in the utc offset\n     * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n     */\n    fromData: function(aData) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (aData.hasOwnProperty(key)) {\n            this[key] = aData[key];\n          }\n        }\n      }\n      this._normalize();\n    },\n\n    /**\n     * Sets up the current instance from the given seconds value. The seconds\n     * value is truncated to the minute. Offsets are wrapped when the world\n     * ends, the hour after UTC+14:00 is UTC-12:00.\n     *\n     * @param {Number} aSeconds         The seconds to convert into an offset\n     */\n    fromSeconds: function(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.factor = aSeconds < 0 ? -1 : 1;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n\n      secs -= (this.hours * 3600);\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      return this;\n    },\n\n    /**\n     * Convert the current offset to a value in seconds\n     *\n     * @return {Number}                 The offset in seconds\n     */\n    toSeconds: function() {\n      return this.factor * (60 * this.minutes + 3600 * this.hours);\n    },\n\n    /**\n     * Compare this utc offset with another one.\n     *\n     * @param {ICAL.UtcOffset} other        The other offset to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toSeconds();\n      var b = other.toSeconds();\n      return (a > b) - (b > a);\n    },\n\n    _normalize: function() {\n      // Range: 97200 seconds (with 1 hour inbetween)\n      var secs = this.toSeconds();\n      var factor = this.factor;\n      while (secs < -43200) { // = UTC-12:00\n        secs += 97200;\n      }\n      while (secs > 50400) { // = UTC+14:00\n        secs -= 97200;\n      }\n\n      this.fromSeconds(secs);\n\n      // Avoid changing the factor when on zero seconds\n      if (secs == 0) {\n        this.factor = factor;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this utc-offset.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.design.icalendar.value['utc-offset'].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this utc-offset.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.factor == 1 ? \"+\" : \"-\") +\n              ICAL.helpers.pad2(this.hours) + ':' +\n              ICAL.helpers.pad2(this.minutes);\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {ICAL.Duration}    The created utc-offset instance\n   */\n  UtcOffset.fromString = function(aString) {\n    // -05:00\n    var options = {};\n    //TODO: support seconds per rfc5545 ?\n    options.factor = (aString[0] === '+') ? 1 : -1;\n    options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2));\n    options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2));\n\n    return new ICAL.UtcOffset(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n  UtcOffset.fromSeconds = function(aSeconds) {\n    var instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  };\n\n  return UtcOffset;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Binary = (function() {\n\n  /**\n   * @classdesc\n   * Represents the BINARY value type, which contains extra methods for\n   * encoding and decoding.\n   *\n   * @class\n   * @alias ICAL.Binary\n   * @param {String} aValue     The binary data for this value\n   */\n  function Binary(aValue) {\n    this.value = aValue;\n  }\n\n  Binary.prototype = {\n    /**\n     * The type name, to be used in the jCal object.\n     * @default \"binary\"\n     * @constant\n     */\n    icaltype: \"binary\",\n\n    /**\n     * Base64 decode the current value\n     *\n     * @return {String}         The base64-decoded value\n     */\n    decodeValue: function decodeValue() {\n      return this._b64_decode(this.value);\n    },\n\n    /**\n     * Encodes the passed parameter with base64 and sets the internal\n     * value to the result.\n     *\n     * @param {String} aValue      The raw binary value to encode\n     */\n    setEncodedValue: function setEncodedValue(aValue) {\n      this.value = this._b64_encode(aValue);\n    },\n\n    _b64_encode: function base64_encode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Bayron Guevara\n      // +   improved by: Thunder.m\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   improved by: Rafał Kukawski (http://kukawski.pl)\n      // *     example 1: base64_encode('Kevin van Zonneveld');\n      // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['atob'] == 'function') {\n      //    return atob(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        enc = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1 << 16 | o2 << 8 | o3;\n\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n      } while (i < data.length);\n\n      enc = tmp_arr.join('');\n\n      var r = data.length % 3;\n\n      return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n    },\n\n    _b64_decode: function base64_decode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Thunder.m\n      // +      input by: Aman Gupta\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Onno Marsman\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +      input by: Brett Zamir (http://brett-zamir.me)\n      // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n      // *     returns 1: 'Kevin van Zonneveld'\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['btoa'] == 'function') {\n      //    return btoa(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        dec = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      data += '';\n\n      do { // unpack four hexets into three octets using index points in b64\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n\n        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n        o1 = bits >> 16 & 0xff;\n        o2 = bits >> 8 & 0xff;\n        o3 = bits & 0xff;\n\n        if (h3 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n      } while (i < data.length);\n\n      dec = tmp_arr.join('');\n\n      return dec;\n    },\n\n    /**\n     * The string representation of this value\n     * @return {String}\n     */\n    toString: function() {\n      return this.value;\n    }\n  };\n\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {ICAL.Binary}          The binary value instance\n   */\n  Binary.fromString = function(aString) {\n    return new Binary(aString);\n  };\n\n  return Binary;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  /**\n   * @classdesc\n   * This class represents the \"period\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @description\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @class\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   */\n  ICAL.Period = function icalperiod(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof ICAL.Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof ICAL.Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof ICAL.Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n      this.duration = aData.duration;\n    }\n  };\n\n  ICAL.Period.prototype = {\n\n    /**\n     * The start of the period\n     * @type {ICAL.Time}\n     */\n    start: null,\n\n    /**\n     * The end of the period\n     * @type {ICAL.Time}\n     */\n    end: null,\n\n    /**\n     * The duration of the period\n     * @type {ICAL.Duration}\n     */\n    duration: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalperiod\"\n     */\n    icalclass: \"icalperiod\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"period\"\n     */\n    icaltype: \"period\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Period}      The cloned object\n     */\n    clone: function() {\n      return ICAL.Period.fromData({\n        start: this.start ? this.start.clone() : null,\n        end: this.end ? this.end.clone() : null,\n        duration: this.duration ? this.duration.clone() : null\n      });\n    },\n\n    /**\n     * Calculates the duration of the period, either directly or by subtracting\n     * start from end date.\n     *\n     * @return {ICAL.Duration}      The calculated duration\n     */\n    getDuration: function duration() {\n      if (this.duration) {\n        return this.duration;\n      } else {\n        return this.end.subtractDate(this.start);\n      }\n    },\n\n    /**\n     * Calculates the end date of the period, either directly or by adding\n     * duration to start date.\n     *\n     * @return {ICAL.Time}          The calculated end date\n     */\n    getEnd: function() {\n      if (this.end) {\n        return this.end;\n      } else {\n        var end = this.start.clone();\n        end.addDuration(this.duration);\n        return end;\n      }\n    },\n\n    /**\n     * The string representation of this period.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.start + \"/\" + (this.end || this.duration);\n    },\n\n    /**\n     * The jCal representation of this period type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return [this.start.toString(), (this.end || this.duration).toString()];\n    },\n\n    /**\n     * The iCalendar string representation of this period.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.start.toICALString() + \"/\" +\n             (this.end || this.duration).toICALString();\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {ICAL.Property} prop    The property this period will be on\n   * @return {ICAL.Period}          The created period instance\n   */\n  ICAL.Period.fromString = function fromString(str, prop) {\n    var parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error(\n        'Invalid string value: \"' + str + '\" must contain a \"/\" char.'\n      );\n    }\n\n    var options = {\n      start: ICAL.Time.fromDateTimeString(parts[0], prop)\n    };\n\n    var end = parts[1];\n\n    if (ICAL.Duration.isValueString(end)) {\n      options.duration = ICAL.Duration.fromString(end);\n    } else {\n      options.end = ICAL.Time.fromDateTimeString(end, prop);\n    }\n\n    return new ICAL.Period(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromData = function fromData(aData) {\n    return new ICAL.Period(aData);\n  };\n\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {Array<String,String>} aData    The jCal data array\n   * @param {ICAL.Property} aProp           The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromJSON = function(aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, aProp) {\n      if (aLenient) {\n        return ICAL.Time.fromString(aValue, aProp);\n      } else {\n        return ICAL.Time.fromDateTimeString(aValue, aProp);\n      }\n    }\n\n    if (ICAL.Duration.isValueString(aData[1])) {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: ICAL.Duration.fromString(aData[1])\n      });\n    } else {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DURATION_LETTERS = /([PDWHMTS]{1,1})/;\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Duration\n   * @param {Object} data               An object with members of the duration\n   * @param {Number} data.weeks         Duration in weeks\n   * @param {Number} data.days          Duration in days\n   * @param {Number} data.hours         Duration in hours\n   * @param {Number} data.minutes       Duration in minutes\n   * @param {Number} data.seconds       Duration in seconds\n   * @param {Boolean} data.isNegative   If true, the duration is negative\n   */\n  ICAL.Duration = function icalduration(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Duration.prototype = {\n    /**\n     * The weeks in this duration\n     * @type {Number}\n     * @default 0\n     */\n    weeks: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    days: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    hours: 0,\n\n    /**\n     * The minutes in this duration\n     * @type {Number}\n     * @default 0\n     */\n    minutes: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Number}\n     * @default 0\n     */\n    seconds: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Boolean}\n     * @default false\n     */\n    isNegative: false,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalduration\"\n     */\n    icalclass: \"icalduration\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"duration\"\n     */\n    icaltype: \"duration\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Duration}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Duration.fromData(this);\n    },\n\n    /**\n     * The duration value expressed as a number of seconds.\n     *\n     * @return {Number}             The duration value in seconds\n     */\n    toSeconds: function toSeconds() {\n      var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +\n                    86400 * this.days + 7 * 86400 * this.weeks;\n      return (this.isNegative ? -seconds : seconds);\n    },\n\n    /**\n     * Reads the passed seconds value into this duration object. Afterwards,\n     * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n     * accordingly.\n     *\n     * @param {Number} aSeconds     The duration value in seconds\n     * @return {ICAL.Duration}      Returns this instance\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.isNegative = (aSeconds < 0);\n      this.days = ICAL.helpers.trunc(secs / 86400);\n\n      // If we have a flat number of weeks, use them.\n      if (this.days % 7 == 0) {\n        this.weeks = this.days / 7;\n        this.days = 0;\n      } else {\n        this.weeks = 0;\n      }\n\n      secs -= (this.days + 7 * this.weeks) * 86400;\n\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      secs -= this.minutes * 60;\n\n      this.seconds = secs;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData               An object with members of the duration\n     * @param {Number} aData.weeks         Duration in weeks\n     * @param {Number} aData.days          Duration in days\n     * @param {Number} aData.hours         Duration in hours\n     * @param {Number} aData.minutes       Duration in minutes\n     * @param {Number} aData.seconds       Duration in seconds\n     * @param {Boolean} aData.isNegative   If true, the duration is negative\n     */\n    fromData: function fromData(aData) {\n      var propsToCopy = [\"weeks\", \"days\", \"hours\",\n                         \"minutes\", \"seconds\", \"isNegative\"];\n      for (var key in propsToCopy) {\n        /* istanbul ignore if */\n        if (!propsToCopy.hasOwnProperty(key)) {\n          continue;\n        }\n        var prop = propsToCopy[key];\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        } else {\n          this[prop] = 0;\n        }\n      }\n    },\n\n    /**\n     * Resets the duration instance to the default values, i.e. PT0S\n     */\n    reset: function reset() {\n      this.isNegative = false;\n      this.weeks = 0;\n      this.days = 0;\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n    },\n\n    /**\n     * Compares the duration instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function compare(aOther) {\n      var thisSeconds = this.toSeconds();\n      var otherSeconds = aOther.toSeconds();\n      return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n    },\n\n    /**\n     * Normalizes the duration instance. For example, a duration with a value\n     * of 61 seconds will be normalized to 1 minute and 1 second.\n     */\n    normalize: function normalize() {\n      this.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * The string representation of this duration.\n     * @return {String}\n     */\n    toString: function toString() {\n      if (this.toSeconds() == 0) {\n        return \"PT0S\";\n      } else {\n        var str = \"\";\n        if (this.isNegative) str += \"-\";\n        str += \"P\";\n        if (this.weeks) str += this.weeks + \"W\";\n        if (this.days) str += this.days + \"D\";\n\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) str += this.hours + \"H\";\n          if (this.minutes) str += this.minutes + \"M\";\n          if (this.seconds) str += this.seconds + \"S\";\n        }\n        return str;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this duration.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.toString();\n    }\n  };\n\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {ICAL.Duration}        The newly created duration instance\n   */\n  ICAL.Duration.fromSeconds = function icalduration_from_seconds(aSeconds) {\n    return (new ICAL.Duration()).fromSeconds(aSeconds);\n  };\n\n  /**\n   * Internal helper function to handle a chunk of a duration.\n   *\n   * @param {String} letter type of duration chunk\n   * @param {String} number numeric value or -/+\n   * @param {Object} dict target to assign values to\n   */\n  function parseDurationChunk(letter, number, object) {\n    var type;\n    switch (letter) {\n      case 'P':\n        if (number && number === '-') {\n          object.isNegative = true;\n        } else {\n          object.isNegative = false;\n        }\n        // period\n        break;\n      case 'D':\n        type = 'days';\n        break;\n      case 'W':\n        type = 'weeks';\n        break;\n      case 'H':\n        type = 'hours';\n        break;\n      case 'M':\n        type = 'minutes';\n        break;\n      case 'S':\n        type = 'seconds';\n        break;\n      default:\n        // Not a valid chunk\n        return 0;\n    }\n\n    if (type) {\n      if (!number && number !== 0) {\n        throw new Error(\n          'invalid duration value: Missing number before \"' + letter + '\"'\n        );\n      }\n      var num = parseInt(number, 10);\n      if (ICAL.helpers.isStrictlyNaN(num)) {\n        throw new Error(\n          'invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"'\n        );\n      }\n      object[type] = num;\n    }\n\n    return 1;\n  }\n\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n  ICAL.Duration.isValueString = function(string) {\n    return (string[0] === 'P' || string[1] === 'P');\n  };\n\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {ICAL.Duration}    The created duration instance\n   */\n  ICAL.Duration.fromString = function icalduration_from_string(aStr) {\n    var pos = 0;\n    var dict = Object.create(null);\n    var chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      var type = aStr[pos];\n      var numeric = aStr.substr(0, pos);\n      aStr = aStr.substr(pos + 1);\n\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error(\n        'invalid duration value: Not enough duration components in \"' + aStr + '\"'\n      );\n    }\n\n    return new ICAL.Duration(dict);\n  };\n\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData               An object with members of the duration\n   * @param {Number} aData.weeks         Duration in weeks\n   * @param {Number} aData.days          Duration in days\n   * @param {Number} aData.hours         Duration in hours\n   * @param {Number} aData.minutes       Duration in minutes\n   * @param {Number} aData.seconds       Duration in seconds\n   * @param {Boolean} aData.isNegative   If true, the duration is negative\n   * @return {ICAL.Duration}             The createad duration instance\n   */\n  ICAL.Duration.fromData = function icalduration_from_data(aData) {\n    return new ICAL.Duration(aData);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2012 */\n\n\n\n(function() {\n  var OPTIONS = [\"tzid\", \"location\", \"tznames\",\n                 \"latitude\", \"longitude\"];\n\n  /**\n   * @classdesc\n   * Timezone representation, created by passing in a tzid and component.\n   *\n   * @example\n   * var vcalendar;\n   * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n   * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n   *\n   * var timezone = new ICAL.Timezone({\n   *   component: timezoneComp,\n   *   tzid\n   * });\n   *\n   * @class\n   * @param {ICAL.Component|Object} data options for class\n   * @param {String|ICAL.Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n  ICAL.Timezone = function icaltimezone(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Timezone.prototype = {\n\n    /**\n     * Timezone identifier\n     * @type {String}\n     */\n    tzid: \"\",\n\n    /**\n     * Timezone location\n     * @type {String}\n     */\n    location: \"\",\n\n    /**\n     * Alternative timezone name, for the string representation\n     * @type {String}\n     */\n    tznames: \"\",\n\n    /**\n     * The primary latitude for the timezone.\n     * @type {Number}\n     */\n    latitude: 0.0,\n\n    /**\n     * The primary longitude for the timezone.\n     * @type {Number}\n     */\n    longitude: 0.0,\n\n    /**\n     * The vtimezone component for this timezone.\n     * @type {ICAL.Component}\n     */\n    component: null,\n\n    /**\n     * The year this timezone has been expanded to. All timezone transition\n     * dates until this year are known and can be used for calculation\n     *\n     * @private\n     * @type {Number}\n     */\n    expandedUntilYear: 0,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltimezone\"\n     */\n    icalclass: \"icaltimezone\",\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {ICAL.Component|Object} aData options for class\n     * @param {String|ICAL.Component} aData.component\n     *        If aData is a simple object, then this member can be set to either a\n     *        string containing the component data, or an already parsed\n     *        ICAL.Component\n     * @param {String} aData.tzid      The timezone identifier\n     * @param {String} aData.location  The timezone locationw\n     * @param {String} aData.tznames   An alternative string representation of the\n     *                                  timezone\n     * @param {Number} aData.latitude  The latitude of the timezone\n     * @param {Number} aData.longitude The longitude of the timezone\n     */\n    fromData: function fromData(aData) {\n      this.expandedUntilYear = 0;\n      this.changes = [];\n\n      if (aData instanceof ICAL.Component) {\n        // Either a component is passed directly\n        this.component = aData;\n      } else {\n        // Otherwise the component may be in the data object\n        if (aData && \"component\" in aData) {\n          if (typeof aData.component == \"string\") {\n            // If a string was passed, parse it as a component\n            var jCal = ICAL.parse(aData.component);\n            this.component = new ICAL.Component(jCal);\n          } else if (aData.component instanceof ICAL.Component) {\n            // If it was a component already, then just set it\n            this.component = aData.component;\n          } else {\n            // Otherwise just null out the component\n            this.component = null;\n          }\n        }\n\n        // Copy remaining passed properties\n        for (var key in OPTIONS) {\n          /* istanbul ignore else */\n          if (OPTIONS.hasOwnProperty(key)) {\n            var prop = OPTIONS[key];\n            if (aData && prop in aData) {\n              this[prop] = aData[prop];\n            }\n          }\n        }\n      }\n\n      // If we have a component but no TZID, attempt to get it from the\n      // component's properties.\n      if (this.component instanceof ICAL.Component && !this.tzid) {\n        this.tzid = this.component.getFirstPropertyValue('tzid');\n      }\n\n      return this;\n    },\n\n    /**\n     * Finds the utcOffset the given time would occur in this timezone.\n     *\n     * @param {ICAL.Time} tt        The time to check for\n     * @return {Number} utc offset in seconds\n     */\n    utcOffset: function utcOffset(tt) {\n      if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) {\n        return 0;\n      }\n\n      this._ensureCoverage(tt.year);\n\n      if (!this.changes.length) {\n        return 0;\n      }\n\n      var tt_change = {\n        year: tt.year,\n        month: tt.month,\n        day: tt.day,\n        hour: tt.hour,\n        minute: tt.minute,\n        second: tt.second\n      };\n\n      var change_num = this._findNearbyChange(tt_change);\n      var change_num_to_use = -1;\n      var step = 1;\n\n      // TODO: replace with bin search?\n      for (;;) {\n        var change = ICAL.helpers.clone(this.changes[change_num], true);\n        if (change.utcOffset < change.prevUtcOffset) {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n        } else {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                          change.prevUtcOffset);\n        }\n\n        var cmp = ICAL.Timezone._compare_change_fn(tt_change, change);\n\n        if (cmp >= 0) {\n          change_num_to_use = change_num;\n        } else {\n          step = -1;\n        }\n\n        if (step == -1 && change_num_to_use != -1) {\n          break;\n        }\n\n        change_num += step;\n\n        if (change_num < 0) {\n          return 0;\n        }\n\n        if (change_num >= this.changes.length) {\n          break;\n        }\n      }\n\n      var zone_change = this.changes[change_num_to_use];\n      var utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n      if (utcOffset_change < 0 && change_num_to_use > 0) {\n        var tmp_change = ICAL.helpers.clone(zone_change, true);\n        ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0,\n                                        tmp_change.prevUtcOffset);\n\n        if (ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n          var prev_zone_change = this.changes[change_num_to_use - 1];\n\n          var want_daylight = false; // TODO\n\n          if (zone_change.is_daylight != want_daylight &&\n              prev_zone_change.is_daylight == want_daylight) {\n            zone_change = prev_zone_change;\n          }\n        }\n      }\n\n      // TODO return is_daylight?\n      return zone_change.utcOffset;\n    },\n\n    _findNearbyChange: function icaltimezone_find_nearby_change(change) {\n      // find the closest match\n      var idx = ICAL.helpers.binsearchInsert(\n        this.changes,\n        change,\n        ICAL.Timezone._compare_change_fn\n      );\n\n      if (idx >= this.changes.length) {\n        return this.changes.length - 1;\n      }\n\n      return idx;\n    },\n\n    _ensureCoverage: function(aYear) {\n      if (ICAL.Timezone._minimumExpansionYear == -1) {\n        var today = ICAL.Time.now();\n        ICAL.Timezone._minimumExpansionYear = today.year;\n      }\n\n      var changesEndYear = aYear;\n      if (changesEndYear < ICAL.Timezone._minimumExpansionYear) {\n        changesEndYear = ICAL.Timezone._minimumExpansionYear;\n      }\n\n      changesEndYear += ICAL.Timezone.EXTRA_COVERAGE;\n\n      if (changesEndYear > ICAL.Timezone.MAX_YEAR) {\n        changesEndYear = ICAL.Timezone.MAX_YEAR;\n      }\n\n      if (!this.changes.length || this.expandedUntilYear < aYear) {\n        var subcomps = this.component.getAllSubcomponents();\n        var compLen = subcomps.length;\n        var compIdx = 0;\n\n        for (; compIdx < compLen; compIdx++) {\n          this._expandComponent(\n            subcomps[compIdx], changesEndYear, this.changes\n          );\n        }\n\n        this.changes.sort(ICAL.Timezone._compare_change_fn);\n        this.expandedUntilYear = changesEndYear;\n      }\n    },\n\n    _expandComponent: function(aComponent, aYear, changes) {\n      if (!aComponent.hasProperty(\"dtstart\") ||\n          !aComponent.hasProperty(\"tzoffsetto\") ||\n          !aComponent.hasProperty(\"tzoffsetfrom\")) {\n        return null;\n      }\n\n      var dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n      var change;\n\n      function convert_tzoffset(offset) {\n        return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n      }\n\n      function init_changes() {\n        var changebase = {};\n        changebase.is_daylight = (aComponent.name == \"daylight\");\n        changebase.utcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue()\n        );\n\n        changebase.prevUtcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue()\n        );\n\n        return changebase;\n      }\n\n      if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n        change = init_changes();\n        change.year = dtstart.year;\n        change.month = dtstart.month;\n        change.day = dtstart.day;\n        change.hour = dtstart.hour;\n        change.minute = dtstart.minute;\n        change.second = dtstart.second;\n\n        ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                        -change.prevUtcOffset);\n        changes.push(change);\n      } else {\n        var props = aComponent.getAllProperties(\"rdate\");\n        for (var rdatekey in props) {\n          /* istanbul ignore if */\n          if (!props.hasOwnProperty(rdatekey)) {\n            continue;\n          }\n          var rdate = props[rdatekey];\n          var time = rdate.getFirstValue();\n          change = init_changes();\n\n          change.year = time.year;\n          change.month = time.month;\n          change.day = time.day;\n\n          if (time.isDate) {\n            change.hour = dtstart.hour;\n            change.minute = dtstart.minute;\n            change.second = dtstart.second;\n\n            if (dtstart.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          } else {\n            change.hour = time.hour;\n            change.minute = time.minute;\n            change.second = time.second;\n\n            if (time.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          }\n\n          changes.push(change);\n        }\n\n        var rrule = aComponent.getFirstProperty(\"rrule\");\n\n        if (rrule) {\n          rrule = rrule.getFirstValue();\n          change = init_changes();\n\n          if (rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone) {\n            rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n            rrule.until.zone = ICAL.Timezone.localTimezone;\n          }\n\n          var iterator = rrule.iterator(dtstart);\n\n          var occ;\n          while ((occ = iterator.next())) {\n            change = init_changes();\n            if (occ.year > aYear || !occ) {\n              break;\n            }\n\n            change.year = occ.year;\n            change.month = occ.month;\n            change.day = occ.day;\n            change.hour = occ.hour;\n            change.minute = occ.minute;\n            change.second = occ.second;\n            change.isDate = occ.isDate;\n\n            ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                            -change.prevUtcOffset);\n            changes.push(change);\n          }\n        }\n      }\n\n      return changes;\n    },\n\n    /**\n     * The string representation of this timezone.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.tznames ? this.tznames : this.tzid);\n    }\n  };\n\n  ICAL.Timezone._compare_change_fn = function icaltimezone_compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;\n    else if (a.year > b.year) return 1;\n\n    if (a.month < b.month) return -1;\n    else if (a.month > b.month) return 1;\n\n    if (a.day < b.day) return -1;\n    else if (a.day > b.day) return 1;\n\n    if (a.hour < b.hour) return -1;\n    else if (a.hour > b.hour) return 1;\n\n    if (a.minute < b.minute) return -1;\n    else if (a.minute > b.minute) return 1;\n\n    if (a.second < b.second) return -1;\n    else if (a.second > b.second) return 1;\n\n    return 0;\n  };\n\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {ICAL.Time} tt                  The time to convert\n   * @param {ICAL.Timezone} from_zone       The source zone to convert from\n   * @param {ICAL.Timezone} to_zone         The target zone to convert to\n   * @return {ICAL.Time}                    The converted date/time object\n   */\n  ICAL.Timezone.convert_time = function icaltimezone_convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate ||\n        from_zone.tzid == to_zone.tzid ||\n        from_zone == ICAL.Timezone.localTimezone ||\n        to_zone == ICAL.Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    var utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, - utcOffset);\n\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n\n    return null;\n  };\n\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {ICAL.Component|Object} aData options for class\n   * @param {String|ICAL.Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  ICAL.Timezone.fromData = function icaltimezone_fromData(aData) {\n    var tt = new ICAL.Timezone();\n    return tt.fromData(aData);\n  };\n\n  /**\n   * The instance describing the UTC timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({\n    tzid: \"UTC\"\n  });\n\n  /**\n   * The instance describing the local timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({\n    tzid: \"floating\"\n  });\n\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n  ICAL.Timezone.adjust_change = function icaltimezone_adjust_change(change, days, hours, minutes, seconds) {\n    return ICAL.Time.prototype.adjust.call(\n      change,\n      days,\n      hours,\n      minutes,\n      seconds,\n      change\n    );\n  };\n\n  ICAL.Timezone._minimumExpansionYear = -1;\n  ICAL.Timezone.MAX_YEAR = 2035; // TODO this is because of time_t, which we don't need. Still usefull?\n  ICAL.Timezone.EXTRA_COVERAGE = 5;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.TimezoneService = (function() {\n  var zones;\n\n  /**\n   * @classdesc\n   * Singleton class to contain timezones.  Right now it is all manual registry in\n   * the future we may use this class to download timezone information or handle\n   * loading pre-expanded timezones.\n   *\n   * @namespace\n   * @alias ICAL.TimezoneService\n   */\n  var TimezoneService = {\n    get count() {\n      return Object.keys(zones).length;\n    },\n\n    reset: function() {\n      zones = Object.create(null);\n      var utc = ICAL.Timezone.utcTimezone;\n\n      zones.Z = utc;\n      zones.UTC = utc;\n      zones.GMT = utc;\n    },\n\n    /**\n     * Checks if timezone id has been registered.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {Boolean}        False, when not present\n     */\n    has: function(tzid) {\n      return !!zones[tzid];\n    },\n\n    /**\n     * Returns a timezone by its tzid if present.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The timezone, or null if not found\n     */\n    get: function(tzid) {\n      return zones[tzid];\n    },\n\n    /**\n     * Registers a timezone object or component.\n     *\n     * @param {String=} name\n     *        The name of the timezone. Defaults to the component's TZID if not\n     *        passed.\n     * @param {ICAL.Component|ICAL.Timezone} zone\n     *        The initialized zone or vtimezone.\n     */\n    register: function(name, timezone) {\n      if (name instanceof ICAL.Component) {\n        if (name.name === 'vtimezone') {\n          timezone = new ICAL.Timezone(name);\n          name = timezone.tzid;\n        }\n      }\n\n      if (timezone instanceof ICAL.Timezone) {\n        zones[name] = timezone;\n      } else {\n        throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n      }\n    },\n\n    /**\n     * Removes a timezone by its tzid from the list.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The removed timezone, or null if not registered\n     */\n    remove: function(tzid) {\n      return (delete zones[tzid]);\n    }\n  };\n\n  // initialize defaults\n  TimezoneService.reset();\n\n  return TimezoneService;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n\n  /**\n   * @classdesc\n   * iCalendar Time representation (similar to JS Date object).  Fully\n   * independent of system (OS) timezone / time.  Unlike JS Date, the month\n   * January is 1, not zero.\n   *\n   * @example\n   * var time = new ICAL.Time({\n   *   year: 2012,\n   *   month: 10,\n   *   day: 11\n   *   minute: 0,\n   *   second: 0,\n   *   isDate: false\n   * });\n   *\n   *\n   * @alias ICAL.Time\n   * @class\n   * @param {Object} data           Time initialization\n   * @param {Number=} data.year     The year for this date\n   * @param {Number=} data.month    The month for this date\n   * @param {Number=} data.day      The day for this date\n   * @param {Number=} data.hour     The hour for this date\n   * @param {Number=} data.minute   The minute for this date\n   * @param {Number=} data.second   The second for this date\n   * @param {Boolean=} data.isDate  If true, the instance represents a date (as\n   *                                  opposed to a date-time)\n   * @param {ICAL.Timezone} zone timezone this position occurs in\n   */\n  ICAL.Time = function icaltime(data, zone) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    /* time defaults */\n    time.year = 0;\n    time.month = 1;\n    time.day = 1;\n    time.hour = 0;\n    time.minute = 0;\n    time.second = 0;\n    time.isDate = false;\n\n    this.fromData(data, zone);\n  };\n\n  ICAL.Time._dowCache = {};\n  ICAL.Time._wnCache = {};\n\n  ICAL.Time.prototype = {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltime\"\n     */\n    icalclass: \"icaltime\",\n    _cachedUnixTime: null,\n\n    /**\n     * The type name, to be used in the jCal object. This value may change and\n     * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n     * @readonly\n     * @type {String}\n     * @default \"date-time\"\n     */\n    get icaltype() {\n      return this.isDate ? 'date' : 'date-time';\n    },\n\n    /**\n     * The timezone for this time.\n     * @type {ICAL.Timezone}\n     */\n    zone: null,\n\n    /**\n     * Internal uses to indicate that a change has been made and the next read\n     * operation must attempt to normalize the value (for example changing the\n     * day to 33).\n     *\n     * @type {Boolean}\n     * @private\n     */\n    _pendingNormalization: false,\n\n    /**\n     * Returns a clone of the time object.\n     *\n     * @return {ICAL.Time}              The cloned object\n     */\n    clone: function() {\n      return new ICAL.Time(this._time, this.zone);\n    },\n\n    /**\n     * Reset the time instance to epoch time\n     */\n    reset: function icaltime_reset() {\n      this.fromData(ICAL.Time.epochTime);\n      this.zone = ICAL.Timezone.utcTimezone;\n    },\n\n    /**\n     * Reset the time instance to the given date/time values.\n     *\n     * @param {Number} year             The year to set\n     * @param {Number} month            The month to set\n     * @param {Number} day              The day to set\n     * @param {Number} hour             The hour to set\n     * @param {Number} minute           The minute to set\n     * @param {Number} second           The second to set\n     * @param {ICAL.Timezone} timezone  The timezone to set\n     */\n    resetTo: function icaltime_resetTo(year, month, day,\n                                       hour, minute, second, timezone) {\n      this.fromData({\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        zone: timezone\n      });\n    },\n\n    /**\n     * Set up the current instance from the Javascript date value.\n     *\n     * @param {?Date} aDate     The Javascript Date to read, or null to reset\n     * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n     */\n    fromJSDate: function icaltime_fromJSDate(aDate, useUTC) {\n      if (!aDate) {\n        this.reset();\n      } else {\n        if (useUTC) {\n          this.zone = ICAL.Timezone.utcTimezone;\n          this.year = aDate.getUTCFullYear();\n          this.month = aDate.getUTCMonth() + 1;\n          this.day = aDate.getUTCDate();\n          this.hour = aDate.getUTCHours();\n          this.minute = aDate.getUTCMinutes();\n          this.second = aDate.getUTCSeconds();\n        } else {\n          this.zone = ICAL.Timezone.localTimezone;\n          this.year = aDate.getFullYear();\n          this.month = aDate.getMonth() + 1;\n          this.day = aDate.getDate();\n          this.hour = aDate.getHours();\n          this.minute = aDate.getMinutes();\n          this.second = aDate.getSeconds();\n        }\n      }\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData            Time initialization\n     * @param {Number=} aData.year      The year for this date\n     * @param {Number=} aData.month     The month for this date\n     * @param {Number=} aData.day       The day for this date\n     * @param {Number=} aData.hour      The hour for this date\n     * @param {Number=} aData.minute    The minute for this date\n     * @param {Number=} aData.second    The second for this date\n     * @param {Boolean=} aData.isDate   If true, the instance represents a date\n     *                                    (as opposed to a date-time)\n     * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n     */\n    fromData: function fromData(aData, aZone) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(aData, key)) {\n            // ical type cannot be set\n            if (key === 'icaltype') continue;\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      if (aZone) {\n        this.zone = aZone;\n      }\n\n      if (aData && !(\"isDate\" in aData)) {\n        this.isDate = !(\"hour\" in aData);\n      } else if (aData && (\"isDate\" in aData)) {\n        this.isDate = aData.isDate;\n      }\n\n      if (aData && \"timezone\" in aData) {\n        var zone = ICAL.TimezoneService.get(\n          aData.timezone\n        );\n\n        this.zone = zone || ICAL.Timezone.localTimezone;\n      }\n\n      if (aData && \"zone\" in aData) {\n        this.zone = aData.zone;\n      }\n\n      if (!this.zone) {\n        this.zone = ICAL.Timezone.localTimezone;\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Calculate the day of week.\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time.weekDay}\n     */\n    dayOfWeek: function icaltime_dayOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n      if (dowCacheKey in ICAL.Time._dowCache) {\n        return ICAL.Time._dowCache[dowCacheKey];\n      }\n\n      // Using Zeller's algorithm\n      var q = this.day;\n      var m = this.month + (this.month < 3 ? 12 : 0);\n      var Y = this.year - (this.month < 3 ? 1 : 0);\n\n      var h = (q + Y + ICAL.helpers.trunc(((m + 1) * 26) / 10) + ICAL.helpers.trunc(Y / 4));\n      /* istanbul ignore else */\n      if (true /* gregorian */) {\n        h += ICAL.helpers.trunc(Y / 100) * 6 + ICAL.helpers.trunc(Y / 400);\n      } else {\n        h += 5;\n      }\n\n      // Normalize to 1 = wkst\n      h = ((h + 7 - firstDow) % 7) + 1;\n      ICAL.Time._dowCache[dowCacheKey] = h;\n      return h;\n    },\n\n    /**\n     * Calculate the day of year.\n     * @return {Number}\n     */\n    dayOfYear: function dayOfYear() {\n      var is_leap = (ICAL.Time.isLeapYear(this.year) ? 1 : 0);\n      var diypm = ICAL.Time.daysInYearPassedMonth;\n      return diypm[is_leap][this.month - 1] + this.day;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * week. The resulting ICAL.Time instance is of icaltype date, even if this\n     * is a date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The start of the week (cloned)\n     */\n    startOfWeek: function startOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the week.\n     * The resulting ICAL.Time instance is of icaltype date, even if this is a\n     * date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The end of the week (cloned)\n     */\n    endOfWeek: function endOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * month. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the month (cloned)\n     */\n    startOfMonth: function startOfMonth() {\n      var result = this.clone();\n      result.day = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * month.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the month (cloned)\n     */\n    endOfMonth: function endOfMonth() {\n      var result = this.clone();\n      result.day = ICAL.Time.daysInMonth(result.month, result.year);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * year. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the year (cloned)\n     */\n    startOfYear: function startOfYear() {\n      var result = this.clone();\n      result.day = 1;\n      result.month = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * year.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the year (cloned)\n     */\n    endOfYear: function endOfYear() {\n      var result = this.clone();\n      result.day = 31;\n      result.month = 12;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * First calculates the start of the week, then returns the day of year for\n     * this date. If the day falls into the previous year, the day is zero or negative.\n     *\n     * @param {ICAL.Time.weekDay=} aFirstDayOfWeek\n     *        The week start weekday, defaults to SUNDAY\n     * @return {Number}     The calculated day of year\n     */\n    startDoyWeek: function startDoyWeek(aFirstDayOfWeek) {\n      var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY;\n      var delta = this.dayOfWeek() - firstDow;\n      if (delta < 0) delta += 7;\n      return this.dayOfYear() - delta;\n    },\n\n    /**\n     * Get the dominical letter for the current year. Letters range from A - G\n     * for common years, and AG to GF for leap years.\n     *\n     * @param {Number} yr           The year to retrieve the letter for\n     * @return {String}             The dominical letter.\n     */\n    getDominicalLetter: function() {\n      return ICAL.Time.getDominicalLetter(this.year);\n    },\n\n    /**\n     * Finds the nthWeekDay relative to the current month (not day).  The\n     * returned value is a day relative the month that this month belongs to so\n     * 1 would indicate the first of the month and 40 would indicate a day in\n     * the following month.\n     *\n     * @param {Number} aDayOfWeek   Day of the week see the day name constants\n     * @param {Number} aPos         Nth occurrence of a given week day values\n     *        of 1 and 0 both indicate the first weekday of that type. aPos may\n     *        be either positive or negative\n     *\n     * @return {Number} numeric value indicating a day relative\n     *                   to the current month of this time object\n     */\n    nthWeekDay: function icaltime_nthWeekDay(aDayOfWeek, aPos) {\n      var daysInMonth = ICAL.Time.daysInMonth(this.month, this.year);\n      var weekday;\n      var pos = aPos;\n\n      var start = 0;\n\n      var otherDay = this.clone();\n\n      if (pos >= 0) {\n        otherDay.day = 1;\n\n        // because 0 means no position has been given\n        // 1 and 0 indicate the same day.\n        if (pos != 0) {\n          // remove the extra numeric value\n          pos--;\n        }\n\n        // set current start offset to current day.\n        start = otherDay.day;\n\n        // find the current day of week\n        var startDow = otherDay.dayOfWeek();\n\n        // calculate the difference between current\n        // day of the week and desired day of the week\n        var offset = aDayOfWeek - startDow;\n\n\n        // if the offset goes into the past\n        // week we add 7 so it goes into the next\n        // week. We only want to go forward in time here.\n        if (offset < 0)\n          // this is really important otherwise we would\n          // end up with dates from in the past.\n          offset += 7;\n\n        // add offset to start so start is the same\n        // day of the week as the desired day of week.\n        start += offset;\n\n        // because we are going to add (and multiply)\n        // the numeric value of the day we subtract it\n        // from the start position so not to add it twice.\n        start -= aDayOfWeek;\n\n        // set week day\n        weekday = aDayOfWeek;\n      } else {\n\n        // then we set it to the last day in the current month\n        otherDay.day = daysInMonth;\n\n        // find the ends weekday\n        var endDow = otherDay.dayOfWeek();\n\n        pos++;\n\n        weekday = (endDow - aDayOfWeek);\n\n        if (weekday < 0) {\n          weekday += 7;\n        }\n\n        weekday = daysInMonth - weekday;\n      }\n\n      weekday += pos * 7;\n\n      return start + weekday;\n    },\n\n    /**\n     * Checks if current time is the nth weekday, relative to the current\n     * month.  Will always return false when rule resolves outside of current\n     * month.\n     *\n     * @param {ICAL.Time.weekDay} aDayOfWeek       Day of week to check\n     * @param {Number} aPos                        Relative position\n     * @return {Boolean}                           True, if it is the nth weekday\n     */\n    isNthWeekDay: function(aDayOfWeek, aPos) {\n      var dow = this.dayOfWeek();\n\n      if (aPos === 0 && dow === aDayOfWeek) {\n        return true;\n      }\n\n      // get pos\n      var day = this.nthWeekDay(aDayOfWeek, aPos);\n\n      if (day === this.day) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Calculates the ISO 8601 week number. The first week of a year is the\n     * week that contains the first Thursday. The year can have 53 weeks, if\n     * January 1st is a Friday.\n     *\n     * Note there are regions where the first week of the year is the one that\n     * starts on January 1st, which may offset the week number. Also, if a\n     * different week start is specified, this will also affect the week\n     * number.\n     *\n     * @see ICAL.Time.weekOneStarts\n     * @param {ICAL.Time.weekDay} aWeekStart        The weekday the week starts with\n     * @return {Number}                             The ISO week number\n     */\n    weekNumber: function weekNumber(aWeekStart) {\n      var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n      if (wnCacheKey in ICAL.Time._wnCache) {\n        return ICAL.Time._wnCache[wnCacheKey];\n      }\n      // This function courtesty of Julian Bucknall, published under the MIT license\n      // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n      // plus some fixes to be able to use different week starts.\n      var week1;\n\n      var dt = this.clone();\n      dt.isDate = true;\n      var isoyear = this.year;\n\n      if (dt.month == 12 && dt.day > 25) {\n        week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        } else {\n          isoyear++;\n        }\n      } else {\n        week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart);\n        }\n      }\n\n      var daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);\n      var answer = ICAL.helpers.trunc(daysBetween / 7) + 1;\n      ICAL.Time._wnCache[wnCacheKey] = answer;\n      return answer;\n    },\n\n    /**\n     * Adds the duration to the current time. The instance is modified in\n     * place.\n     *\n     * @param {ICAL.Duration} aDuration         The duration to add\n     */\n    addDuration: function icaltime_add(aDuration) {\n      var mult = (aDuration.isNegative ? -1 : 1);\n\n      // because of the duration optimizations it is much\n      // more efficient to grab all the values up front\n      // then set them directly (which will avoid a normalization call).\n      // So we don't actually normalize until we need it.\n      var second = this.second;\n      var minute = this.minute;\n      var hour = this.hour;\n      var day = this.day;\n\n      second += mult * aDuration.seconds;\n      minute += mult * aDuration.minutes;\n      hour += mult * aDuration.hours;\n      day += mult * aDuration.days;\n      day += mult * 7 * aDuration.weeks;\n\n      this.second = second;\n      this.minute = minute;\n      this.hour = hour;\n      this.day = day;\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Subtract the date details (_excluding_ timezone).  Useful for finding\n     * the relative difference between two time objects excluding their\n     * timezone differences.\n     *\n     * @param {ICAL.Time} aDate     The date to substract\n     * @return {ICAL.Duration}      The difference as a duration\n     */\n    subtractDate: function icaltime_subtract(aDate) {\n      var unixTime = this.toUnixTime() + this.utcOffset();\n      var other = aDate.toUnixTime() + aDate.utcOffset();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Subtract the date details, taking timezones into account.\n     *\n     * @param {ICAL.Time} aDate  The date to subtract\n     * @return {ICAL.Duration}  The difference in duration\n     */\n    subtractDateTz: function icaltime_subtract_abs(aDate) {\n      var unixTime = this.toUnixTime();\n      var other = aDate.toUnixTime();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Compares the ICAL.Time instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toUnixTime();\n      var b = other.toUnixTime();\n\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    },\n\n    /**\n     * Compares only the date part of this instance with another one.\n     *\n     * @param {ICAL.Duration} other         The instance to compare with\n     * @param {ICAL.Timezone} tz            The timezone to compare in\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compareDateOnlyTz: function icaltime_compareDateOnlyTz(other, tz) {\n      function cmp(attr) {\n        return ICAL.Time._cmp_attr(a, b, attr);\n      }\n      var a = this.convertToZone(tz);\n      var b = other.convertToZone(tz);\n      var rc = 0;\n\n      if ((rc = cmp(\"year\")) != 0) return rc;\n      if ((rc = cmp(\"month\")) != 0) return rc;\n      if ((rc = cmp(\"day\")) != 0) return rc;\n\n      return rc;\n    },\n\n    /**\n     * Convert the instance into another timezone. The returned ICAL.Time\n     * instance is always a copy.\n     *\n     * @param {ICAL.Timezone} zone      The zone to convert to\n     * @return {ICAL.Time}              The copy, converted to the zone\n     */\n    convertToZone: function convertToZone(zone) {\n      var copy = this.clone();\n      var zone_equals = (this.zone.tzid == zone.tzid);\n\n      if (!this.isDate && !zone_equals) {\n        ICAL.Timezone.convert_time(copy, this.zone, zone);\n      }\n\n      copy.zone = zone;\n      return copy;\n    },\n\n    /**\n     * Calculates the UTC offset of the current date/time in the timezone it is\n     * in.\n     *\n     * @return {Number}     UTC offset in seconds\n     */\n    utcOffset: function utc_offset() {\n      if (this.zone == ICAL.Timezone.localTimezone ||\n          this.zone == ICAL.Timezone.utcTimezone) {\n        return 0;\n      } else {\n        return this.zone.utcOffset(this);\n      }\n    },\n\n    /**\n     * Returns an RFC 5545 compliant ical representation of this object.\n     *\n     * @return {String} ical date/date-time\n     */\n    toICALString: function() {\n      var string = this.toString();\n\n      if (string.length > 10) {\n        return ICAL.design.icalendar.value['date-time'].toICAL(string);\n      } else {\n        return ICAL.design.icalendar.value.date.toICAL(string);\n      }\n    },\n\n    /**\n     * The string representation of this date/time, in jCal form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var result = this.year + '-' +\n                   ICAL.helpers.pad2(this.month) + '-' +\n                   ICAL.helpers.pad2(this.day);\n\n      if (!this.isDate) {\n          result += 'T' + ICAL.helpers.pad2(this.hour) + ':' +\n                    ICAL.helpers.pad2(this.minute) + ':' +\n                    ICAL.helpers.pad2(this.second);\n\n        if (this.zone === ICAL.Timezone.utcTimezone) {\n          result += 'Z';\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Converts the current instance to a Javascript date\n     * @return {Date}\n     */\n    toJSDate: function toJSDate() {\n      if (this.zone == ICAL.Timezone.localTimezone) {\n        if (this.isDate) {\n          return new Date(this.year, this.month - 1, this.day);\n        } else {\n          return new Date(this.year, this.month - 1, this.day,\n                          this.hour, this.minute, this.second, 0);\n        }\n      } else {\n        return new Date(this.toUnixTime() * 1000);\n      }\n    },\n\n    _normalize: function icaltime_normalize() {\n      var isDate = this._time.isDate;\n      if (this._time.isDate) {\n        this._time.hour = 0;\n        this._time.minute = 0;\n        this._time.second = 0;\n      }\n      this.adjust(0, 0, 0, 0);\n\n      return this;\n    },\n\n    /**\n     * Adjust the date/time by the given offset\n     *\n     * @param {Number} aExtraDays       The extra amount of days\n     * @param {Number} aExtraHours      The extra amount of hours\n     * @param {Number} aExtraMinutes    The extra amount of minutes\n     * @param {Number} aExtraSeconds    The extra amount of seconds\n     * @param {Number=} aTime           The time to adjust, defaults to the\n     *                                    current instance.\n     */\n    adjust: function icaltime_adjust(aExtraDays, aExtraHours,\n                                     aExtraMinutes, aExtraSeconds, aTime) {\n\n      var minutesOverflow, hoursOverflow,\n          daysOverflow = 0, yearsOverflow = 0;\n\n      var second, minute, hour, day;\n      var daysInMonth;\n\n      var time = aTime || this._time;\n\n      if (!time.isDate) {\n        second = time.second + aExtraSeconds;\n        time.second = second % 60;\n        minutesOverflow = ICAL.helpers.trunc(second / 60);\n        if (time.second < 0) {\n          time.second += 60;\n          minutesOverflow--;\n        }\n\n        minute = time.minute + aExtraMinutes + minutesOverflow;\n        time.minute = minute % 60;\n        hoursOverflow = ICAL.helpers.trunc(minute / 60);\n        if (time.minute < 0) {\n          time.minute += 60;\n          hoursOverflow--;\n        }\n\n        hour = time.hour + aExtraHours + hoursOverflow;\n\n        time.hour = hour % 24;\n        daysOverflow = ICAL.helpers.trunc(hour / 24);\n        if (time.hour < 0) {\n          time.hour += 24;\n          daysOverflow--;\n        }\n      }\n\n\n      // Adjust month and year first, because we need to know what month the day\n      // is in before adjusting it.\n      if (time.month > 12) {\n        yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12);\n      } else if (time.month < 1) {\n        yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1;\n      }\n\n      time.year += yearsOverflow;\n      time.month -= 12 * yearsOverflow;\n\n      // Now take care of the days (and adjust month if needed)\n      day = time.day + aExtraDays + daysOverflow;\n\n      if (day > 0) {\n        for (;;) {\n          daysInMonth = ICAL.Time.daysInMonth(time.month, time.year);\n          if (day <= daysInMonth) {\n            break;\n          }\n\n          time.month++;\n          if (time.month > 12) {\n            time.year++;\n            time.month = 1;\n          }\n\n          day -= daysInMonth;\n        }\n      } else {\n        while (day <= 0) {\n          if (time.month == 1) {\n            time.year--;\n            time.month = 12;\n          } else {\n            time.month--;\n          }\n\n          day += ICAL.Time.daysInMonth(time.month, time.year);\n        }\n      }\n\n      time.day = day;\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance from unix time, the number of seconds since\n     * January 1st, 1970.\n     *\n     * @param {Number} seconds      The seconds to set up with\n     */\n    fromUnixTime: function fromUnixTime(seconds) {\n      this.zone = ICAL.Timezone.utcTimezone;\n      var epoch = ICAL.Time.epochTime.clone();\n      epoch.adjust(0, 0, 0, seconds);\n\n      this.year = epoch.year;\n      this.month = epoch.month;\n      this.day = epoch.day;\n      this.hour = epoch.hour;\n      this.minute = epoch.minute;\n      this.second = Math.floor(epoch.second);\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Converts the current instance to seconds since January 1st 1970.\n     *\n     * @return {Number}         Seconds since 1970\n     */\n    toUnixTime: function toUnixTime() {\n      if (this._cachedUnixTime !== null) {\n        return this._cachedUnixTime;\n      }\n      var offset = this.utcOffset();\n\n      // we use the offset trick to ensure\n      // that we are getting the actual UTC time\n      var ms = Date.UTC(\n        this.year,\n        this.month - 1,\n        this.day,\n        this.hour,\n        this.minute,\n        this.second - offset\n      );\n\n      // seconds\n      this._cachedUnixTime = ms / 1000;\n      return this._cachedUnixTime;\n    },\n\n    /**\n     * Converts time to into Object which can be serialized then re-created\n     * using the constructor.\n     *\n     * @example\n     * // toJSON will automatically be called\n     * var json = JSON.stringify(mytime);\n     *\n     * var deserialized = JSON.parse(json);\n     *\n     * var time = new ICAL.Time(deserialized);\n     *\n     * @return {Object}\n     */\n    toJSON: function() {\n      var copy = [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'isDate'\n      ];\n\n      var result = Object.create(null);\n\n      var i = 0;\n      var len = copy.length;\n      var prop;\n\n      for (; i < len; i++) {\n        prop = copy[i];\n        result[prop] = this[prop];\n      }\n\n      if (this.zone) {\n        result.timezone = this.zone.tzid;\n      }\n\n      return result;\n    }\n\n  };\n\n  (function setupNormalizeAttributes() {\n    // This needs to run before any instances are created!\n    function defineAttr(attr) {\n      Object.defineProperty(ICAL.Time.prototype, attr, {\n        get: function getTimeAttr() {\n          if (this._pendingNormalization) {\n            this._normalize();\n            this._pendingNormalization = false;\n          }\n\n          return this._time[attr];\n        },\n        set: function setTimeAttr(val) {\n          // Check if isDate will be set and if was not set to normalize date.\n          // This avoids losing days when seconds, minutes and hours are zeroed\n          // what normalize will do when time is a date.\n          if (attr === \"isDate\" && val && !this._time.isDate) {\n            this.adjust(0, 0, 0, 0);\n          }\n          this._cachedUnixTime = null;\n          this._pendingNormalization = true;\n          this._time[attr] = val;\n\n          return val;\n        }\n      });\n\n    }\n\n    /* istanbul ignore else */\n    if (\"defineProperty\" in Object) {\n      defineAttr(\"year\");\n      defineAttr(\"month\");\n      defineAttr(\"day\");\n      defineAttr(\"hour\");\n      defineAttr(\"minute\");\n      defineAttr(\"second\");\n      defineAttr(\"isDate\");\n    }\n  })();\n\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n  ICAL.Time.daysInMonth = function icaltime_daysInMonth(month, year) {\n    var _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var days = 30;\n\n    if (month < 1 || month > 12) return days;\n\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += ICAL.Time.isLeapYear(year);\n    }\n\n    return days;\n  };\n\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n  ICAL.Time.isLeapYear = function isLeapYear(year) {\n    if (year <= 1752) {\n      return ((year % 4) == 0);\n    } else {\n      return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));\n    }\n  };\n\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {ICAL.Time}            The created instance with the calculated date\n   */\n  ICAL.Time.fromDayOfYear = function icaltime_fromDayOfYear(aDayOfYear, aYear) {\n    var year = aYear;\n    var doy = aDayOfYear;\n    var tt = new ICAL.Time();\n    tt.auto_normalize = false;\n    var is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n\n    if (doy < 1) {\n      year--;\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy += ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      return ICAL.Time.fromDayOfYear(doy, year);\n    } else if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return ICAL.Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (var month = 11; month >= 0; month--) {\n      if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromStringv2 = function fromString(str) {\n    return new ICAL.Time({\n      year: parseInt(str.substr(0, 4), 10),\n      month: parseInt(str.substr(5, 2), 10),\n      day: parseInt(str.substr(8, 2), 10),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromDateString = function(aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromDateTimeString = function(aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error(\n        'invalid date-time value: \"' + aValue + '\"'\n      );\n    }\n\n    var zone;\n\n    if (aValue[19] && aValue[19] === 'Z') {\n      zone = 'Z';\n    } else if (prop) {\n      zone = prop.getParameter('tzid');\n    }\n\n    // 2012-10-10T10:10:10(Z)?\n    var time = new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),\n      minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),\n      second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),\n      timezone: zone\n    });\n\n    return time;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromString = function fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return ICAL.Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return ICAL.Time.fromDateString(aValue);\n    }\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate     The Javascript Date to read, or null to reset\n   * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n   */\n  ICAL.Time.fromJSDate = function fromJSDate(aDate, useUTC) {\n    var tt = new ICAL.Time();\n    return tt.fromJSDate(aDate, useUTC);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n   */\n  ICAL.Time.fromData = function fromData(aData, aZone) {\n    var t = new ICAL.Time();\n    return t.fromData(aData, aZone);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * The instance is “floating” - has no timezone relation.\n   * To create an instance considering the time zone, call\n   * ICAL.Time.fromJSDate(new Date(), true)\n   * @return {ICAL.Time}\n   */\n  ICAL.Time.now = function icaltime_now() {\n    return ICAL.Time.fromJSDate(new Date(), false);\n  };\n\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see ICAL.Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday, used for calculation.\n   * @return {ICAL.Time}                    The date on which week number 1 starts\n   */\n  ICAL.Time.weekOneStarts = function weekOneStarts(aYear, aWeekStart) {\n    var t = ICAL.Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n\n    var dow = t.dayOfWeek();\n    var wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;\n    if (dow > ICAL.Time.THURSDAY) {\n      t.day += 7;\n    }\n    if (wkst > ICAL.Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n\n    return t;\n  };\n\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  ICAL.Time.getDominicalLetter = function(yr) {\n    var LTRS = \"GFEDCBA\";\n    var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    var isLeap = ICAL.Time.isLeapYear(yr);\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  };\n\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {ICAL.Time}\n   * @constant\n   * @instance\n   */\n  ICAL.Time.epochTime = ICAL.Time.fromData({\n    year: 1970,\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    isDate: false,\n    timezone: \"Z\"\n  });\n\n  ICAL.Time._cmp_attr = function _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  };\n\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n  ICAL.Time.daysInYearPassedMonth = [\n    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],\n    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]\n  ];\n\n  /**\n   * The weekday, 1 = SUNDAY, 7 = SATURDAY. Access via\n   * ICAL.Time.MONDAY, ICAL.Time.TUESDAY, ...\n   *\n   * @typedef {Number} weekDay\n   * @memberof ICAL.Time\n   */\n\n  ICAL.Time.SUNDAY = 1;\n  ICAL.Time.MONDAY = 2;\n  ICAL.Time.TUESDAY = 3;\n  ICAL.Time.WEDNESDAY = 4;\n  ICAL.Time.THURSDAY = 5;\n  ICAL.Time.FRIDAY = 6;\n  ICAL.Time.SATURDAY = 7;\n\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n  ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2015 */\n\n\n\n(function() {\n\n  /**\n   * Describes a vCard time, which has slight differences to the ICAL.Time.\n   * Properties can be null if not specified, for example for dates with\n   * reduced accuracy or truncation.\n   *\n   * Note that currently not all methods are correctly re-implemented for\n   * VCardTime. For example, comparison will have undefined results when some\n   * members are null.\n   *\n   * Also, normalization is not yet implemented for this class!\n   *\n   * @alias ICAL.VCardTime\n   * @class\n   * @extends {ICAL.Time}\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {ICAL.Timezone|ICAL.UtcOffset} zone     The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  ICAL.VCardTime = function(data, zone, icaltype) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    time.year = null;\n    time.month = null;\n    time.day = null;\n    time.hour = null;\n    time.minute = null;\n    time.second = null;\n\n    this.icaltype = icaltype || \"date-and-or-time\";\n\n    this.fromData(data, zone);\n  };\n  ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime, /** @lends ICAL.VCardTime */ {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"vcardtime\"\n     */\n    icalclass: \"vcardtime\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @type {String}\n     * @default \"date-and-or-time\"\n     */\n    icaltype: \"date-and-or-time\",\n\n    /**\n     * The timezone. This can either be floating, UTC, or an instance of\n     * ICAL.UtcOffset.\n     * @type {ICAL.Timezone|ICAL.UtcOFfset}\n     */\n    zone: null,\n\n    /**\n     * Returns a clone of the vcard date/time object.\n     *\n     * @return {ICAL.VCardTime}     The cloned object\n     */\n    clone: function() {\n      return new ICAL.VCardTime(this._time, this.zone, this.icaltype);\n    },\n\n    _normalize: function() {\n      return this;\n    },\n\n    /**\n     * @inheritdoc\n     */\n    utcOffset: function() {\n      if (this.zone instanceof ICAL.UtcOffset) {\n        return this.zone.toSeconds();\n      } else {\n        return ICAL.Time.prototype.utcOffset.apply(this, arguments);\n      }\n    },\n\n    /**\n     * Returns an RFC 6350 compliant representation of this object.\n     *\n     * @return {String}         vcard date/time string\n     */\n    toICALString: function() {\n      return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this date/time, in jCard form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var p2 = ICAL.helpers.pad2;\n      var y = this.year, m = this.month, d = this.day;\n      var h = this.hour, mm = this.minute, s = this.second;\n\n      var hasYear = y !== null, hasMonth = m !== null, hasDay = d !== null;\n      var hasHour = h !== null, hasMinute = mm !== null, hasSecond = s !== null;\n\n      var datepart = (hasYear ? p2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +\n                     (hasMonth ? p2(m) : '') +\n                     (hasDay ? '-' + p2(d) : '');\n      var timepart = (hasHour ? p2(h) : '-') + (hasHour && hasMinute ? ':' : '') +\n                     (hasMinute ? p2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +\n                     (hasMinute && hasSecond ? ':' : '') +\n                     (hasSecond ? p2(s) : '');\n\n      var zone;\n      if (this.zone === ICAL.Timezone.utcTimezone) {\n        zone = 'Z';\n      } else if (this.zone instanceof ICAL.UtcOffset) {\n        zone = this.zone.toString();\n      } else if (this.zone === ICAL.Timezone.localTimezone) {\n        zone = '';\n      } else if (this.zone instanceof ICAL.Timezone) {\n        var offset = ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this));\n        zone = offset.toString();\n      } else {\n        zone = '';\n      }\n\n      switch (this.icaltype) {\n        case \"time\":\n          return timepart + zone;\n        case \"date-and-or-time\":\n        case \"date-time\":\n          return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n        case \"date\":\n          return datepart;\n      }\n      return null;\n    }\n  });\n\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {ICAL.VCardTime}   The date/time instance\n   */\n  ICAL.VCardTime.fromDateAndOrTimeString = function(aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;\n    }\n    var parts = aValue.split('T');\n    var dt = parts[0], tmz = parts[1];\n    var splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [];\n    var zone = splitzone[0], tm = splitzone[1];\n\n    var stoi = ICAL.helpers.strictParseInt;\n    var dtlen = dt ? dt.length : 0;\n    var tmlen = tm ? tm.length : 0;\n\n    var hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    var hasDashTime = tm && tm[0] == '-';\n\n    var o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = ICAL.Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = ICAL.UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new ICAL.VCardTime(o, zone, aIcalType);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DOW_MAP = {\n    SU: ICAL.Time.SUNDAY,\n    MO: ICAL.Time.MONDAY,\n    TU: ICAL.Time.TUESDAY,\n    WE: ICAL.Time.WEDNESDAY,\n    TH: ICAL.Time.THURSDAY,\n    FR: ICAL.Time.FRIDAY,\n    SA: ICAL.Time.SATURDAY\n  };\n\n  var REVERSE_DOW_MAP = {};\n  for (var key in DOW_MAP) {\n    /* istanbul ignore else */\n    if (DOW_MAP.hasOwnProperty(key)) {\n      REVERSE_DOW_MAP[DOW_MAP[key]] = key;\n    }\n  }\n\n  var COPY_PARTS = [\"BYSECOND\", \"BYMINUTE\", \"BYHOUR\", \"BYDAY\",\n                    \"BYMONTHDAY\", \"BYYEARDAY\", \"BYWEEKNO\",\n                    \"BYMONTH\", \"BYSETPOS\"];\n\n  /**\n   * @classdesc\n   * This class represents the \"recur\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Recur\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n   * @param {ICAL.Time=} data.until                     The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  ICAL.Recur = function icalrecur(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof(data) === 'object') {\n      this.fromData(data);\n    }\n  };\n\n  ICAL.Recur.prototype = {\n    /**\n     * An object holding the BY-parts of the recurrence rule\n     * @type {Object}\n     */\n    parts: null,\n\n    /**\n     * The interval value for the recurrence rule.\n     * @type {Number}\n     */\n    interval: 1,\n\n    /**\n     * The week start day\n     *\n     * @type {ICAL.Time.weekDay}\n     * @default ICAL.Time.MONDAY\n     */\n    wkst: ICAL.Time.MONDAY,\n\n    /**\n     * The end of the recurrence\n     * @type {?ICAL.Time}\n     */\n    until: null,\n\n    /**\n     * The maximum number of occurrences\n     * @type {?Number}\n     */\n    count: null,\n\n    /**\n     * The frequency value.\n     * @type {ICAL.Recur.frequencyValues}\n     */\n    freq: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalrecur\"\n     */\n    icalclass: \"icalrecur\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"recur\"\n     */\n    icaltype: \"recur\",\n\n    /**\n     * Create a new iterator for this recurrence rule. The passed start date\n     * must be the start date of the event, not the start of the range to\n     * search in.\n     *\n     * @example\n     * var recur = comp.getFirstPropertyValue('rrule');\n     * var dtstart = comp.getFirstPropertyValue('dtstart');\n     * var iter = recur.iterator(dtstart);\n     * for (var next = iter.next(); next; next = iter.next()) {\n     *   if (next.compare(rangeStart) < 0) {\n     *     continue;\n     *   }\n     *   console.log(next.toString());\n     * }\n     *\n     * @param {ICAL.Time} aStart        The item's start date\n     * @return {ICAL.RecurIterator}     The recurrence iterator\n     */\n    iterator: function(aStart) {\n      return new ICAL.RecurIterator({\n        rule: this,\n        dtstart: aStart\n      });\n    },\n\n    /**\n     * Returns a clone of the recurrence object.\n     *\n     * @return {ICAL.Recur}      The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Recur(this.toJSON());\n    },\n\n    /**\n     * Checks if the current rule is finite, i.e. has a count or until part.\n     *\n     * @return {Boolean}        True, if the rule is finite\n     */\n    isFinite: function isfinite() {\n      return !!(this.count || this.until);\n    },\n\n    /**\n     * Checks if the current rule has a count part, and not limited by an until\n     * part.\n     *\n     * @return {Boolean}        True, if the rule is by count\n     */\n    isByCount: function isbycount() {\n      return !!(this.count && !this.until);\n    },\n\n    /**\n     * Adds a component (part) to the recurrence rule. This is not a component\n     * in the sense of {@link ICAL.Component}, but a part of the recurrence\n     * rule, i.e. BYMONTH.\n     *\n     * @param {String} aType            The name of the component part\n     * @param {Array|String} aValue     The component value\n     */\n    addComponent: function addPart(aType, aValue) {\n      var ucname = aType.toUpperCase();\n      if (ucname in this.parts) {\n        this.parts[ucname].push(aValue);\n      } else {\n        this.parts[ucname] = [aValue];\n      }\n    },\n\n    /**\n     * Sets the component value for the given by-part.\n     *\n     * @param {String} aType        The component part name\n     * @param {Array} aValues       The component values\n     */\n    setComponent: function setComponent(aType, aValues) {\n      this.parts[aType.toUpperCase()] = aValues.slice();\n    },\n\n    /**\n     * Gets (a copy) of the requested component value.\n     *\n     * @param {String} aType        The component part name\n     * @return {Array}              The component part value\n     */\n    getComponent: function getComponent(aType) {\n      var ucname = aType.toUpperCase();\n      return (ucname in this.parts ? this.parts[ucname].slice() : []);\n    },\n\n    /**\n     * Retrieves the next occurrence after the given recurrence id. See the\n     * guide on {@tutorial terminology} for more details.\n     *\n     * NOTE: Currently, this method iterates all occurrences from the start\n     * date. It should not be called in a loop for performance reasons. If you\n     * would like to get more than one occurrence, you can iterate the\n     * occurrences manually, see the example on the\n     * {@link ICAL.Recur#iterator iterator} method.\n     *\n     * @param {ICAL.Time} aStartTime        The start of the event series\n     * @param {ICAL.Time} aRecurrenceId     The date of the last occurrence\n     * @return {ICAL.Time}                  The next occurrence after\n     */\n    getNextOccurrence: function getNextOccurrence(aStartTime, aRecurrenceId) {\n      var iter = this.iterator(aStartTime);\n      var next, cdt;\n\n      do {\n        next = iter.next();\n      } while (next && next.compare(aRecurrenceId) <= 0);\n\n      if (next && aRecurrenceId.zone) {\n        next.zone = aRecurrenceId.zone;\n      }\n\n      return next;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} data                               An object with members of the recurrence\n     * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n     * @param {Number=} data.interval                     The INTERVAL value\n     * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n     * @param {ICAL.Time=} data.until                     The end of the recurrence set\n     * @param {Number=} data.count                        The number of occurrences\n     * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n     * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n     * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n     * @param {Array.<String>=} data.byday                The BYDAY values\n     * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n     * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n     * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n     * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n     * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n     */\n    fromData: function(data) {\n      for (var key in data) {\n        var uckey = key.toUpperCase();\n\n        if (uckey in partDesign) {\n          if (Array.isArray(data[key])) {\n            this.parts[uckey] = data[key];\n          } else {\n            this.parts[uckey] = [data[key]];\n          }\n        } else {\n          this[key] = data[key];\n        }\n      }\n\n      if (this.interval && typeof this.interval != \"number\") {\n        optionDesign.INTERVAL(this.interval, this);\n      }\n\n      if (this.wkst && typeof this.wkst != \"number\") {\n        this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst);\n      }\n\n      if (this.until && !(this.until instanceof ICAL.Time)) {\n        this.until = ICAL.Time.fromString(this.until);\n      }\n    },\n\n    /**\n     * The jCal representation of this recurrence type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var res = Object.create(null);\n      res.freq = this.freq;\n\n      if (this.count) {\n        res.count = this.count;\n      }\n\n      if (this.interval > 1) {\n        res.interval = this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore if */\n        if (!this.parts.hasOwnProperty(k)) {\n          continue;\n        }\n        var kparts = this.parts[k];\n        if (Array.isArray(kparts) && kparts.length == 1) {\n          res[k.toLowerCase()] = kparts[0];\n        } else {\n          res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);\n        }\n      }\n\n      if (this.until) {\n        res.until = this.until.toString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return res;\n    },\n\n    /**\n     * The string representation of this recurrence rule.\n     * @return {String}\n     */\n    toString: function icalrecur_toString() {\n      // TODO retain order\n      var str = \"FREQ=\" + this.freq;\n      if (this.count) {\n        str += \";COUNT=\" + this.count;\n      }\n      if (this.interval > 1) {\n        str += \";INTERVAL=\" + this.interval;\n      }\n      for (var k in this.parts) {\n        /* istanbul ignore else */\n        if (this.parts.hasOwnProperty(k)) {\n          str += \";\" + k + \"=\" + this.parts[k];\n        }\n      }\n      if (this.until) {\n        str += ';UNTIL=' + this.until.toICALString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        str += ';WKST=' + ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return str;\n    }\n  };\n\n  function parseNumericValue(type, min, max, value) {\n    var result = value;\n\n    if (value[0] === '+') {\n      result = value.substr(1);\n    }\n\n    result = ICAL.helpers.strictParseInt(result);\n\n    if (min !== undefined && value < min) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be > ' + min\n      );\n    }\n\n    if (max !== undefined && value > max) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be < ' + min\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n  ICAL.Recur.icalDayToNumericDay = function toNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    return ((DOW_MAP[string] - firstDow + 7) % 7) + 1;\n  };\n\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n  ICAL.Recur.numericDayToIcalDay = function toIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    var dow = (num + firstDow - ICAL.Time.SUNDAY);\n    if (dow > 7) {\n      dow -= 7;\n    }\n    return REVERSE_DOW_MAP[dow];\n  };\n\n  var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\n  var VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n\n  /**\n   * Possible frequency values for the FREQ part\n   * (YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY)\n   *\n   * @typedef {String} frequencyValues\n   * @memberof ICAL.Recur\n   */\n\n  var ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',\n                      'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n\n  var optionDesign = {\n    FREQ: function(value, dict, fmtIcal) {\n      // yes this is actually equal or faster then regex.\n      // upside here is we can enumerate the valid values.\n      if (ALLOWED_FREQ.indexOf(value) !== -1) {\n        dict.freq = value;\n      } else {\n        throw new Error(\n          'invalid frequency \"' + value + '\" expected: \"' +\n          ALLOWED_FREQ.join(', ') + '\"'\n        );\n      }\n    },\n\n    COUNT: function(value, dict, fmtIcal) {\n      dict.count = ICAL.helpers.strictParseInt(value);\n    },\n\n    INTERVAL: function(value, dict, fmtIcal) {\n      dict.interval = ICAL.helpers.strictParseInt(value);\n      if (dict.interval < 1) {\n        // 0 or negative values are not allowed, some engines seem to generate\n        // it though. Assume 1 instead.\n        dict.interval = 1;\n      }\n    },\n\n    UNTIL: function(value, dict, fmtIcal) {\n      if (value.length > 10) {\n        dict.until = ICAL.design.icalendar.value['date-time'].fromICAL(value);\n      } else {\n        dict.until = ICAL.design.icalendar.value.date.fromICAL(value);\n      }\n      if (!fmtIcal) {\n        dict.until = ICAL.Time.fromString(dict.until);\n      }\n    },\n\n    WKST: function(value, dict, fmtIcal) {\n      if (VALID_DAY_NAMES.test(value)) {\n        dict.wkst = ICAL.Recur.icalDayToNumericDay(value);\n      } else {\n        throw new Error('invalid WKST value \"' + value + '\"');\n      }\n    }\n  };\n\n  var partDesign = {\n    BYSECOND: parseNumericValue.bind(this, 'BYSECOND', 0, 60),\n    BYMINUTE: parseNumericValue.bind(this, 'BYMINUTE', 0, 59),\n    BYHOUR: parseNumericValue.bind(this, 'BYHOUR', 0, 23),\n    BYDAY: function(value) {\n      if (VALID_BYDAY_PART.test(value)) {\n        return value;\n      } else {\n        throw new Error('invalid BYDAY value \"' + value + '\"');\n      }\n    },\n    BYMONTHDAY: parseNumericValue.bind(this, 'BYMONTHDAY', -31, 31),\n    BYYEARDAY: parseNumericValue.bind(this, 'BYYEARDAY', -366, 366),\n    BYWEEKNO: parseNumericValue.bind(this, 'BYWEEKNO', -53, 53),\n    BYMONTH: parseNumericValue.bind(this, 'BYMONTH', 1, 12),\n    BYSETPOS: parseNumericValue.bind(this, 'BYSETPOS', -366, 366)\n  };\n\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {ICAL.Recur}           The created recurrence instance\n   */\n  ICAL.Recur.fromString = function(string) {\n    var data = ICAL.Recur._stringToData(string, false);\n    return new ICAL.Recur(data);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} aData.freq    The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {ICAL.Time.weekDay=} aData.wkst             The week start value\n   * @param {ICAL.Time=} aData.until                    The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n  ICAL.Recur.fromData = function(aData) {\n    return new ICAL.Recur(aData);\n  };\n\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {ICAL.Recur}       The recurrence instance\n   */\n  ICAL.Recur._stringToData = function(string, fmtIcal) {\n    var dict = Object.create(null);\n\n    // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n    var values = string.split(';');\n    var len = values.length;\n\n    for (var i = 0; i < len; i++) {\n      var parts = values[i].split('=');\n      var ucname = parts[0].toUpperCase();\n      var lcname = parts[0].toLowerCase();\n      var name = (fmtIcal ? lcname : ucname);\n      var value = parts[1];\n\n      if (ucname in partDesign) {\n        var partArr = value.split(',');\n        var partArrIdx = 0;\n        var partArrLen = partArr.length;\n\n        for (; partArrIdx < partArrLen; partArrIdx++) {\n          partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);\n        }\n        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurIterator = (function() {\n\n  /**\n   * @classdesc\n   * An iterator for a single recurrence rule. This class usually doesn't have\n   * to be instanciated directly, the convenience method\n   * {@link ICAL.Recur#iterator} can be used.\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration from a previous run\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration\n   * from a previous run.\n   *\n   * @class\n   * @alias ICAL.RecurIterator\n   * @param {Object} options                The iterator options\n   * @param {ICAL.Recur} options.rule       The rule to iterate.\n   * @param {ICAL.Time} options.dtstart     The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  function icalrecur_iterator(options) {\n    this.fromData(options);\n  }\n\n  icalrecur_iterator.prototype = {\n\n    /**\n     * True when iteration is finished.\n     * @type {Boolean}\n     */\n    completed: false,\n\n    /**\n     * The rule that is being iterated\n     * @type {ICAL.Recur}\n     */\n    rule: null,\n\n    /**\n     * The start date of the event being iterated.\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * The last occurrence that was returned from the\n     * {@link ICAL.RecurIterator#next} method.\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * The sequence number from the occurrence\n     * @type {Number}\n     */\n    occurrence_number: 0,\n\n    /**\n     * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n     * @type {Object}\n     * @private\n     */\n    by_indices: null,\n\n    /**\n     * If true, the iterator has already been initialized\n     * @type {Boolean}\n     * @private\n     */\n    initialized: false,\n\n    /**\n     * The initializd by-data.\n     * @type {Object}\n     * @private\n     */\n    by_data: null,\n\n    /**\n     * The expanded yeardays\n     * @type {Array}\n     * @private\n     */\n    days: null,\n\n    /**\n     * The index in the {@link ICAL.RecurIterator#days} array.\n     * @type {Number}\n     * @private\n     */\n    days_index: 0,\n\n    /**\n     * Initialize the recurrence iterator from the passed data object. This\n     * method is usually not called directly, you can initialize the iterator\n     * through the constructor.\n     *\n     * @param {Object} options                The iterator options\n     * @param {ICAL.Recur} options.rule       The rule to iterate.\n     * @param {ICAL.Time} options.dtstart     The start date of the event.\n     * @param {Boolean=} options.initialized  When true, assume that options are\n     *        from a previously constructed iterator. Initialization will not be\n     *        repeated.\n     */\n    fromData: function(options) {\n      this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur);\n\n      if (!this.rule) {\n        throw new Error('iterator requires a (ICAL.Recur) rule');\n      }\n\n      this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!this.dtstart) {\n        throw new Error('iterator requires a (ICAL.Time) dtstart');\n      }\n\n      if (options.by_data) {\n        this.by_data = options.by_data;\n      } else {\n        this.by_data = ICAL.helpers.clone(this.rule.parts, true);\n      }\n\n      if (options.occurrence_number)\n        this.occurrence_number = options.occurrence_number;\n\n      this.days = options.days || [];\n      if (options.last) {\n        this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time);\n      }\n\n      this.by_indices = options.by_indices;\n\n      if (!this.by_indices) {\n        this.by_indices = {\n          \"BYSECOND\": 0,\n          \"BYMINUTE\": 0,\n          \"BYHOUR\": 0,\n          \"BYDAY\": 0,\n          \"BYMONTH\": 0,\n          \"BYWEEKNO\": 0,\n          \"BYMONTHDAY\": 0\n        };\n      }\n\n      this.initialized = options.initialized || false;\n\n      if (!this.initialized) {\n        this.init();\n      }\n    },\n\n    /**\n     * Intialize the iterator\n     * @private\n     */\n    init: function icalrecur_iterator_init() {\n      this.initialized = true;\n      this.last = this.dtstart.clone();\n      var parts = this.by_data;\n\n      if (\"BYDAY\" in parts) {\n        // libical does this earlier when the rule is loaded, but we postpone to\n        // now so we can preserve the original order.\n        this.sort_byday_rules(parts.BYDAY);\n      }\n\n      // If the BYYEARDAY appares, no other date rule part may appear\n      if (\"BYYEARDAY\" in parts) {\n        if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts ||\n            \"BYMONTHDAY\" in parts || \"BYDAY\" in parts) {\n          throw new Error(\"Invalid BYYEARDAY rule\");\n        }\n      }\n\n      // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n      if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n        throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n      }\n\n      // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n      // BYWEEKNO may appear.\n      if (this.rule.freq == \"MONTHLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n        throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n      }\n\n      // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n      // BYYEARDAY may appear.\n      if (this.rule.freq == \"WEEKLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n        throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n      }\n\n      // BYYEARDAY may only appear in YEARLY rules\n      if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n        throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n      }\n\n      this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n      this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n      this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n      this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n      this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n      if (this.rule.freq == \"WEEKLY\") {\n        if (\"BYDAY\" in parts) {\n          var bydayParts = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n          if ((this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0) || wkdy < 0) {\n            // Initial time is after first day of BYDAY data\n            this.last.day += wkdy;\n          }\n        } else {\n          var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n          parts.BYDAY = [dayName];\n        }\n      }\n\n      if (this.rule.freq == \"YEARLY\") {\n        for (;;) {\n          this.expand_year_days(this.last.year);\n          if (this.days.length > 0) {\n            break;\n          }\n          this.increment_year(this.rule.interval);\n        }\n\n        this._nextByYearDay();\n      }\n\n      if (this.rule.freq == \"MONTHLY\" && this.has_by_data(\"BYDAY\")) {\n        var tempLast = null;\n        var initLast = this.last.clone();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n\n        // Check every weekday in BYDAY with relative dow and pos.\n        for (var i in this.by_data.BYDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYDAY.hasOwnProperty(i)) {\n            continue;\n          }\n          this.last = initLast.clone();\n          var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var dayOfMonth = this.last.nthWeekDay(dow, pos);\n\n          // If |pos| >= 6, the byday is invalid for a monthly rule.\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          }\n\n          // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n        this.last = tempLast.clone();\n\n        //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        if (this.last.day < 0) {\n          var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n          this.last.day = daysInMonth + this.last.day + 1;\n        }\n      }\n\n    },\n\n    /**\n     * Retrieve the next occurrence from the iterator.\n     * @return {ICAL.Time}\n     */\n    next: function icalrecur_iterator_next() {\n      var before = (this.last ? this.last.clone() : null);\n\n      if ((this.rule.count && this.occurrence_number >= this.rule.count) ||\n          (this.rule.until && this.last.compare(this.rule.until) > 0)) {\n\n        //XXX: right now this is just a flag and has no impact\n        //     we can simplify the above case to check for completed later.\n        this.completed = true;\n\n        return null;\n      }\n\n      if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n        // First of all, give the instance that was initialized\n        this.occurrence_number++;\n        return this.last;\n      }\n\n\n      var valid;\n      do {\n        valid = 1;\n\n        switch (this.rule.freq) {\n        case \"SECONDLY\":\n          this.next_second();\n          break;\n        case \"MINUTELY\":\n          this.next_minute();\n          break;\n        case \"HOURLY\":\n          this.next_hour();\n          break;\n        case \"DAILY\":\n          this.next_day();\n          break;\n        case \"WEEKLY\":\n          this.next_week();\n          break;\n        case \"MONTHLY\":\n          valid = this.next_month();\n          break;\n        case \"YEARLY\":\n          this.next_year();\n          break;\n\n        default:\n          return null;\n        }\n      } while (!this.check_contracting_rules() ||\n               this.last.compare(this.dtstart) < 0 ||\n               !valid);\n\n      // TODO is this valid?\n      if (this.last.compare(before) == 0) {\n        throw new Error(\"Same occurrence found twice, protecting \" +\n                        \"you from death by recursion\");\n      }\n\n      if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n        this.completed = true;\n        return null;\n      } else {\n        this.occurrence_number++;\n        return this.last;\n      }\n    },\n\n    next_second: function next_second() {\n      return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n    },\n\n    increment_second: function increment_second(inc) {\n      return this.increment_generic(inc, \"second\", 60, \"minute\");\n    },\n\n    next_minute: function next_minute() {\n      return this.next_generic(\"BYMINUTE\", \"MINUTELY\",\n                               \"minute\", \"hour\", \"next_second\");\n    },\n\n    increment_minute: function increment_minute(inc) {\n      return this.increment_generic(inc, \"minute\", 60, \"hour\");\n    },\n\n    next_hour: function next_hour() {\n      return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\",\n                               \"monthday\", \"next_minute\");\n    },\n\n    increment_hour: function increment_hour(inc) {\n      this.increment_generic(inc, \"hour\", 24, \"monthday\");\n    },\n\n    next_day: function next_day() {\n      var has_by_day = (\"BYDAY\" in this.by_data);\n      var this_freq = (this.rule.freq == \"DAILY\");\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (this_freq) {\n        this.increment_monthday(this.rule.interval);\n      } else {\n        this.increment_monthday(1);\n      }\n\n      return 0;\n    },\n\n    next_week: function next_week() {\n      var end_of_data = 0;\n\n      if (this.next_weekday_by_week() == 0) {\n        return end_of_data;\n      }\n\n      if (this.has_by_data(\"BYWEEKNO\")) {\n        var idx = ++this.by_indices.BYWEEKNO;\n\n        if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n          this.by_indices.BYWEEKNO = 0;\n          end_of_data = 1;\n        }\n\n        // HACK should be first month of the year\n        this.last.month = 1;\n        this.last.day = 1;\n\n        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n\n        this.last.day += 7 * week_no;\n\n        if (end_of_data) {\n          this.increment_year(1);\n        }\n      } else {\n        // Jump to the next week\n        this.increment_monthday(7 * this.rule.interval);\n      }\n\n      return end_of_data;\n    },\n\n    /**\n     * Normalize each by day rule for a given year/month.\n     * Takes into account ordering and negative rules\n     *\n     * @private\n     * @param {Number} year         Current year.\n     * @param {Number} month        Current month.\n     * @param {Array}  rules        Array of rules.\n     *\n     * @return {Array} sorted and normalized rules.\n     *                 Negative rules will be expanded to their\n     *                 correct positive values for easier processing.\n     */\n    normalizeByMonthDayRules: function(year, month, rules) {\n      var daysInMonth = ICAL.Time.daysInMonth(month, year);\n\n      // XXX: This is probably bad for performance to allocate\n      //      a new array for each month we scan, if possible\n      //      we should try to optimize this...\n      var newRules = [];\n\n      var ruleIdx = 0;\n      var len = rules.length;\n      var rule;\n\n      for (; ruleIdx < len; ruleIdx++) {\n        rule = rules[ruleIdx];\n\n        // if this rule falls outside of given\n        // month discard it.\n        if (Math.abs(rule) > daysInMonth) {\n          continue;\n        }\n\n        // negative case\n        if (rule < 0) {\n          // we add (not subtract it is a negative number)\n          // one from the rule because 1 === last day of month\n          rule = daysInMonth + (rule + 1);\n        } else if (rule === 0) {\n          // skip zero: it is invalid.\n          continue;\n        }\n\n        // only add unique items...\n        if (newRules.indexOf(rule) === -1) {\n          newRules.push(rule);\n        }\n\n      }\n\n      // unique and sort\n      return newRules.sort(function(a, b) { return a - b; });\n    },\n\n    /**\n     * NOTES:\n     * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n     * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n     * both conditions match a given date (this.last.day) iteration stops.\n     *\n     * @private\n     * @param {Boolean=} isInit     When given true will not increment the\n     *                                current day (this.last).\n     */\n    _byDayAndMonthDay: function(isInit) {\n      var byMonthDay; // setup in initMonth\n      var byDay = this.by_data.BYDAY;\n\n      var date;\n      var dateIdx = 0;\n      var dateLen; // setup in initMonth\n      var dayLen = byDay.length;\n\n      // we are not valid by default\n      var dataIsValid = 0;\n\n      var daysInMonth;\n      var self = this;\n      // we need a copy of this, because a DateTime gets normalized\n      // automatically if the day is out of range. At some points we\n      // set the last day to 0 to start counting.\n      var lastDay = this.last.day;\n\n      function initMonth() {\n        daysInMonth = ICAL.Time.daysInMonth(\n          self.last.month, self.last.year\n        );\n\n        byMonthDay = self.normalizeByMonthDayRules(\n          self.last.year,\n          self.last.month,\n          self.by_data.BYMONTHDAY\n        );\n\n        dateLen = byMonthDay.length;\n\n        // For the case of more than one occurrence in one month\n        // we have to be sure to start searching after the last\n        // found date or at the last BYMONTHDAY, unless we are\n        // initializing the iterator because in this case we have\n        // to consider the last found date too.\n        while (byMonthDay[dateIdx] <= lastDay &&\n               !(isInit && byMonthDay[dateIdx] == lastDay) &&\n               dateIdx < dateLen - 1) {\n          dateIdx++;\n        }\n      }\n\n      function nextMonth() {\n        // since the day is incremented at the start\n        // of the loop below, we need to start at 0\n        lastDay = 0;\n        self.increment_month();\n        dateIdx = 0;\n        initMonth();\n      }\n\n      initMonth();\n\n      // should come after initMonth\n      if (isInit) {\n        lastDay -= 1;\n      }\n\n      // Use a counter to avoid an infinite loop with malformed rules.\n      // Stop checking after 4 years so we consider also a leap year.\n      var monthsCounter = 48;\n\n      while (!dataIsValid && monthsCounter) {\n        monthsCounter--;\n        // increment the current date. This is really\n        // important otherwise we may fall into the infinite\n        // loop trap. The initial date takes care of the case\n        // where the current date is the date we are looking\n        // for.\n        date = lastDay + 1;\n\n        if (date > daysInMonth) {\n          nextMonth();\n          continue;\n        }\n\n        // find next date\n        var next = byMonthDay[dateIdx++];\n\n        // this logic is dependant on the BYMONTHDAYS\n        // being in order (which is done by #normalizeByMonthDayRules)\n        if (next >= date) {\n          // if the next month day is in the future jump to it.\n          lastDay = next;\n        } else {\n          // in this case the 'next' monthday has past\n          // we must move to the month.\n          nextMonth();\n          continue;\n        }\n\n        // Now we can loop through the day rules to see\n        // if one matches the current month date.\n        for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n          var parts = this.ruleDayOfWeek(byDay[dayIdx]);\n          var pos = parts[0];\n          var dow = parts[1];\n\n          this.last.day = lastDay;\n          if (this.last.isNthWeekDay(dow, pos)) {\n            // when we find the valid one we can mark\n            // the conditions as met and break the loop.\n            // (Because we have this condition above\n            //  it will also break the parent loop).\n            dataIsValid = 1;\n            break;\n          }\n        }\n\n        // It is completely possible that the combination\n        // cannot be matched in the current month.\n        // When we reach the end of possible combinations\n        // in the current month we iterate to the next one.\n        // since dateIdx is incremented right after getting\n        // \"next\", we don't need dateLen -1 here.\n        if (!dataIsValid && dateIdx === dateLen) {\n          nextMonth();\n          continue;\n        }\n      }\n\n      if (monthsCounter <= 0) {\n        // Checked 4 years without finding a Byday that matches\n        // a Bymonthday. Maybe the rule is not correct.\n        throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n      }\n\n\n      return dataIsValid;\n    },\n\n    next_month: function next_month() {\n      var this_freq = (this.rule.freq == \"MONTHLY\");\n      var data_valid = 1;\n\n      if (this.next_hour() == 0) {\n        return data_valid;\n      }\n\n      if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n        data_valid = this._byDayAndMonthDay();\n      } else if (this.has_by_data(\"BYDAY\")) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var setpos = 0;\n        var setpos_total = 0;\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          var last_day = this.last.day;\n          for (var day = 1; day <= daysInMonth; day++) {\n            this.last.day = day;\n            if (this.is_day_in_byday(this.last)) {\n              setpos_total++;\n              if (day <= last_day) {\n                setpos++;\n              }\n            }\n          }\n          this.last.day = last_day;\n        }\n\n        data_valid = 0;\n        for (var day = this.last.day + 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") ||\n                this.check_set_position(++setpos) ||\n                this.check_set_position(setpos - setpos_total - 1)) {\n\n              data_valid = 1;\n              break;\n            }\n          }\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          this.increment_month();\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n              data_valid = 1;\n            }\n          } else {\n            data_valid = 0;\n          }\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        this.by_indices.BYMONTHDAY++;\n\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          this.by_indices.BYMONTHDAY = 0;\n          this.increment_month();\n        }\n\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n        if (day < 0) {\n          day = daysInMonth + day + 1;\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          data_valid = this.is_day_in_byday(this.last);\n        } else {\n          this.last.day = day;\n        }\n\n      } else {\n        this.increment_month();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n          data_valid = 0;\n        } else {\n          this.last.day = this.by_data.BYMONTHDAY[0];\n        }\n      }\n\n      return data_valid;\n    },\n\n    next_weekday_by_week: function next_weekday_by_week() {\n      var end_of_data = 0;\n\n      if (this.next_hour() == 0) {\n        return end_of_data;\n      }\n\n      if (!this.has_by_data(\"BYDAY\")) {\n        return 1;\n      }\n\n      for (;;) {\n        var tt = new ICAL.Time();\n        this.by_indices.BYDAY++;\n\n        if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n          this.by_indices.BYDAY = 0;\n          end_of_data = 1;\n        }\n\n        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n        var parts = this.ruleDayOfWeek(coded_day);\n        var dow = parts[1];\n\n        dow -= this.rule.wkst;\n\n        if (dow < 0) {\n          dow += 7;\n        }\n\n        tt.year = this.last.year;\n        tt.month = this.last.month;\n        tt.day = this.last.day;\n\n        var startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n        if (dow + startOfWeek < 1) {\n          // The selected date is in the previous year\n          if (!end_of_data) {\n            continue;\n          }\n        }\n\n        var next = ICAL.Time.fromDayOfYear(startOfWeek + dow,\n                                                  this.last.year);\n\n        /**\n         * The normalization horrors below are due to\n         * the fact that when the year/month/day changes\n         * it can effect the other operations that come after.\n         */\n        this.last.year = next.year;\n        this.last.month = next.month;\n        this.last.day = next.day;\n\n        return end_of_data;\n      }\n    },\n\n    next_year: function next_year() {\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (++this.days_index == this.days.length) {\n        this.days_index = 0;\n        do {\n          this.increment_year(this.rule.interval);\n          this.expand_year_days(this.last.year);\n        } while (this.days.length == 0);\n      }\n\n      this._nextByYearDay();\n\n      return 1;\n    },\n\n    _nextByYearDay: function _nextByYearDay() {\n        var doy = this.days[this.days_index];\n        var year = this.last.year;\n        if (doy < 1) {\n            // Time.fromDayOfYear(doy, year) indexes relative to the\n            // start of the given year. That is different from the\n            // semantics of BYYEARDAY where negative indexes are an\n            // offset from the end of the given year.\n            doy += 1;\n            year += 1;\n        }\n        var next = ICAL.Time.fromDayOfYear(doy, year);\n        this.last.day = next.day;\n        this.last.month = next.month;\n    },\n\n    /**\n     * @param dow (eg: '1TU', '-1MO')\n     * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday\n     * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n     */\n    ruleDayOfWeek: function ruleDayOfWeek(dow, aWeekStart) {\n      var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n      if (matches) {\n        var pos = parseInt(matches[1] || 0, 10);\n        dow = ICAL.Recur.icalDayToNumericDay(matches[2], aWeekStart);\n        return [pos, dow];\n      } else {\n        return [0, 0];\n      }\n    },\n\n    next_generic: function next_generic(aRuleType, aInterval, aDateAttr,\n                                        aFollowingAttr, aPreviousIncr) {\n      var has_by_rule = (aRuleType in this.by_data);\n      var this_freq = (this.rule.freq == aInterval);\n      var end_of_data = 0;\n\n      if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n        return end_of_data;\n      }\n\n      if (has_by_rule) {\n        this.by_indices[aRuleType]++;\n        var idx = this.by_indices[aRuleType];\n        var dta = this.by_data[aRuleType];\n\n        if (this.by_indices[aRuleType] == dta.length) {\n          this.by_indices[aRuleType] = 0;\n          end_of_data = 1;\n        }\n        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n      } else if (this_freq) {\n        this[\"increment_\" + aDateAttr](this.rule.interval);\n      }\n\n      if (has_by_rule && end_of_data && this_freq) {\n        this[\"increment_\" + aFollowingAttr](1);\n      }\n\n      return end_of_data;\n    },\n\n    increment_monthday: function increment_monthday(inc) {\n      for (var i = 0; i < inc; i++) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        this.last.day++;\n\n        if (this.last.day > daysInMonth) {\n          this.last.day -= daysInMonth;\n          this.increment_month();\n        }\n      }\n    },\n\n    increment_month: function increment_month() {\n      this.last.day = 1;\n      if (this.has_by_data(\"BYMONTH\")) {\n        this.by_indices.BYMONTH++;\n\n        if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n          this.by_indices.BYMONTH = 0;\n          this.increment_year(1);\n        }\n\n        this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n      } else {\n        if (this.rule.freq == \"MONTHLY\") {\n          this.last.month += this.rule.interval;\n        } else {\n          this.last.month++;\n        }\n\n        this.last.month--;\n        var years = ICAL.helpers.trunc(this.last.month / 12);\n        this.last.month %= 12;\n        this.last.month++;\n\n        if (years != 0) {\n          this.increment_year(years);\n        }\n      }\n    },\n\n    increment_year: function increment_year(inc) {\n      this.last.year += inc;\n    },\n\n    increment_generic: function increment_generic(inc, aDateAttr,\n                                                  aFactor, aNextIncrement) {\n      this.last[aDateAttr] += inc;\n      var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);\n      this.last[aDateAttr] %= aFactor;\n      if (nextunit != 0) {\n        this[\"increment_\" + aNextIncrement](nextunit);\n      }\n    },\n\n    has_by_data: function has_by_data(aRuleType) {\n      return (aRuleType in this.rule.parts);\n    },\n\n    expand_year_days: function expand_year_days(aYear) {\n      var t = new ICAL.Time();\n      this.days = [];\n\n      // We need our own copy with a few keys set\n      var parts = {};\n      var rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n      for (var p in rules) {\n        /* istanbul ignore else */\n        if (rules.hasOwnProperty(p)) {\n          var part = rules[p];\n          if (part in this.rule.parts) {\n            parts[part] = this.rule.parts[part];\n          }\n        }\n      }\n\n      if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n        var valid = 1;\n        var validWeeks = {};\n        t.year = aYear;\n        t.isDate = true;\n\n        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n          var month = this.by_data.BYMONTH[monthIdx];\n          t.month = month;\n          t.day = 1;\n          var first_week = t.weekNumber(this.rule.wkst);\n          t.day = ICAL.Time.daysInMonth(month, aYear);\n          var last_week = t.weekNumber(this.rule.wkst);\n          for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n            validWeeks[monthIdx] = 1;\n          }\n        }\n\n        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n          var weekno = this.by_data.BYWEEKNO[weekIdx];\n          if (weekno < 52) {\n            valid &= validWeeks[weekIdx];\n          } else {\n            valid = 0;\n          }\n        }\n\n        if (valid) {\n          delete parts.BYMONTH;\n        } else {\n          delete parts.BYWEEKNO;\n        }\n      }\n\n      var partCount = Object.keys(parts).length;\n\n      if (partCount == 0) {\n        var t1 = this.dtstart.clone();\n        t1.year = this.last.year;\n        this.days.push(t1.dayOfYear());\n      } else if (partCount == 1 && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var t2 = this.dtstart.clone();\n          t2.year = aYear;\n          t2.month = this.by_data.BYMONTH[monthkey];\n          t2.isDate = true;\n          this.days.push(t2.dayOfYear());\n        }\n      } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n        for (var monthdaykey in this.by_data.BYMONTHDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n            continue;\n          }\n          var t3 = this.dtstart.clone();\n          var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n          if (day_ < 0) {\n            var daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear);\n            day_ = day_ + daysInMonth + 1;\n          }\n          t3.day = day_;\n          t3.year = aYear;\n          t3.isDate = true;\n          this.days.push(t3.dayOfYear());\n        }\n      } else if (partCount == 2 &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month_ = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month_, aYear);\n          for (var monthdaykey in this.by_data.BYMONTHDAY) {\n            /* istanbul ignore if */\n            if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n              continue;\n            }\n            var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n            if (day_ < 0) {\n              day_ = day_ + daysInMonth + 1;\n            }\n            t.day = day_;\n            t.month = month_;\n            t.year = aYear;\n            t.isDate = true;\n\n            this.days.push(t.dayOfYear());\n          }\n        }\n      } else if (partCount == 1 && \"BYWEEKNO\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 2 &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 1 && \"BYDAY\" in parts) {\n        this.days = this.days.concat(this.expand_by_day(aYear));\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month, aYear);\n\n          t.year = aYear;\n          t.month = this.by_data.BYMONTH[monthkey];\n          t.day = 1;\n          t.isDate = true;\n\n          var first_dow = t.dayOfWeek();\n          var doy_offset = t.dayOfYear() - 1;\n\n          t.day = daysInMonth;\n          var last_dow = t.dayOfWeek();\n\n          if (this.has_by_data(\"BYSETPOS\")) {\n            var set_pos_counter = 0;\n            var by_month_day = [];\n            for (var day = 1; day <= daysInMonth; day++) {\n              t.day = day;\n              if (this.is_day_in_byday(t)) {\n                by_month_day.push(day);\n              }\n            }\n\n            for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n              if (this.check_set_position(spIndex + 1) ||\n                  this.check_set_position(spIndex - by_month_day.length)) {\n                this.days.push(doy_offset + by_month_day[spIndex]);\n              }\n            }\n          } else {\n            for (var daycodedkey in this.by_data.BYDAY) {\n              /* istanbul ignore if */\n              if (!this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {\n                continue;\n              }\n              var coded_day = this.by_data.BYDAY[daycodedkey];\n              var bydayParts = this.ruleDayOfWeek(coded_day);\n              var pos = bydayParts[0];\n              var dow = bydayParts[1];\n              var month_day;\n\n              var first_matching_day = ((dow + 7 - first_dow) % 7) + 1;\n              var last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);\n\n              if (pos == 0) {\n                for (var day = first_matching_day; day <= daysInMonth; day += 7) {\n                  this.days.push(doy_offset + day);\n                }\n              } else if (pos > 0) {\n                month_day = first_matching_day + (pos - 1) * 7;\n\n                if (month_day <= daysInMonth) {\n                  this.days.push(doy_offset + month_day);\n                }\n              } else {\n                month_day = last_matching_day + (pos + 1) * 7;\n\n                if (month_day > 0) {\n                  this.days.push(doy_offset + month_day);\n                }\n              }\n            }\n          }\n        }\n        // Return dates in order of occurrence (1,2,3,...) instead\n        // of by groups of weekdays (1,8,15,...,2,9,16,...).\n        this.days.sort(function(a, b) { return a - b; }); // Comparator function allows to sort numbers.\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&\n              this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          var weekno = tt.weekNumber(this.rule.wkst);\n\n          if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemted in libical\n      } else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n        this.days = this.days.concat(this.by_data.BYYEARDAY);\n      } else {\n        this.days = [];\n      }\n      return 0;\n    },\n\n    expand_by_day: function expand_by_day(aYear) {\n\n      var days_list = [];\n      var tmp = this.last.clone();\n\n      tmp.year = aYear;\n      tmp.month = 1;\n      tmp.day = 1;\n      tmp.isDate = true;\n\n      var start_dow = tmp.dayOfWeek();\n\n      tmp.month = 12;\n      tmp.day = 31;\n      tmp.isDate = true;\n\n      var end_dow = tmp.dayOfWeek();\n      var end_year_day = tmp.dayOfYear();\n\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n\n        if (pos == 0) {\n          var tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;\n\n          for (var doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n            days_list.push(doy);\n          }\n\n        } else if (pos > 0) {\n          var first;\n          if (dow >= start_dow) {\n            first = dow - start_dow + 1;\n          } else {\n            first = dow - start_dow + 8;\n          }\n\n          days_list.push(first + (pos - 1) * 7);\n        } else {\n          var last;\n          pos = -pos;\n\n          if (dow <= end_dow) {\n            last = end_year_day - end_dow + dow;\n          } else {\n            last = end_year_day - end_dow + dow - 7;\n          }\n\n          days_list.push(last - (pos - 1) * 7);\n        }\n      }\n      return days_list;\n    },\n\n    is_day_in_byday: function is_day_in_byday(tt) {\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n        var this_dow = tt.dayOfWeek();\n\n        if ((pos == 0 && dow == this_dow) ||\n            (tt.nthWeekDay(dow, pos) == tt.day)) {\n          return 1;\n        }\n      }\n\n      return 0;\n    },\n\n    /**\n     * Checks if given value is in BYSETPOS.\n     *\n     * @private\n     * @param {Numeric} aPos position to check for.\n     * @return {Boolean} false unless BYSETPOS rules exist\n     *                   and the given value is present in rules.\n     */\n    check_set_position: function check_set_position(aPos) {\n      if (this.has_by_data('BYSETPOS')) {\n        var idx = this.by_data.BYSETPOS.indexOf(aPos);\n        // negative numbers are not false-y\n        return idx !== -1;\n      }\n      return false;\n    },\n\n    sort_byday_rules: function icalrecur_sort_byday_rules(aRules) {\n      for (var i = 0; i < aRules.length; i++) {\n        for (var j = 0; j < i; j++) {\n          var one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n          var two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n          if (one > two) {\n            var tmp = aRules[i];\n            aRules[i] = aRules[j];\n            aRules[j] = tmp;\n          }\n        }\n      }\n    },\n\n    check_contract_restriction: function check_contract_restriction(aRuleType, v) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n      var pass = false;\n\n      if (aRuleType in this.by_data &&\n          ruleMapValue == icalrecur_iterator.CONTRACT) {\n\n        var ruleType = this.by_data[aRuleType];\n\n        for (var bydatakey in ruleType) {\n          /* istanbul ignore else */\n          if (ruleType.hasOwnProperty(bydatakey)) {\n            if (ruleType[bydatakey] == v) {\n              pass = true;\n              break;\n            }\n          }\n        }\n      } else {\n        // Not a contracting byrule or has no data, test passes\n        pass = true;\n      }\n      return pass;\n    },\n\n    check_contracting_rules: function check_contracting_rules() {\n      var dow = this.last.dayOfWeek();\n      var weekNo = this.last.weekNumber(this.rule.wkst);\n      var doy = this.last.dayOfYear();\n\n      return (this.check_contract_restriction(\"BYSECOND\", this.last.second) &&\n              this.check_contract_restriction(\"BYMINUTE\", this.last.minute) &&\n              this.check_contract_restriction(\"BYHOUR\", this.last.hour) &&\n              this.check_contract_restriction(\"BYDAY\", ICAL.Recur.numericDayToIcalDay(dow)) &&\n              this.check_contract_restriction(\"BYWEEKNO\", weekNo) &&\n              this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) &&\n              this.check_contract_restriction(\"BYMONTH\", this.last.month) &&\n              this.check_contract_restriction(\"BYYEARDAY\", doy));\n    },\n\n    setup_defaults: function setup_defaults(aRuleType, req, deftime) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n\n      if (ruleMapValue != icalrecur_iterator.CONTRACT) {\n        if (!(aRuleType in this.by_data)) {\n          this.by_data[aRuleType] = [deftime];\n        }\n        if (this.rule.freq != req) {\n          return this.by_data[aRuleType][0];\n        }\n      }\n      return deftime;\n    },\n\n    /**\n     * Convert iterator into a serialize-able object.  Will preserve current\n     * iteration sequence to ensure the seamless continuation of the recurrence\n     * rule.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var result = Object.create(null);\n\n      result.initialized = this.initialized;\n      result.rule = this.rule.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.by_data = this.by_data;\n      result.days = this.days;\n      result.last = this.last.toJSON();\n      result.by_indices = this.by_indices;\n      result.occurrence_number = this.occurrence_number;\n\n      return result;\n    }\n  };\n\n  icalrecur_iterator._indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n\n  icalrecur_iterator._expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n  icalrecur_iterator.UNKNOWN = 0;\n  icalrecur_iterator.CONTRACT = 1;\n  icalrecur_iterator.EXPAND = 2;\n  icalrecur_iterator.ILLEGAL = 3;\n\n  return icalrecur_iterator;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurExpansion = (function() {\n  function formatTime(item) {\n    return ICAL.helpers.formatClassType(item, ICAL.Time);\n  }\n\n  function compareTime(a, b) {\n    return a.compare(b);\n  }\n\n  function isRecurringComponent(comp) {\n    return comp.hasProperty('rdate') ||\n           comp.hasProperty('rrule') ||\n           comp.hasProperty('recurrence-id');\n  }\n\n  /**\n   * @classdesc\n   * Primary class for expanding recurring rules.  Can take multiple rrules,\n   * rdates, exdate(s) and iterate (in order) over each next occurrence.\n   *\n   * Once initialized this class can also be serialized saved and continue\n   * iteration from the last point.\n   *\n   * NOTE: it is intended that this class is to be used\n   *       with ICAL.Event which handles recurrence exceptions.\n   *\n   * @example\n   * // assuming event is a parsed ical component\n   * var event;\n   *\n   * var expand = new ICAL.RecurExpansion({\n   *   component: event,\n   *   dtstart: event.getFirstPropertyValue('dtstart')\n   * });\n   *\n   * // remember there are infinite rules\n   * // so it is a good idea to limit the scope\n   * // of the iterations then resume later on.\n   *\n   * // next is always an ICAL.Time or null\n   * var next;\n   *\n   * while (someCondition && (next = expand.next())) {\n   *   // do something with next\n   * }\n   *\n   * // save instance for later\n   * var json = JSON.stringify(expand);\n   *\n   * //...\n   *\n   * // NOTE: if the component's properties have\n   * //       changed you will need to rebuild the\n   * //       class and start over. This only works\n   * //       when the component's recurrence info is the same.\n   * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n   *\n   * @description\n   * The options object can be filled with the specified initial values. It can\n   * also contain additional members, as a result of serializing a previous\n   * expansion state, as shown in the example.\n   *\n   * @class\n   * @alias ICAL.RecurExpansion\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {ICAL.Time} options.dtstart\n   *        Start time of the event\n   * @param {ICAL.Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  function RecurExpansion(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  RecurExpansion.prototype = {\n    /**\n     * True when iteration is fully completed.\n     * @type {Boolean}\n     */\n    complete: false,\n\n    /**\n     * Array of rrule iterators.\n     *\n     * @type {ICAL.RecurIterator[]}\n     * @private\n     */\n    ruleIterators: null,\n\n    /**\n     * Array of rdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    ruleDates: null,\n\n    /**\n     * Array of exdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    exDates: null,\n\n    /**\n     * Current position in ruleDates array.\n     * @type {Number}\n     * @private\n     */\n    ruleDateInc: 0,\n\n    /**\n     * Current position in exDates array\n     * @type {Number}\n     * @private\n     */\n    exDateInc: 0,\n\n    /**\n     * Current negative date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    exDate: null,\n\n    /**\n     * Current additional date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    ruleDate: null,\n\n    /**\n     * Start date of recurring rules.\n     *\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * Last expanded time\n     *\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * Initialize the recurrence expansion from the data object. The options\n     * object may also contain additional members, see the\n     * {@link ICAL.RecurExpansion constructor} for more details.\n     *\n     * @param {Object} options\n     *        Recurrence expansion options\n     * @param {ICAL.Time} options.dtstart\n     *        Start time of the event\n     * @param {ICAL.Component=} options.component\n     *        Component for expansion, required if not resuming.\n     */\n    fromData: function(options) {\n      var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!start) {\n        throw new Error('.dtstart (ICAL.Time) must be given');\n      } else {\n        this.dtstart = start;\n      }\n\n      if (options.component) {\n        this._init(options.component);\n      } else {\n        this.last = formatTime(options.last) || start.clone();\n\n        if (!options.ruleIterators) {\n          throw new Error('.ruleIterators or .component must be given');\n        }\n\n        this.ruleIterators = options.ruleIterators.map(function(item) {\n          return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);\n        });\n\n        this.ruleDateInc = options.ruleDateInc;\n        this.exDateInc = options.exDateInc;\n\n        if (options.ruleDates) {\n          this.ruleDates = options.ruleDates.map(formatTime);\n          this.ruleDate = this.ruleDates[this.ruleDateInc];\n        }\n\n        if (options.exDates) {\n          this.exDates = options.exDates.map(formatTime);\n          this.exDate = this.exDates[this.exDateInc];\n        }\n\n        if (typeof(options.complete) !== 'undefined') {\n          this.complete = options.complete;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence in the series.\n     * @return {ICAL.Time}\n     */\n    next: function() {\n      var iter;\n      var ruleOfDay;\n      var next;\n      var compare;\n\n      var maxTries = 500;\n      var currentTry = 0;\n\n      while (true) {\n        if (currentTry++ > maxTries) {\n          throw new Error(\n            'max tries have occured, rule may be impossible to forfill.'\n          );\n        }\n\n        next = this.ruleDate;\n        iter = this._nextRecurrenceIter(this.last);\n\n        // no more matches\n        // because we increment the rule day or rule\n        // _after_ we choose a value this should be\n        // the only spot where we need to worry about the\n        // end of events.\n        if (!next && !iter) {\n          // there are no more iterators or rdates\n          this.complete = true;\n          break;\n        }\n\n        // no next rule day or recurrence rule is first.\n        if (!next || (iter && next.compare(iter.last) > 0)) {\n          // must be cloned, recur will reuse the time element.\n          next = iter.last.clone();\n          // move to next so we can continue\n          iter.next();\n        }\n\n        // if the ruleDate is still next increment it.\n        if (this.ruleDate === next) {\n          this._nextRuleDay();\n        }\n\n        this.last = next;\n\n        // check the negative rules\n        if (this.exDate) {\n          compare = this.exDate.compare(this.last);\n\n          if (compare < 0) {\n            this._nextExDay();\n          }\n\n          // if the current rule is excluded skip it.\n          if (compare === 0) {\n            this._nextExDay();\n            continue;\n          }\n        }\n\n        //XXX: The spec states that after we resolve the final\n        //     list of dates we execute exdate this seems somewhat counter\n        //     intuitive to what I have seen most servers do so for now\n        //     I exclude based on the original date not the one that may\n        //     have been modified by the exception.\n        return this.last;\n      }\n    },\n\n    /**\n     * Converts object into a serialize-able format. This format can be passed\n     * back into the expansion to resume iteration.\n     * @return {Object}\n     */\n    toJSON: function() {\n      function toJSON(item) {\n        return item.toJSON();\n      }\n\n      var result = Object.create(null);\n      result.ruleIterators = this.ruleIterators.map(toJSON);\n\n      if (this.ruleDates) {\n        result.ruleDates = this.ruleDates.map(toJSON);\n      }\n\n      if (this.exDates) {\n        result.exDates = this.exDates.map(toJSON);\n      }\n\n      result.ruleDateInc = this.ruleDateInc;\n      result.exDateInc = this.exDateInc;\n      result.last = this.last.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.complete = this.complete;\n\n      return result;\n    },\n\n    /**\n     * Extract all dates from the properties in the given component. The\n     * properties will be filtered by the property name.\n     *\n     * @private\n     * @param {ICAL.Component} component        The component to search in\n     * @param {String} propertyName             The property name to search for\n     * @return {ICAL.Time[]}                    The extracted dates.\n     */\n    _extractDates: function(component, propertyName) {\n      function handleProp(prop) {\n        idx = ICAL.helpers.binsearchInsert(\n          result,\n          prop,\n          compareTime\n        );\n\n        // ordered insert\n        result.splice(idx, 0, prop);\n      }\n\n      var result = [];\n      var props = component.getAllProperties(propertyName);\n      var len = props.length;\n      var i = 0;\n      var prop;\n\n      var idx;\n\n      for (; i < len; i++) {\n        props[i].getValues().forEach(handleProp);\n      }\n\n      return result;\n    },\n\n    /**\n     * Initialize the recurrence expansion.\n     *\n     * @private\n     * @param {ICAL.Component} component    The component to initialize from.\n     */\n    _init: function(component) {\n      this.ruleIterators = [];\n\n      this.last = this.dtstart.clone();\n\n      // to provide api consistency non-recurring\n      // events can also use the iterator though it will\n      // only return a single time.\n      if (!isRecurringComponent(component)) {\n        this.ruleDate = this.last.clone();\n        this.complete = true;\n        return;\n      }\n\n      if (component.hasProperty('rdate')) {\n        this.ruleDates = this._extractDates(component, 'rdate');\n\n        // special hack for cases where first rdate is prior\n        // to the start date. We only check for the first rdate.\n        // This is mostly for google's crazy recurring date logic\n        // (contacts birthdays).\n        if ((this.ruleDates[0]) &&\n            (this.ruleDates[0].compare(this.dtstart) < 0)) {\n\n          this.ruleDateInc = 0;\n          this.last = this.ruleDates[0].clone();\n        } else {\n          this.ruleDateInc = ICAL.helpers.binsearchInsert(\n            this.ruleDates,\n            this.last,\n            compareTime\n          );\n        }\n\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (component.hasProperty('rrule')) {\n        var rules = component.getAllProperties('rrule');\n        var i = 0;\n        var len = rules.length;\n\n        var rule;\n        var iter;\n\n        for (; i < len; i++) {\n          rule = rules[i].getFirstValue();\n          iter = rule.iterator(this.dtstart);\n          this.ruleIterators.push(iter);\n\n          // increment to the next occurrence so future\n          // calls to next return times beyond the initial iteration.\n          // XXX: I find this suspicious might be a bug?\n          iter.next();\n        }\n      }\n\n      if (component.hasProperty('exdate')) {\n        this.exDates = this._extractDates(component, 'exdate');\n        // if we have a .last day we increment the index to beyond it.\n        this.exDateInc = ICAL.helpers.binsearchInsert(\n          this.exDates,\n          this.last,\n          compareTime\n        );\n\n        this.exDate = this.exDates[this.exDateInc];\n      }\n    },\n\n    /**\n     * Advance to the next exdate\n     * @private\n     */\n    _nextExDay: function() {\n      this.exDate = this.exDates[++this.exDateInc];\n    },\n\n    /**\n     * Advance to the next rule date\n     * @private\n     */\n    _nextRuleDay: function() {\n      this.ruleDate = this.ruleDates[++this.ruleDateInc];\n    },\n\n    /**\n     * Find and return the recurrence rule with the most recent event and\n     * return it.\n     *\n     * @private\n     * @return {?ICAL.RecurIterator}    Found iterator.\n     */\n    _nextRecurrenceIter: function() {\n      var iters = this.ruleIterators;\n\n      if (iters.length === 0) {\n        return null;\n      }\n\n      var len = iters.length;\n      var iter;\n      var iterTime;\n      var iterIdx = 0;\n      var chosenIter;\n\n      // loop through each iterator\n      for (; iterIdx < len; iterIdx++) {\n        iter = iters[iterIdx];\n        iterTime = iter.last;\n\n        // if iteration is complete\n        // then we must exclude it from\n        // the search and remove it.\n        if (iter.completed) {\n          len--;\n          if (iterIdx !== 0) {\n            iterIdx--;\n          }\n          iters.splice(iterIdx, 1);\n          continue;\n        }\n\n        // find the most recent possible choice\n        if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n          // that iterator is saved\n          chosenIter = iter;\n        }\n      }\n\n      // the chosen iterator is returned but not mutated\n      // this iterator contains the most recent event.\n      return chosenIter;\n    }\n  };\n\n  return RecurExpansion;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Event = (function() {\n\n  /**\n   * @classdesc\n   * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n   * object, followed by the component/property layer. The highest level is the\n   * event representation, which this class is part of. See the\n   * {@tutorial layers} guide for more details.\n   *\n   * @class\n   * @alias ICAL.Event\n   * @param {ICAL.Component=} component         The ICAL.Component to base this event on\n   * @param {Object} options                    Options for this event\n   * @param {Boolean} options.strictExceptions\n   *          When true, will verify exceptions are related by their UUID\n   * @param {Array<ICAL.Component|ICAL.Event>} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  function Event(component, options) {\n    if (!(component instanceof ICAL.Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new ICAL.Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function(event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n  Event.prototype = {\n\n    THISANDFUTURE: 'THISANDFUTURE',\n\n    /**\n     * List of related event exceptions.\n     *\n     * @type {ICAL.Event[]}\n     */\n    exceptions: null,\n\n    /**\n     * When true, will verify exceptions are related by their UUID.\n     *\n     * @type {Boolean}\n     */\n    strictExceptions: false,\n\n    /**\n     * Relates a given event exception to this object.  If the given component\n     * does not share the UID of this event it cannot be related and will throw\n     * an exception.\n     *\n     * If this component is an exception it cannot have other exceptions\n     * related to it.\n     *\n     * @param {ICAL.Component|ICAL.Event} obj       Component or event\n     */\n    relateException: function(obj) {\n      if (this.isRecurrenceException()) {\n        throw new Error('cannot relate exception to exceptions');\n      }\n\n      if (obj instanceof ICAL.Component) {\n        obj = new ICAL.Event(obj);\n      }\n\n      if (this.strictExceptions && obj.uid !== this.uid) {\n        throw new Error('attempted to relate unrelated exception');\n      }\n\n      var id = obj.recurrenceId.toString();\n\n      // we don't sort or manage exceptions directly\n      // here the recurrence expander handles that.\n      this.exceptions[id] = obj;\n\n      // index RANGE=THISANDFUTURE exceptions so we can\n      // look them up later in getOccurrenceDetails.\n      if (obj.modifiesFuture()) {\n        var item = [\n          obj.recurrenceId.toUnixTime(), id\n        ];\n\n        // we keep them sorted so we can find the nearest\n        // value later on...\n        var idx = ICAL.helpers.binsearchInsert(\n          this.rangeExceptions,\n          item,\n          compareRangeException\n        );\n\n        this.rangeExceptions.splice(idx, 0, item);\n      }\n    },\n\n    /**\n     * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n     * value.\n     *\n     * @return {Boolean}        True, when exception is within range\n     */\n    modifiesFuture: function() {\n      if (!this.component.hasProperty('recurrence-id')) {\n        return false;\n      }\n\n      var range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n      return range === this.THISANDFUTURE;\n    },\n\n    /**\n     * Finds the range exception nearest to the given date.\n     *\n     * @param {ICAL.Time} time usually an occurrence time of an event\n     * @return {?ICAL.Event} the related event/exception or null\n     */\n    findRangeException: function(time) {\n      if (!this.rangeExceptions.length) {\n        return null;\n      }\n\n      var utc = time.toUnixTime();\n      var idx = ICAL.helpers.binsearchInsert(\n        this.rangeExceptions,\n        [utc],\n        compareRangeException\n      );\n\n      idx -= 1;\n\n      // occurs before\n      if (idx < 0) {\n        return null;\n      }\n\n      var rangeItem = this.rangeExceptions[idx];\n\n      /* istanbul ignore next: sanity check only */\n      if (utc < rangeItem[0]) {\n        return null;\n      }\n\n      return rangeItem[1];\n    },\n\n    /**\n     * This object is returned by {@link ICAL.Event#getOccurrenceDetails getOccurrenceDetails}\n     *\n     * @typedef {Object} occurrenceDetails\n     * @memberof ICAL.Event\n     * @property {ICAL.Time} recurrenceId       The passed in recurrence id\n     * @property {ICAL.Event} item              The occurrence\n     * @property {ICAL.Time} startDate          The start of the occurrence\n     * @property {ICAL.Time} endDate            The end of the occurrence\n     */\n\n    /**\n     * Returns the occurrence details based on its start time.  If the\n     * occurrence has an exception will return the details for that exception.\n     *\n     * NOTE: this method is intend to be used in conjunction\n     *       with the {@link ICAL.Event#iterator iterator} method.\n     *\n     * @param {ICAL.Time} occurrence time occurrence\n     * @return {ICAL.Event.occurrenceDetails} Information about the occurrence\n     */\n    getOccurrenceDetails: function(occurrence) {\n      var id = occurrence.toString();\n      var utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString();\n      var item;\n      var result = {\n        //XXX: Clone?\n        recurrenceId: occurrence\n      };\n\n      if (id in this.exceptions) {\n        item = result.item = this.exceptions[id];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else if (utcId in this.exceptions) {\n        item = this.exceptions[utcId];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else {\n        // range exceptions (RANGE=THISANDFUTURE) have a\n        // lower priority then direct exceptions but\n        // must be accounted for first. Their item is\n        // always the first exception with the range prop.\n        var rangeExceptionId = this.findRangeException(\n          occurrence\n        );\n        var end;\n\n        if (rangeExceptionId) {\n          var exception = this.exceptions[rangeExceptionId];\n\n          // range exception must modify standard time\n          // by the difference (if any) in start/end times.\n          result.item = exception;\n\n          var startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n          if (!startDiff) {\n            var original = exception.recurrenceId.clone();\n            var newStart = exception.startDate.clone();\n\n            // zones must be same otherwise subtract may be incorrect.\n            original.zone = newStart.zone;\n            startDiff = newStart.subtractDate(original);\n\n            this._rangeExceptionCache[rangeExceptionId] = startDiff;\n          }\n\n          var start = occurrence.clone();\n          start.zone = exception.startDate.zone;\n          start.addDuration(startDiff);\n\n          end = start.clone();\n          end.addDuration(exception.duration);\n\n          result.startDate = start;\n          result.endDate = end;\n        } else {\n          // no range exception standard expansion\n          end = occurrence.clone();\n          end.addDuration(this.duration);\n\n          result.endDate = end;\n          result.startDate = occurrence;\n          result.item = this;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Builds a recur expansion instance for a specific point in time (defaults\n     * to startDate).\n     *\n     * @param {ICAL.Time} startTime     Starting point for expansion\n     * @return {ICAL.RecurExpansion}    Expansion object\n     */\n    iterator: function(startTime) {\n      return new ICAL.RecurExpansion({\n        component: this.component,\n        dtstart: startTime || this.startDate\n      });\n    },\n\n    /**\n     * Checks if the event is recurring\n     *\n     * @return {Boolean}        True, if event is recurring\n     */\n    isRecurring: function() {\n      var comp = this.component;\n      return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n    },\n\n    /**\n     * Checks if the event describes a recurrence exception. See\n     * {@tutorial terminology} for details.\n     *\n     * @return {Boolean}    True, if the event describes a recurrence exception\n     */\n    isRecurrenceException: function() {\n      return this.component.hasProperty('recurrence-id');\n    },\n\n    /**\n     * Returns the types of recurrences this event may have.\n     *\n     * Returned as an object with the following possible keys:\n     *\n     *    - YEARLY\n     *    - MONTHLY\n     *    - WEEKLY\n     *    - DAILY\n     *    - MINUTELY\n     *    - SECONDLY\n     *\n     * @return {Object.<ICAL.Recur.frequencyValues, Boolean>}\n     *          Object of recurrence flags\n     */\n    getRecurrenceTypes: function() {\n      var rules = this.component.getAllProperties('rrule');\n      var i = 0;\n      var len = rules.length;\n      var result = Object.create(null);\n\n      for (; i < len; i++) {\n        var value = rules[i].getFirstValue();\n        result[value.freq] = true;\n      }\n\n      return result;\n    },\n\n    /**\n     * The uid of this event\n     * @type {String}\n     */\n    get uid() {\n      return this._firstProp('uid');\n    },\n\n    set uid(value) {\n      this._setProp('uid', value);\n    },\n\n    /**\n     * The start date\n     * @type {ICAL.Time}\n     */\n    get startDate() {\n      return this._firstProp('dtstart');\n    },\n\n    set startDate(value) {\n      this._setTime('dtstart', value);\n    },\n\n    /**\n     * The end date. This can be the result directly from the property, or the\n     * end date calculated from start date and duration. Setting the property\n     * will remove any duration properties.\n     * @type {ICAL.Time}\n     */\n    get endDate() {\n      var endDate = this._firstProp('dtend');\n      if (!endDate) {\n          var duration = this._firstProp('duration');\n          endDate = this.startDate.clone();\n          if (duration) {\n              endDate.addDuration(duration);\n          } else if (endDate.isDate) {\n              endDate.day += 1;\n          }\n      }\n      return endDate;\n    },\n\n    set endDate(value) {\n      if (this.component.hasProperty('duration')) {\n        this.component.removeProperty('duration');\n      }\n      this._setTime('dtend', value);\n    },\n\n    /**\n     * The duration. This can be the result directly from the property, or the\n     * duration calculated from start date and end date. Setting the property\n     * will remove any `dtend` properties.\n     * @type {ICAL.Duration}\n     */\n    get duration() {\n      var duration = this._firstProp('duration');\n      if (!duration) {\n        return this.endDate.subtractDateTz(this.startDate);\n      }\n      return duration;\n    },\n\n    set duration(value) {\n      if (this.component.hasProperty('dtend')) {\n        this.component.removeProperty('dtend');\n      }\n\n      this._setProp('duration', value);\n    },\n\n    /**\n     * The location of the event.\n     * @type {String}\n     */\n    get location() {\n      return this._firstProp('location');\n    },\n\n    set location(value) {\n      return this._setProp('location', value);\n    },\n\n    /**\n     * The attendees in the event\n     * @type {ICAL.Property[]}\n     * @readonly\n     */\n    get attendees() {\n      //XXX: This is way lame we should have a better\n      //     data structure for this later.\n      return this.component.getAllProperties('attendee');\n    },\n\n\n    /**\n     * The event summary\n     * @type {String}\n     */\n    get summary() {\n      return this._firstProp('summary');\n    },\n\n    set summary(value) {\n      this._setProp('summary', value);\n    },\n\n    /**\n     * The event description.\n     * @type {String}\n     */\n    get description() {\n      return this._firstProp('description');\n    },\n\n    set description(value) {\n      this._setProp('description', value);\n    },\n\n    /**\n     * The event color from [rfc7986](https://datatracker.ietf.org/doc/html/rfc7986)\n     * @type {String}\n     */\n    get color() {\n      return this._firstProp('color');\n    },\n\n    set color(value) {\n      this._setProp('color', value);\n    },\n\n    /**\n     * The organizer value as an uri. In most cases this is a mailto: uri, but\n     * it can also be something else, like urn:uuid:...\n     * @type {String}\n     */\n    get organizer() {\n      return this._firstProp('organizer');\n    },\n\n    set organizer(value) {\n      this._setProp('organizer', value);\n    },\n\n    /**\n     * The sequence value for this event. Used for scheduling\n     * see {@tutorial terminology}.\n     * @type {Number}\n     */\n    get sequence() {\n      return this._firstProp('sequence');\n    },\n\n    set sequence(value) {\n      this._setProp('sequence', value);\n    },\n\n    /**\n     * The recurrence id for this event. See {@tutorial terminology} for details.\n     * @type {ICAL.Time}\n     */\n    get recurrenceId() {\n      return this._firstProp('recurrence-id');\n    },\n\n    set recurrenceId(value) {\n      this._setTime('recurrence-id', value);\n    },\n\n    /**\n     * Set/update a time property's value.\n     * This will also update the TZID of the property.\n     *\n     * TODO: this method handles the case where we are switching\n     * from a known timezone to an implied timezone (one without TZID).\n     * This does _not_ handle the case of moving between a known\n     *  (by TimezoneService) timezone to an unknown timezone...\n     *\n     * We will not add/remove/update the VTIMEZONE subcomponents\n     *  leading to invalid ICAL data...\n     * @private\n     * @param {String} propName     The property name\n     * @param {ICAL.Time} time      The time to set\n     */\n    _setTime: function(propName, time) {\n      var prop = this.component.getFirstProperty(propName);\n\n      if (!prop) {\n        prop = new ICAL.Property(propName);\n        this.component.addProperty(prop);\n      }\n\n      // utc and local don't get a tzid\n      if (\n        time.zone === ICAL.Timezone.localTimezone ||\n        time.zone === ICAL.Timezone.utcTimezone\n      ) {\n        // remove the tzid\n        prop.removeParameter('tzid');\n      } else {\n        prop.setParameter('tzid', time.zone.tzid);\n      }\n\n      prop.setValue(time);\n    },\n\n    _setProp: function(name, value) {\n      this.component.updatePropertyWithValue(name, value);\n    },\n\n    _firstProp: function(name) {\n      return this.component.getFirstPropertyValue(name);\n    },\n\n    /**\n     * The string representation of this event.\n     * @return {String}\n     */\n    toString: function() {\n      return this.component.toString();\n    }\n\n  };\n\n  function compareRangeException(a, b) {\n    if (a[0] > b[0]) return 1;\n    if (b[0] > a[0]) return -1;\n    return 0;\n  }\n\n  return Event;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.ComponentParser = (function() {\n  /**\n   * @classdesc\n   * The ComponentParser is used to process a String or jCal Object,\n   * firing callbacks for various found components, as well as completion.\n   *\n   * @example\n   * var options = {\n   *   // when false no events will be emitted for type\n   *   parseEvent: true,\n   *   parseTimezone: true\n   * };\n   *\n   * var parser = new ICAL.ComponentParser(options);\n   *\n   * parser.onevent(eventComponent) {\n   *   //...\n   * }\n   *\n   * // ontimezone, etc...\n   *\n   * parser.oncomplete = function() {\n   *\n   * };\n   *\n   * parser.process(stringOrComponent);\n   *\n   * @class\n   * @alias ICAL.ComponentParser\n   * @param {Object=} options        Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  function ComponentParser(options) {\n    if (typeof(options) === 'undefined') {\n      options = {};\n    }\n\n    var key;\n    for (key in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(key)) {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  ComponentParser.prototype = {\n\n    /**\n     * When true, parse events\n     *\n     * @type {Boolean}\n     */\n    parseEvent: true,\n\n    /**\n     * When true, parse timezones\n     *\n     * @type {Boolean}\n     */\n    parseTimezone: true,\n\n\n    /* SAX like events here for reference */\n\n    /**\n     * Fired when parsing is complete\n     * @callback\n     */\n    oncomplete: /* istanbul ignore next */ function() {},\n\n    /**\n     * Fired if an error occurs during parsing.\n     *\n     * @callback\n     * @param {Error} err details of error\n     */\n    onerror: /* istanbul ignore next */ function(err) {},\n\n    /**\n     * Fired when a top level component (VTIMEZONE) is found\n     *\n     * @callback\n     * @param {ICAL.Timezone} component     Timezone object\n     */\n    ontimezone: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Fired when a top level component (VEVENT) is found.\n     *\n     * @callback\n     * @param {ICAL.Event} component    Top level component\n     */\n    onevent: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Process a string or parse ical object.  This function itself will return\n     * nothing but will start the parsing process.\n     *\n     * Events must be registered prior to calling this method.\n     *\n     * @param {ICAL.Component|String|Object} ical      The component to process,\n     *        either in its final form, as a jCal Object, or string representation\n     */\n    process: function(ical) {\n      //TODO: this is sync now in the future we will have a incremental parser.\n      if (typeof(ical) === 'string') {\n        ical = ICAL.parse(ical);\n      }\n\n      if (!(ical instanceof ICAL.Component)) {\n        ical = new ICAL.Component(ical);\n      }\n\n      var components = ical.getAllSubcomponents();\n      var i = 0;\n      var len = components.length;\n      var component;\n\n      for (; i < len; i++) {\n        component = components[i];\n\n        switch (component.name) {\n          case 'vtimezone':\n            if (this.parseTimezone) {\n              var tzid = component.getFirstPropertyValue('tzid');\n              if (tzid) {\n                this.ontimezone(new ICAL.Timezone({\n                  tzid: tzid,\n                  component: component\n                }));\n              }\n            }\n            break;\n          case 'vevent':\n            if (this.parseEvent) {\n              this.onevent(new ICAL.Event(component));\n            }\n            break;\n          default:\n            continue;\n        }\n      }\n\n      //XXX: ideally we should do a \"nextTick\" here\n      //     so in all cases this is actually async.\n      this.oncomplete();\n    }\n  };\n\n  return ComponentParser;\n}());\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import * as ICAL from 'ical.js';\nimport { derived, writable } from 'svelte/store';\n\nexport const holidaysICS = writable(null);\nexport const birthdaysICS = writable(null);\n\nconst parseICS = (ics, set) => {\n    if (ics == null) return [];\n\n    ics.text().then(text => {\n        const jcalData = ICAL.parse(text);\n        const vcalendar = new ICAL.Component(jcalData);\n        const components = vcalendar.getAllSubcomponents(\"vevent\");\n        const events = components.map(it => new ICAL.Event(it));\n\n        const result = events.map(it => ({\n            isRecurring: it.isRecurring(),\n            start: it.startDate.toJSDate(),\n            end: it.endDate.toJSDate(),\n            summary: it.summary,\n        }));\n\n        console.table(result);\n        set(result);\n    });\n}\n\nexport const holidays = derived(holidaysICS, parseICS, [])\nexport const birthdays = derived(birthdaysICS, parseICS, [])","<script>\n    import { birthdaysICS, holidaysICS } from \"./stores\";\n\n    let holidaysFile;\n    let birthdayFile;\n\n    $: if (holidaysFile) {\n        console.log(\"holidaysFile:\", holidaysFile);\n        holidaysICS.set(holidaysFile[0]);\n    }\n\n    $: if (birthdayFile) {\n        console.log(\"birthdayFile:\", birthdayFile);\n        birthdaysICS.set(birthdayFile[0]);\n    }\n\n    // TODO: DayOfFile\n</script>\n\n<div\n    class=\"flex flex-col gap-y-4\n    max-h-[14rem] landscape:max-h-[7rem] opacity-100 my-8\n    items-center justify-center\"\n>\n    <p class=\"text-stone-500\">Add events to calendar in .ics format</p>\n\n    <div class=\"flex flex-col landscape:flex-row gap-x-16 gap-y-8\">\n        <div\n            class=\"flex flex-col group gap-y-2\"\n            title=\"Select an .ICS file with the holidays, you can download one from Google Calendar.\"\n        >\n            <label for=\"holidays\" class=\"font-semibold\">Holidays 📅</label>\n            <input\n                type=\"file\"\n                accept=\"text/calendar\"\n                id=\"holidays\"\n                bind:files={holidaysFile}\n                multiple\n                title=\"Select an .ICS file with the holidays, you can download one from Google Calendar.\"\n            />\n        </div>\n\n        <div\n            class=\"flex flex-col group gap-y-2\"\n            title=\"Select a .ICS file with birthdays.\"\n        >\n            <label for=\"birthdays\" class=\"font-semibold\">Birthdays 🎂 </label>\n            <input\n                type=\"file\"\n                accept=\"text/calendar\"\n                id=\"birthdays\"\n                bind:files={birthdayFile}\n                title=\"Select a .ICS file with birthdays.\"\n            />\n        </div>\n    </div>\n</div>\n\n<style>\n    input[type=\"file\"] {\n        @apply text-sm text-stone-500\n            file:mr-2 file:py-2 file:px-4\n            file:rounded-full file:border file:border-solid file:border-stone-200\n            file:text-sm\n            file:bg-stone-100 file:text-stone-700\n            group-hover:file:bg-stone-200;\n    }\n</style>\n","<script>\n\timport { birthdays, holidays } from \"./stores.js\";\n\n\texport let date;\n\n\tconst isBetween = (start, d, end) =>\n\t\tstart.getTime() <= d.getTime() && d.getTime() < end.getTime();\n\n\tconst resetYear = (d) => {\n\t\tconst result = new Date(d);\n\t\tresult.setFullYear(date.getFullYear());\n\t\treturn result;\n\t};\n\n\tconst todayEvents = (it) =>\n\t\tisBetween(it.start, date, it.end) ||\n\t\t(it.isRecurring &&\n\t\t\tisBetween(resetYear(it.start), date, resetYear(it.end)));\n\n\t$: holis = $holidays.filter(todayEvents);\n\t$: births = $birthdays.filter(todayEvents);\n</script>\n\n<div\n\tclass=\"flex flex-col bg-white\n\toverflow-hidden\n\tborder-x border-white\n\t{date.getDay() % 2 === 1 ? 'bg-primary/[.2]' : ''}\n\tp-1 print:p-[1vh]\"\n>\n\t<div\n\t\tclass=\"justify-center leading-none\n\t\ttext-xl print:text-[4.5vh]\n\t\t{date.getDay() === 0 || date.getDay() === 6\n\t\t\t? 'text-primary font-black'\n\t\t\t: 'text-black'}\"\n\t>\n\t\t{date.getDate()}\n\t</div>\n\t{#each holis as h}\n\t\t<div class=\"text-caption\">\n\t\t\t• {h.summary}\n\t\t</div>\n\t{/each}\n\t<div class=\"flex-grow\" />\n\t{#if births.length}\n\t\t<div class=\"text-[0.5rem] print:text-[2vh] leading-none py-1\">🎂</div>\n\t\t{#each births as b}\n\t\t\t<div class=\"text-caption\">\n\t\t\t\t• {b.summary}\n\t\t\t</div>\n\t\t{/each}\n\t{/if}\n\t<div class=\"border-b-2 m-1 border-primary\" />\n</div>\n\n<style>\n\t.text-caption {\n\t\t@apply leading-none font-['Patrick_Hand_SC'] text-[0.35rem] print:text-[1.25vh];\n\t}\n</style>\n","<script>\n    export let day;\n</script>\n\n<div\n    class=\"flex items-center justify-center bg-white\n    text-primary font-primary\n    border border-white\n    text-sm print:text-[2.5vh]\"\n>\n    {day.toUpperCase()}\n</div>\n","<script>\n    export let month = 1;\n    export let year = 2022;\n    export let date = \"large\";\n\n    let span = date == \"large\" ? \"3\" : \"2\";\n\n    let now = new Date(Date.UTC(year, month + 1));\n    let monthName = now.toLocaleDateString(\"es-US\", {\n        month: \"short\",\n    }).substring(0, 3); // Only 3 characters\n</script>\n\n<div\n    class=\"relative leading-none\n    overflow-hidden col-span-{span}\n    border border-white\n    text-primary bg-white\"\n>\n    <div class=\"absolute grid content-center inset-0 z-10\">\n        <div\n            class=\"uppercase font-bold leading-none\n            text-4xl print:text-[6vh]\"\n        >\n            {monthName.replaceAll(\".\", \"\")}\n        </div>\n        <div\n            class=\"font-light leading-none\n            text-3xl print:text-[5vh]\"\n        >\n            {year}\n        </div>\n    </div>\n</div>\n","<script>\n    import DayOfMonth from \"./DayOfMonth.svelte\";\n    import DayOfWeek from \"./DayOfWeek.svelte\";\n    import YearMonth from \"./YearMonth.svelte\";\n\n    export let month = 0;\n    export let year = 2022;\n\n    console.groupCollapsed(`Process: ${year} ${month}`);\n\n    let dayNames = [\"dom\", \"lun\", \"mar\", \"mie\", \"jue\", \"vie\", \"sab\"];\n\n    let dayNumbers = getMatrix(year, month);\n\n    let lastRow = emptyDaysInWeek(dayNumbers[4]);\n    if (lastRow >= 3) {\n        // three empty space in the last column\n        dayNumbers[4][5] = \"mini\";\n        dayNumbers[4][6] = null;\n    } else {\n        // empty space in the first column\n        dayNumbers[0][0] = \"mini\";\n        dayNumbers[0][1] = null;\n    }\n    setEmptyDays(dayNumbers, 0);\n    setEmptyDays(dayNumbers, 4);\n\n    console.table(dayNumbers);\n\n    console.groupEnd();\n\n    function getMatrix(year, month) {\n        let currentDate = new Date(year, month);\n        let firstDay = currentDate.getDay();\n        let totalDays = daysInMonth(year, month);\n        let fillPreviousMonth = weekCount(year, month - 1) == 6;\n        console.log(`firstDay: ${firstDay}`);\n        console.log(`totalDays: ${totalDays}`);\n        console.log(`fillPreviousMonth: ${fillPreviousMonth}`);\n\n        let array = Array(5)\n            .fill(0)\n            .map((_) => Array(7).fill(0));\n\n        for (let i = 0; i < 5; i++) {\n            for (let j = 0; j < 7; j++) {\n                let d = i * 7 + j;\n                if (\n                    (fillPreviousMonth || d >= firstDay) &&\n                    d < firstDay + totalDays\n                ) {\n                    array[i][j] = new Date(year, month, d - firstDay + 1);\n                }\n            }\n        }\n        return array;\n    }\n\n    function daysInMonth(year, month) {\n        return 32 - new Date(year, month, 32).getDate();\n    }\n\n    function weekCount(year, month) {\n        var firstOfMonth = new Date(year, month, 1);\n        var lastOfMonth = new Date(year, month + 1, 0);\n        var used = firstOfMonth.getDay() + lastOfMonth.getDate();\n        return Math.ceil(used / 7);\n    }\n\n    function emptyDaysInWeek(week) {\n        return week.reduce((acc, b) => acc + (b === 0 ? 1 : 0), 0);\n    }\n\n    function indexEmptyDaysInWeek(week) {\n        return week.reduce(\n            (acc, w, i) => (w === 0 ? (acc.push(i), acc) : acc),\n            [],\n        );\n    }\n\n    function setEmptyDays(dayNumbers, week) {\n        let emptyDays = indexEmptyDaysInWeek(dayNumbers[week]);\n        if (emptyDays.length >= 2) {\n            for (const i of emptyDays) {\n                dayNumbers[week][i] = null;\n            }\n            let first = emptyDays[0];\n            dayNumbers[week][first] = emptyDays.length;\n        }\n    }\n</script>\n\n<div\n    class=\"grid grid-cols-7\n    grid-rows-[1.5rem,repeat(5,1fr)] print:grid-rows-[4.5vh,repeat(5,1fr)]\n    pt-2 print:pt-[1.5vh]\n    border border-2 print:border-[0.5vh] border-primary\n    justify-items-stretch h-full\n    shadow-xl shadow-[color:rgb(var(--color-primary)/0.1)] print:shadow-none\n    font-primary bg-white\"\n>\n    {#each dayNames as day}\n        <DayOfWeek {day} />\n    {/each}\n\n    {#each dayNumbers as weeks}\n        {#each weeks as date}\n            {#if typeof date === \"string\"}\n                <YearMonth {year} {month} {date} />\n            {:else if typeof date === \"number\"}\n                {#if date > 0}\n                    <div class=\"bg-white z-10 border border-white col-span-{date}\" />\n                {:else}\n                    <div class=\"bg-white\" />\n                {/if}\n            {:else if date !== null}\n                <DayOfMonth {date} />\n            {/if}\n        {/each}\n    {/each}\n</div>\n","<script>\n\timport Holidays from \"./Holidays.svelte\";\n\timport Month from \"./Month.svelte\";\n\n\tlet months = [...Array(12).keys()];\n\n\tlet now = new Date();\n\n\tlet year = now.getFullYear();\n\n\tconsole.log(`Now is ${year} ${now.getMonth()}`);\n\n\t// after half the year, move on to the next year\n\tif (now.getMonth() > 6) {\n\t\tyear += 1;\n\t}\n\n</script>\n\n<svelte:head>\n\t<title>Almanako {year}</title>\n</svelte:head>\n\n<main\n\tclass=\"bg-stone-100 text-center pt-12 print:p-0 selection:bg-stone-200 selection:text-stone-900\"\n>\n\t<h1 class=\"font-sans font-black text-fluid text-stone-700 print:hidden\">\n\t\tAlmanako\n\t</h1>\n\t<p class=\"font-sans text-2xl text-stone-900 print:hidden\">\n\t\tPress Ctrl+P to print\n\t</p>\n\n\t<div class=\"print:hidden my-4\">\n\t\t<Holidays />\n\t</div>\n\n\t<div\n\t\tclass=\"flex flex-wrap justify-center\n\t\tgap-16 print:gap-0\n\t\tpx-12 mx-auto my-12 print:m-0\n\t\twill-change-transform\"\n\t>\n\t\t{#each months as month}\n\t\t\t<div\n\t\t\t\tclass=\"shrink-0 aspect-[1/1.4142]\n\t\t\t\tmonth-{month}\n\t\t\t\tw-80 print:h-screen print:w-screen\"\n\t\t\t>\n\t\t\t\t<Month {month} {year} />\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n\n\t<footer class=\"p-4 bg-stone-50 print:hidden\">\n\t\tMade with 👑🦠 from Argentina,\n\t\t<a\n\t\t\tclass=\"underline decoration-rose-500 text-rose-500\"\n\t\t\thref=\"https://github.com/AIDEA775/almanako\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t\ttarget=\"_blank\">fork me!</a\n\t\t>\n\t</footer>\n</main>\n\n<style lang=\"postcss\" global>\n\t@tailwind base;\n\t@tailwind components;\n\t@tailwind utilities;\n\n\thtml,\n\tbody {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\t-webkit-print-color-adjust: exact !important;\n\t}\n\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n\n\t.text-fluid {\n\t\tfont-size: clamp(2rem, 4vw, 4rem);\n\t}\n\n\t.month-0 {\n\t\t--color-primary: 48 188 102;\n\t\t--font-primary: Bangers;\n\t}\n\t.month-1 {\n\t\t--color-primary: 235 86 220;\n\t\t--font-primary: Limelight;\n\t}\n\t.month-2 {\n\t\t--color-primary: 220 131 116;\n\t\t--font-primary: Indie Flower;\n\t}\n\t.month-3 {\n\t\t--color-primary: 157 201 91;\n\t\t--font-primary: Kiwi Maru;\n\t}\n\t.month-4 {\n\t\t--color-primary: 55 179 247;\n\t\t--font-primary: Cinzel;\n\t}\n\t.month-5 {\n\t\t--color-primary: 93 107 237;\n\t\t--font-primary: Sour Gummy;\n\t}\n\t.month-6 {\n\t\t--color-primary: 255 172 58;\n\t\t--font-primary: Rampart One;\n\t}\n\t.month-7 {\n\t\t--color-primary: 169 121 250;\n\t\t--font-primary: Rye;\n\t}\n\t.month-8 {\n\t\t--color-primary: 250 204 116;\n\t\t--font-primary: Agu Display;\n\t}\n\t.month-9 {\n\t\t--color-primary: 88 216 218;\n\t\t--font-primary: Mystery Quest;\n\t}\n\t.month-10 {\n\t\t--color-primary: 36 202 168;\n\t\t--font-primary: Metal Mania;\n\t}\n\t.month-11 {\n\t\t--color-primary: 220 68 93;\n\t\t--font-primary: Rubik Moonrocks;\n\t}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","ICAL","OPTIONS","zones","TimezoneService","module","exports","foldLength","newLineChar","helpers","updateTimezones","vcal","allsubs","properties","vtimezones","reqTzid","tzid","getAllSubcomponents","getFirstProperty","getFirstValue","concat","getAllProperties","getParameter","hasOwnProperty","removeSubcomponent","addSubcomponent","get","isStrictlyNaN","number","isNaN","strictParseInt","string","result","parseInt","Error","formatClassType","unescapedIndexOf","buffer","search","pos","binsearchInsert","list","seekVal","cmpfunc","mid","cmpval","low","high","Math","floor","dumpn","debug","console","input","log","dump","arguments","clone","aSrc","aDeep","Date","getTime","isArray","arr","prototype","call","foldline","aLine","line","line_length","cp","codePointAt","substring","substr","pad2","String","trunc","ceil","inherits","base","child","extra","F","extend","source","key","descr","getOwnPropertyDescriptor","defineProperty","design","FROM_VCARD_NEWLINE","TO_VCARD_NEWLINE","createTextType","fromNewline","toNewline","matches","fromICAL","aValue","structuredEscape","newline","RegExp","replace","replaceNewlineReplace","replaceNewline","toICAL","regEx","str","DEFAULT_TYPE_TEXT","defaultType","DEFAULT_TYPE_TEXT_MULTI","multiValue","DEFAULT_TYPE_TEXT_STRUCTURED","structuredValue","DEFAULT_TYPE_INTEGER","DEFAULT_TYPE_DATETIME_DATE","allowedTypes","DEFAULT_TYPE_DATETIME","DEFAULT_TYPE_URI","DEFAULT_TYPE_UTCOFFSET","DEFAULT_TYPE_RECUR","DEFAULT_TYPE_DATE_ANDOR_TIME","commonProperties","categories","url","version","uid","commonValues","boolean","values","float","parsed","parseFloat","integer","decorate","UtcOffset","fromString","undecorate","toString","icalValues","uri","binary","aString","Binary","aBinary","date","aProp","strict","Time","fromDateString","len","fromDateTimeString","duration","Duration","period","parts","split","isValueString","join","Period","fromJSON","toJSON","recur","Recur","_stringToData","k","val","numericDayToIcalDay","toUpperCase","fromData","aRecur","time","icalProperties","action","attach","attendee","calscale","class","comment","completed","contact","created","description","dtend","dtstamp","dtstart","due","exdate","exrule","freebusy","geo","location","method","organizer","priority","prodid","repeat","rdate","detectType","resources","rrule","sequence","status","summary","transp","trigger","tzoffsetfrom","tzoffsetto","tzurl","tzname","vcardValues","VCardTime","fromDateAndOrTimeString","splitzone","_splitZone","zone","isFromIcal","lastChar","signChar","sign","timestamp","vcardProperties","adr","anniversary","bday","caladruri","caluri","clientpidmap","email","fburl","gender","impp","kind","lang","logo","member","n","nickname","note","org","photo","related","rev","role","sound","tel","title","tz","xml","vcard3Values","vcard","vcard3Properties","label","mailer","agent","icalSet","param","cutype","allowXName","allowIanaToken","valueType","multiValueSeparateDQuote","encoding","fbtype","partstat","range","reltype","rsvp","property","vcardSet","vcard3Set","defaultSet","components","vcard3","vevent","vtodo","vjournal","valarm","vtimezone","daylight","standard","icalendar","getDesignSet","componentName","stringify","LINE_ENDING","DEFAULT_VALUE_TYPE","jCal","designSet","propIdx","propLen","designSetName","comps","compIdx","compLen","noFold","paramName","jsName","params","_rfc6868Unescape","propertyValue","propDetails","isDefault","slice","delim","innerMulti","x","RFC6868_REPLACE_MAP","parse","CHAR","ParserError","message","e","stack","shift","parser","state","_eachLine","err","_handleContentLine","lastParamIndex","lastValuePos","parsedParams","valuePos","paramPos","toLowerCase","_parseParameters","newComponent","propertyDetails","_parseMultiValue","_parseValue","start","lcname","mvdelim","lastParam","_rfc6868Escape","extendedValue","nextPos","propValuePos","delimiter","lastPos","firstChar","newlineOffset","trim","Component","parent","_hydratedPropertyCount","_hydratedComponentCount","_designSet","_hydrateComponent","_components","comp","_hydrateProperty","_properties","prop","Property","getFirstSubcomponent","jCalLen","hasProperty","getFirstPropertyValue","_removeObjectByIndex","jCalIndex","cache","_removeObject","nameOrObject","objects","cached","_removeAllObjects","idx","nameOrComp","removed","removeAllSubcomponents","addProperty","TypeError","removeProperty","addPropertyWithValue","setValue","updatePropertyWithValue","nameOrProp","removeAllProperties","_parent","getDefaultType","_updateType","designSetChanged","isDecorated","isMultiValue","isStructuredValue","_hydrateValue","_values","_decorate","_undecorate","_setDecoratedValue","getFirstParameter","parameters","setParameter","removeParameter","details","resetType","removeAllValues","getValues","setValues","icaltype","toICALString","aData","hours","minutes","factor","fromSeconds","toSeconds","_normalize","aSeconds","secs","abs","compare","other","decodeValue","_b64_decode","setEncodedValue","_b64_encode","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","o1","o2","o3","fromCharCode","wrappedJSObject","end","icalclass","getDuration","subtractDate","getEnd","addDuration","aLenient","fromDateOrDateTimeString","DURATION_LETTERS","parseDurationChunk","letter","object","isNegative","num","weeks","days","seconds","propsToCopy","reset","aOther","thisSeconds","otherSeconds","normalize","aStr","dict","chunks","numeric","Timezone","tznames","latitude","longitude","expandedUntilYear","changes","utcOffset","tt","utcTimezone","localTimezone","_ensureCoverage","year","tt_change","month","day","hour","minute","second","change_num","_findNearbyChange","change_num_to_use","step","change","prevUtcOffset","adjust_change","_compare_change_fn","zone_change","tmp_change","prev_zone_change","is_daylight","aYear","_minimumExpansionYear","today","now","changesEndYear","EXTRA_COVERAGE","MAX_YEAR","subcomps","_expandComponent","sort","aComponent","convert_tzoffset","offset","init_changes","changebase","rdatekey","isDate","until","adjust","occ","iterator","next","convert_time","from_zone","to_zone","count","utc","Z","UTC","GMT","register","timezone","remove","_time","_dowCache","_wnCache","_cachedUnixTime","_pendingNormalization","epochTime","resetTo","fromJSDate","aDate","useUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","aZone","dayOfWeek","aWeekStart","firstDow","SUNDAY","dowCacheKey","q","Y","h","dayOfYear","is_leap","isLeapYear","daysInYearPassedMonth","startOfWeek","endOfWeek","startOfMonth","endOfMonth","daysInMonth","startOfYear","endOfYear","startDoyWeek","aFirstDayOfWeek","delta","getDominicalLetter","nthWeekDay","aDayOfWeek","aPos","weekday","otherDay","isNthWeekDay","dow","weekNumber","week1","wnCacheKey","dt","isoyear","weekOneStarts","daysBetween","answer","aDuration","mult","unixTime","toUnixTime","subtractDateTz","compareDateOnlyTz","cmp","_cmp_attr","convertToZone","rc","copy","zone_equals","toJSDate","aExtraDays","aExtraHours","aExtraMinutes","aExtraSeconds","aTime","minutesOverflow","hoursOverflow","daysOverflow","yearsOverflow","fromUnixTime","epoch","ms","defineAttr","set","fromDayOfYear","aDayOfYear","doy","auto_normalize","fromStringv2","aProperty","t","wkst","DEFAULT_WEEK_START","THURSDAY","yr","LTRS","dom","MONDAY","TUESDAY","WEDNESDAY","FRIDAY","SATURDAY","apply","p2","y","mm","s","hasMonth","hasDay","hasHour","hasMinute","hasSecond","datepart","timepart","aIcalType","part","v","tmz","tm","dtlen","tmlen","hasDashDate","hasDashTime","DOW_MAP","SU","MO","TU","WE","TH","FR","SA","REVERSE_DOW_MAP","parseNumericValue","min","max","undefined","interval","freq","aStart","RecurIterator","rule","isFinite","isByCount","addComponent","aType","ucname","setComponent","aValues","getComponent","getNextOccurrence","aStartTime","aRecurrenceId","iter","uckey","partDesign","optionDesign","INTERVAL","icalDayToNumericDay","res","kparts","VALID_DAY_NAMES","VALID_BYDAY_PART","ALLOWED_FREQ","FREQ","fmtIcal","COUNT","UNTIL","WKST","test","BYSECOND","bind","BYMINUTE","BYHOUR","BYDAY","BYMONTHDAY","BYYEARDAY","BYWEEKNO","BYMONTH","BYSETPOS","partArr","partArrIdx","partArrLen","icalrecur_iterator","last","occurrence_number","by_indices","initialized","by_data","days_index","sort_byday_rules","setup_defaults","bydayParts","ruleDayOfWeek","wkdy","dayName","expand_year_days","increment_year","_nextByYearDay","has_by_data","tempLast","initLast","dayOfMonth","increment_month","_byDayAndMonthDay","valid","before","next_second","next_minute","next_hour","next_day","next_week","next_month","next_year","check_contracting_rules","next_generic","increment_second","inc","increment_generic","increment_minute","increment_hour","this_freq","increment_monthday","end_of_data","next_weekday_by_week","week_no","normalizeByMonthDayRules","rules","newRules","ruleIdx","isInit","byMonthDay","dateLen","byDay","dateIdx","dayLen","dataIsValid","self","lastDay","initMonth","nextMonth","monthsCounter","dayIdx","data_valid","setpos","setpos_total","last_day","is_day_in_byday","check_set_position","coded_day","match","aRuleType","aInterval","aDateAttr","aFollowingAttr","aPreviousIncr","has_by_rule","dta","years","aFactor","aNextIncrement","nextunit","validWeeks","monthIdx","first_week","last_week","weekIdx","weekno","partCount","t1","monthkey","t2","monthdaykey","t3","day_","month_","expand_by_day","first_dow","doy_offset","last_dow","by_month_day","spIndex","daycodedkey","month_day","first_matching_day","last_matching_day","expandedDays","daykey","days_list","tmp","start_dow","end_dow","end_year_day","first","this_dow","aRules","j","check_contract_restriction","indexMapValue","_indexMap","ruleMapValue","_expandMap","pass","CONTRACT","ruleType","bydatakey","weekNo","req","deftime","SECONDLY","MINUTELY","HOURLY","DAILY","WEEKLY","MONTHLY","YEARLY","UNKNOWN","EXPAND","ILLEGAL","RecurExpansion","formatTime","item","compareTime","ruleDates","exDates","complete","ruleIterators","ruleDateInc","exDateInc","exDate","ruleDate","_init","currentTry","_nextRecurrenceIter","_nextRuleDay","_nextExDay","_extractDates","propertyName","handleProp","iters","iterTime","chosenIter","iterIdx","Event","_rangeExceptionCache","exceptions","rangeExceptions","strictExceptions","relateException","isRecurrenceException","compareRangeException","THISANDFUTURE","id","recurrenceId","modifiesFuture","findRangeException","rangeItem","getOccurrenceDetails","occurrence","utcId","startDate","endDate","rangeExceptionId","exception","startDiff","original","newStart","startTime","isRecurring","getRecurrenceTypes","_firstProp","_setProp","_setTime","attendees","color","propName","ComponentParser","parseEvent","parseTimezone","oncomplete","onerror","ontimezone","onevent","process","ical","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","stores_array","auto","inited","pending","cleanup","sync","unsubscribers","holidaysICS","birthdaysICS","parseICS","ics","jcalData","ICAL.parse","ICAL.Component","it","ICAL.Event","table","holidays","birthdays","holidaysFile","birthdayFile","getDay","isBetween","resetYear","setFullYear","todayEvents","holis","$holidays","births","$birthdays","replaceAll","span","monthName","toLocaleDateString","getMatrix","firstDay","totalDays","fillPreviousMonth","firstOfMonth","lastOfMonth","used","weekCount","array","_","setEmptyDays","dayNumbers","week","emptyDays","reduce","acc","w","indexEmptyDaysInWeek","groupCollapsed","groupEnd","months","body"],"mappings":"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"}